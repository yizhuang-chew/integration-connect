function _toPrimitive(input, hint) {
  if (typeof input !== "object" || input === null) return input;
  var prim = input[Symbol.toPrimitive];
  if (prim !== undefined) {
    var res = prim.call(input, hint || "default");
    if (typeof res !== "object") return res;
    throw new TypeError("@@toPrimitive must return a primitive value.");
  }
  return (hint === "string" ? String : Number)(input);
}

function _toPropertyKey(arg) {
  var key = _toPrimitive(arg, "string");
  return typeof key === "symbol" ? key : String(key);
}

function _defineProperty(obj, key, value) {
  key = _toPropertyKey(key);
  if (key in obj) {
    Object.defineProperty(obj, key, {
      value: value,
      enumerable: true,
      configurable: true,
      writable: true
    });
  } else {
    obj[key] = value;
  }
  return obj;
}

/**
 * Code generated by [commercetools RMF-Codegen](https://github.com/commercetools/rmf-codegen). DO NOT EDIT.
 * Please don't change this file manually but run `rmf-codegen generate <raml_file_path> -o <output_path> -t typescript_client` to update it.
 * For more information about the commercetools platform APIs, visit https://docs.commercetools.com/.
 */

function isDefined(value) {
  return typeof value !== 'undefined' && value !== null;
}
function stringify(object) {
  const params = new URLSearchParams(object);
  for (const [key, value] of Object.entries(object)) {
    if (Array.isArray(value)) {
      params.delete(key);
      value.filter(Boolean).forEach(v => params.append(key, v));
    }
  }
  return params.toString();
}
function cleanObject(obj) {
  return Object.keys(obj).reduce((result, key) => {
    const value = obj[key];
    if (Array.isArray(value)) {
      const values = value.filter(isDefined);
      if (!values.length) {
        return result;
      }
      return {
        ...result,
        [key]: values
      };
    }
    if (isDefined(value)) {
      return {
        ...result,
        [key]: value
      };
    }
    return result;
  }, {});
}
function formatQueryString(variableMap) {
  const map = cleanObject(variableMap);
  const result = stringify(map);
  if (result === '') {
    return '';
  }
  return `?${result}`;
}
function buildRelativeUri(commonRequest) {
  const pathMap = commonRequest.pathVariables;
  var uri = commonRequest.uriTemplate;
  for (const param in pathMap) {
    uri = uri.replace(`{${param}}`, `${pathMap[param]}`);
  }
  const resQuery = formatQueryString(commonRequest.queryParams || {});
  return `${uri}${resQuery}`;
}

class ApiRequest {
  constructor(request, requestExecutor) {
    this.requestExecutor = requestExecutor;
    _defineProperty(this, "request", void 0);
    this.request = {
      ...request,
      uri: buildRelativeUri(request)
    };
  }
  clientRequest() {
    return this.request;
  }
  execute() {
    return this.requestExecutor(this.request);
  }
}

/**
 * Code generated by [commercetools RMF-Codegen](https://github.com/commercetools/rmf-codegen). DO NOT EDIT.
 * Please don't change this file manually but run `rmf-codegen generate raml_file_path -o output_path -t typescript_client` to update it.
 * For more information about the commercetools platform APIs, visit https://docs.commercetools.com/.
 */
/**
 **/
class ByProjectKeyApiClientsByIDRequestBuilder {
  constructor(args) {
    this.args = args;
  }
  get(methodArgs) {
    return new ApiRequest({
      baseUri: this.args.baseUri,
      method: 'GET',
      uriTemplate: '/{projectKey}/api-clients/{ID}',
      pathVariables: this.args.pathArgs,
      headers: {
        ...(methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers)
      }
    }, this.args.executeRequest);
  }
  delete(methodArgs) {
    return new ApiRequest({
      baseUri: this.args.baseUri,
      method: 'DELETE',
      uriTemplate: '/{projectKey}/api-clients/{ID}',
      pathVariables: this.args.pathArgs,
      headers: {
        ...(methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers)
      }
    }, this.args.executeRequest);
  }
}

/**
 * Code generated by [commercetools RMF-Codegen](https://github.com/commercetools/rmf-codegen). DO NOT EDIT.
 * Please don't change this file manually but run `rmf-codegen generate raml_file_path -o output_path -t typescript_client` to update it.
 * For more information about the commercetools platform APIs, visit https://docs.commercetools.com/.
 */
/**
 **/
class ByProjectKeyApiClientsRequestBuilder {
  constructor(args) {
    this.args = args;
  }
  withId(childPathArgs) {
    return new ByProjectKeyApiClientsByIDRequestBuilder({
      pathArgs: {
        ...this.args.pathArgs,
        ...childPathArgs
      },
      executeRequest: this.args.executeRequest,
      baseUri: this.args.baseUri
    });
  }
  get(methodArgs) {
    return new ApiRequest({
      baseUri: this.args.baseUri,
      method: 'GET',
      uriTemplate: '/{projectKey}/api-clients',
      pathVariables: this.args.pathArgs,
      headers: {
        ...(methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers)
      },
      queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs
    }, this.args.executeRequest);
  }
  post(methodArgs) {
    return new ApiRequest({
      baseUri: this.args.baseUri,
      method: 'POST',
      uriTemplate: '/{projectKey}/api-clients',
      pathVariables: this.args.pathArgs,
      headers: {
        'Content-Type': 'application/json',
        ...(methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers)
      },
      queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs,
      body: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.body
    }, this.args.executeRequest);
  }
}

/**
 * Code generated by [commercetools RMF-Codegen](https://github.com/commercetools/rmf-codegen). DO NOT EDIT.
 * Please don't change this file manually but run `rmf-codegen generate raml_file_path -o output_path -t typescript_client` to update it.
 * For more information about the commercetools platform APIs, visit https://docs.commercetools.com/.
 */
/**
 **/
class ByProjectKeyAsAssociateByAssociateIdBusinessUnitsByIDRequestBuilder {
  constructor(args) {
    this.args = args;
  }
  get(methodArgs) {
    return new ApiRequest({
      baseUri: this.args.baseUri,
      method: 'GET',
      uriTemplate: '/{projectKey}/as-associate/{associateId}/business-units/{ID}',
      pathVariables: this.args.pathArgs,
      headers: {
        ...(methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers)
      },
      queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs
    }, this.args.executeRequest);
  }
  post(methodArgs) {
    return new ApiRequest({
      baseUri: this.args.baseUri,
      method: 'POST',
      uriTemplate: '/{projectKey}/as-associate/{associateId}/business-units/{ID}',
      pathVariables: this.args.pathArgs,
      headers: {
        'Content-Type': 'application/json',
        ...(methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers)
      },
      queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs,
      body: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.body
    }, this.args.executeRequest);
  }
}

/**
 * Code generated by [commercetools RMF-Codegen](https://github.com/commercetools/rmf-codegen). DO NOT EDIT.
 * Please don't change this file manually but run `rmf-codegen generate raml_file_path -o output_path -t typescript_client` to update it.
 * For more information about the commercetools platform APIs, visit https://docs.commercetools.com/.
 */
/**
 **/
class ByProjectKeyAsAssociateByAssociateIdBusinessUnitsKeyByKeyRequestBuilder {
  constructor(args) {
    this.args = args;
  }
  get(methodArgs) {
    return new ApiRequest({
      baseUri: this.args.baseUri,
      method: 'GET',
      uriTemplate: '/{projectKey}/as-associate/{associateId}/business-units/key={key}',
      pathVariables: this.args.pathArgs,
      headers: {
        ...(methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers)
      },
      queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs
    }, this.args.executeRequest);
  }
  post(methodArgs) {
    return new ApiRequest({
      baseUri: this.args.baseUri,
      method: 'POST',
      uriTemplate: '/{projectKey}/as-associate/{associateId}/business-units/key={key}',
      pathVariables: this.args.pathArgs,
      headers: {
        'Content-Type': 'application/json',
        ...(methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers)
      },
      queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs,
      body: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.body
    }, this.args.executeRequest);
  }
}

/**
 * Code generated by [commercetools RMF-Codegen](https://github.com/commercetools/rmf-codegen). DO NOT EDIT.
 * Please don't change this file manually but run `rmf-codegen generate raml_file_path -o output_path -t typescript_client` to update it.
 * For more information about the commercetools platform APIs, visit https://docs.commercetools.com/.
 */
/**
 **/
class ByProjectKeyAsAssociateByAssociateIdBusinessUnitsRequestBuilder {
  constructor(args) {
    this.args = args;
  }
  withKey(childPathArgs) {
    return new ByProjectKeyAsAssociateByAssociateIdBusinessUnitsKeyByKeyRequestBuilder({
      pathArgs: {
        ...this.args.pathArgs,
        ...childPathArgs
      },
      executeRequest: this.args.executeRequest,
      baseUri: this.args.baseUri
    });
  }
  withId(childPathArgs) {
    return new ByProjectKeyAsAssociateByAssociateIdBusinessUnitsByIDRequestBuilder({
      pathArgs: {
        ...this.args.pathArgs,
        ...childPathArgs
      },
      executeRequest: this.args.executeRequest,
      baseUri: this.args.baseUri
    });
  }
  get(methodArgs) {
    return new ApiRequest({
      baseUri: this.args.baseUri,
      method: 'GET',
      uriTemplate: '/{projectKey}/as-associate/{associateId}/business-units',
      pathVariables: this.args.pathArgs,
      headers: {
        ...(methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers)
      },
      queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs
    }, this.args.executeRequest);
  }
  post(methodArgs) {
    return new ApiRequest({
      baseUri: this.args.baseUri,
      method: 'POST',
      uriTemplate: '/{projectKey}/as-associate/{associateId}/business-units',
      pathVariables: this.args.pathArgs,
      headers: {
        'Content-Type': 'application/json',
        ...(methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers)
      },
      queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs,
      body: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.body
    }, this.args.executeRequest);
  }
}

/**
 * Code generated by [commercetools RMF-Codegen](https://github.com/commercetools/rmf-codegen). DO NOT EDIT.
 * Please don't change this file manually but run `rmf-codegen generate raml_file_path -o output_path -t typescript_client` to update it.
 * For more information about the commercetools platform APIs, visit https://docs.commercetools.com/.
 */
/**
 **/
class ByProjectKeyAsAssociateByAssociateIdInBusinessUnitKeyByBusinessUnitKeyCartsReplicateRequestBuilder {
  constructor(args) {
    this.args = args;
  }
  /**
   *	Creates a new Cart by replicating an existing Cart or Order. Can be useful in cases where a customer wants to cancel a recent order to make some changes or reorder a previous order.
   *
   *	The replicated Cart preserves Customer information, Line Items and Custom Line Items, Custom Fields, Discount Codes, and other settings of the Cart or Order. If the Line Items become invalid, for example, due to removed Products or Prices, they are removed from the new Cart. If the Customer switches to another Customer Group, the new Cart is updated with the new value. It has up-to-date Tax Rates, Prices, and Line Item product data and is in `Active` [CartState](ctp:api:type:CartState).
   *
   *	The new Cart does not contain Payments or Deliveries. The [State](ctp:api:type:ItemState) of Line Items and Custom Line Items is reset to `initial`.
   *
   *	If the Cart exists in the [Project](ctp:api:type:Project) but does not reference the requested [BusinessUnit](ctp:api:type:BusinessUnit), this method returns an [InvalidOperation](ctp:api:type:InvalidOperationError) error.
   *
   */
  post(methodArgs) {
    return new ApiRequest({
      baseUri: this.args.baseUri,
      method: 'POST',
      uriTemplate: '/{projectKey}/as-associate/{associateId}/in-business-unit/key={businessUnitKey}/carts/replicate',
      pathVariables: this.args.pathArgs,
      headers: {
        'Content-Type': 'application/json',
        ...(methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers)
      },
      body: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.body
    }, this.args.executeRequest);
  }
}

/**
 * Code generated by [commercetools RMF-Codegen](https://github.com/commercetools/rmf-codegen). DO NOT EDIT.
 * Please don't change this file manually but run `rmf-codegen generate raml_file_path -o output_path -t typescript_client` to update it.
 * For more information about the commercetools platform APIs, visit https://docs.commercetools.com/.
 */
/**
 **/
class ByProjectKeyAsAssociateByAssociateIdInBusinessUnitKeyByBusinessUnitKeyCartsByIDRequestBuilder {
  constructor(args) {
    this.args = args;
  }
  /**
   *	If the Cart exists in the [Project](ctp:api:type:Project) but does not reference the requested [BusinessUnit](ctp:api:type:BusinessUnit), this method returns an [InvalidOperation](ctp:api:type:InvalidOperationError) error.
   *
   */
  get(methodArgs) {
    return new ApiRequest({
      baseUri: this.args.baseUri,
      method: 'GET',
      uriTemplate: '/{projectKey}/as-associate/{associateId}/in-business-unit/key={businessUnitKey}/carts/{ID}',
      pathVariables: this.args.pathArgs,
      headers: {
        ...(methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers)
      },
      queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs
    }, this.args.executeRequest);
  }
  /**
   *	If the Cart exists in the [Project](ctp:api:type:Project) but does not reference the requested [BusinessUnit](ctp:api:type:BusinessUnit), this method returns an [InvalidOperation](ctp:api:type:InvalidOperationError) error.
   *
   */
  post(methodArgs) {
    return new ApiRequest({
      baseUri: this.args.baseUri,
      method: 'POST',
      uriTemplate: '/{projectKey}/as-associate/{associateId}/in-business-unit/key={businessUnitKey}/carts/{ID}',
      pathVariables: this.args.pathArgs,
      headers: {
        'Content-Type': 'application/json',
        ...(methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers)
      },
      queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs,
      body: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.body
    }, this.args.executeRequest);
  }
  /**
   *	If the Cart exists in the [Project](ctp:api:type:Project) but does not reference the requested [BusinessUnit](ctp:api:type:BusinessUnit), this method returns an [InvalidOperation](ctp:api:type:InvalidOperationError) error.
   */
  delete(methodArgs) {
    return new ApiRequest({
      baseUri: this.args.baseUri,
      method: 'DELETE',
      uriTemplate: '/{projectKey}/as-associate/{associateId}/in-business-unit/key={businessUnitKey}/carts/{ID}',
      pathVariables: this.args.pathArgs,
      headers: {
        ...(methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers)
      },
      queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs
    }, this.args.executeRequest);
  }
}

/**
 * Code generated by [commercetools RMF-Codegen](https://github.com/commercetools/rmf-codegen). DO NOT EDIT.
 * Please don't change this file manually but run `rmf-codegen generate raml_file_path -o output_path -t typescript_client` to update it.
 * For more information about the commercetools platform APIs, visit https://docs.commercetools.com/.
 */
/**
 **/
class ByProjectKeyAsAssociateByAssociateIdInBusinessUnitKeyByBusinessUnitKeyCartsKeyByKeyRequestBuilder {
  constructor(args) {
    this.args = args;
  }
  /**
   *	If the Cart exists in the [Project](ctp:api:type:Project) but does not reference the requested [BusinessUnit](ctp:api:type:BusinessUnit), this method returns an [InvalidOperation](ctp:api:type:InvalidOperationError) error.
   *
   */
  get(methodArgs) {
    return new ApiRequest({
      baseUri: this.args.baseUri,
      method: 'GET',
      uriTemplate: '/{projectKey}/as-associate/{associateId}/in-business-unit/key={businessUnitKey}/carts/key={key}',
      pathVariables: this.args.pathArgs,
      headers: {
        ...(methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers)
      },
      queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs
    }, this.args.executeRequest);
  }
  /**
   *	If the Cart exists in the [Project](ctp:api:type:Project) but does not reference the requested [BusinessUnit](ctp:api:type:BusinessUnit), this method returns an [InvalidOperation](ctp:api:type:InvalidOperationError) error.
   *
   */
  post(methodArgs) {
    return new ApiRequest({
      baseUri: this.args.baseUri,
      method: 'POST',
      uriTemplate: '/{projectKey}/as-associate/{associateId}/in-business-unit/key={businessUnitKey}/carts/key={key}',
      pathVariables: this.args.pathArgs,
      headers: {
        'Content-Type': 'application/json',
        ...(methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers)
      },
      queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs,
      body: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.body
    }, this.args.executeRequest);
  }
  /**
   *	If the Cart exists in the [Project](ctp:api:type:Project) but does not reference the requested [BusinessUnit](ctp:api:type:BusinessUnit), this method returns an [InvalidOperation](ctp:api:type:InvalidOperationError) error.
   */
  delete(methodArgs) {
    return new ApiRequest({
      baseUri: this.args.baseUri,
      method: 'DELETE',
      uriTemplate: '/{projectKey}/as-associate/{associateId}/in-business-unit/key={businessUnitKey}/carts/key={key}',
      pathVariables: this.args.pathArgs,
      headers: {
        ...(methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers)
      },
      queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs
    }, this.args.executeRequest);
  }
}

/**
 * Code generated by [commercetools RMF-Codegen](https://github.com/commercetools/rmf-codegen). DO NOT EDIT.
 * Please don't change this file manually but run `rmf-codegen generate raml_file_path -o output_path -t typescript_client` to update it.
 * For more information about the commercetools platform APIs, visit https://docs.commercetools.com/.
 */
/**
 **/
class ByProjectKeyAsAssociateByAssociateIdInBusinessUnitKeyByBusinessUnitKeyCartsRequestBuilder {
  constructor(args) {
    this.args = args;
  }
  withKey(childPathArgs) {
    return new ByProjectKeyAsAssociateByAssociateIdInBusinessUnitKeyByBusinessUnitKeyCartsKeyByKeyRequestBuilder({
      pathArgs: {
        ...this.args.pathArgs,
        ...childPathArgs
      },
      executeRequest: this.args.executeRequest,
      baseUri: this.args.baseUri
    });
  }
  withId(childPathArgs) {
    return new ByProjectKeyAsAssociateByAssociateIdInBusinessUnitKeyByBusinessUnitKeyCartsByIDRequestBuilder({
      pathArgs: {
        ...this.args.pathArgs,
        ...childPathArgs
      },
      executeRequest: this.args.executeRequest,
      baseUri: this.args.baseUri
    });
  }
  replicate() {
    return new ByProjectKeyAsAssociateByAssociateIdInBusinessUnitKeyByBusinessUnitKeyCartsReplicateRequestBuilder({
      pathArgs: {
        ...this.args.pathArgs
      },
      executeRequest: this.args.executeRequest,
      baseUri: this.args.baseUri
    });
  }
  get(methodArgs) {
    return new ApiRequest({
      baseUri: this.args.baseUri,
      method: 'GET',
      uriTemplate: '/{projectKey}/as-associate/{associateId}/in-business-unit/key={businessUnitKey}/carts',
      pathVariables: this.args.pathArgs,
      headers: {
        ...(methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers)
      },
      queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs
    }, this.args.executeRequest);
  }
  /**
   *	Creates a [Cart](ctp:api:type:Cart) in the [BusinessUnit](ctp:api:type:BusinessUnit) referenced by `businessUnitKey`. As such, the `businessUnit` field on [CartDraft](ctp:api:type:CartDraft) is ignored for this request.
   *	Creating a Cart can fail with an [InvalidOperation](ctp:api:type:InvalidOperationError) if the referenced [ShippingMethod](ctp:api:type:ShippingMethod) in the [CartDraft](ctp:api:type:CartDraft) has a predicate that does not match the Cart.
   *
   */
  post(methodArgs) {
    return new ApiRequest({
      baseUri: this.args.baseUri,
      method: 'POST',
      uriTemplate: '/{projectKey}/as-associate/{associateId}/in-business-unit/key={businessUnitKey}/carts',
      pathVariables: this.args.pathArgs,
      headers: {
        'Content-Type': 'application/json',
        ...(methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers)
      },
      queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs,
      body: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.body
    }, this.args.executeRequest);
  }
}

/**
 * Code generated by [commercetools RMF-Codegen](https://github.com/commercetools/rmf-codegen). DO NOT EDIT.
 * Please don't change this file manually but run `rmf-codegen generate raml_file_path -o output_path -t typescript_client` to update it.
 * For more information about the commercetools platform APIs, visit https://docs.commercetools.com/.
 */
/**
 **/
class ByProjectKeyAsAssociateByAssociateIdInBusinessUnitKeyByBusinessUnitKeyOrdersQuotesRequestBuilder {
  constructor(args) {
    this.args = args;
  }
  /**
   *	Creates an Order from a [Quote](ctp:api:type:Cart) in a [BusinessUnit](ctp:api:type:BusinessUnit).
   *	Creating an Order fails with an [InvalidOperation](ctp:api:type:InvalidOperationError) if the Quote does not reference the same BusinessUnit as the `businessUnitKey` path parameter.
   *
   */
  post(methodArgs) {
    return new ApiRequest({
      baseUri: this.args.baseUri,
      method: 'POST',
      uriTemplate: '/{projectKey}/as-associate/{associateId}/in-business-unit/key={businessUnitKey}/orders/quotes',
      pathVariables: this.args.pathArgs,
      headers: {
        'Content-Type': 'application/json',
        ...(methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers)
      },
      body: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.body
    }, this.args.executeRequest);
  }
}

/**
 * Code generated by [commercetools RMF-Codegen](https://github.com/commercetools/rmf-codegen). DO NOT EDIT.
 * Please don't change this file manually but run `rmf-codegen generate raml_file_path -o output_path -t typescript_client` to update it.
 * For more information about the commercetools platform APIs, visit https://docs.commercetools.com/.
 */
/**
 **/
class ByProjectKeyAsAssociateByAssociateIdInBusinessUnitKeyByBusinessUnitKeyOrdersByIDRequestBuilder {
  constructor(args) {
    this.args = args;
  }
  /**
   *	If the Order exists in the [Project](ctp:api:type:Project) but does not reference the requested [BusinessUnit](ctp:api:type:BusinessUnit), this method returns an [InvalidOperation](ctp:api:type:InvalidOperationError) error.
   *
   */
  get(methodArgs) {
    return new ApiRequest({
      baseUri: this.args.baseUri,
      method: 'GET',
      uriTemplate: '/{projectKey}/as-associate/{associateId}/in-business-unit/key={businessUnitKey}/orders/{ID}',
      pathVariables: this.args.pathArgs,
      headers: {
        ...(methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers)
      },
      queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs
    }, this.args.executeRequest);
  }
  /**
   *	If the Order exists in the [Project](ctp:api:type:Project) but does not reference the requested [BusinessUnit](ctp:api:type:BusinessUnit), this method returns an [InvalidOperation](ctp:api:type:InvalidOperationError) error.
   *
   */
  post(methodArgs) {
    return new ApiRequest({
      baseUri: this.args.baseUri,
      method: 'POST',
      uriTemplate: '/{projectKey}/as-associate/{associateId}/in-business-unit/key={businessUnitKey}/orders/{ID}',
      pathVariables: this.args.pathArgs,
      headers: {
        'Content-Type': 'application/json',
        ...(methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers)
      },
      queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs,
      body: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.body
    }, this.args.executeRequest);
  }
}

/**
 * Code generated by [commercetools RMF-Codegen](https://github.com/commercetools/rmf-codegen). DO NOT EDIT.
 * Please don't change this file manually but run `rmf-codegen generate raml_file_path -o output_path -t typescript_client` to update it.
 * For more information about the commercetools platform APIs, visit https://docs.commercetools.com/.
 */
/**
 **/
class ByProjectKeyAsAssociateByAssociateIdInBusinessUnitKeyByBusinessUnitKeyOrdersOrderNumberByOrderNumberRequestBuilder {
  constructor(args) {
    this.args = args;
  }
  /**
   *	If the Order exists in the [Project](ctp:api:type:Project) but does not reference the requested [BusinessUnit](ctp:api:type:BusinessUnit), this method returns an [InvalidOperation](ctp:api:type:InvalidOperationError) error.
   *
   */
  get(methodArgs) {
    return new ApiRequest({
      baseUri: this.args.baseUri,
      method: 'GET',
      uriTemplate: '/{projectKey}/as-associate/{associateId}/in-business-unit/key={businessUnitKey}/orders/order-number={orderNumber}',
      pathVariables: this.args.pathArgs,
      headers: {
        ...(methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers)
      },
      queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs
    }, this.args.executeRequest);
  }
  /**
   *	If the Order exists in the [Project](ctp:api:type:Project) but does not reference the requested [BusinessUnit](ctp:api:type:BusinessUnit), this method returns an [InvalidOperation](ctp:api:type:InvalidOperationError) error.
   *
   */
  post(methodArgs) {
    return new ApiRequest({
      baseUri: this.args.baseUri,
      method: 'POST',
      uriTemplate: '/{projectKey}/as-associate/{associateId}/in-business-unit/key={businessUnitKey}/orders/order-number={orderNumber}',
      pathVariables: this.args.pathArgs,
      headers: {
        'Content-Type': 'application/json',
        ...(methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers)
      },
      queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs,
      body: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.body
    }, this.args.executeRequest);
  }
}

/**
 * Code generated by [commercetools RMF-Codegen](https://github.com/commercetools/rmf-codegen). DO NOT EDIT.
 * Please don't change this file manually but run `rmf-codegen generate raml_file_path -o output_path -t typescript_client` to update it.
 * For more information about the commercetools platform APIs, visit https://docs.commercetools.com/.
 */
/**
 **/
class ByProjectKeyAsAssociateByAssociateIdInBusinessUnitKeyByBusinessUnitKeyOrdersRequestBuilder {
  constructor(args) {
    this.args = args;
  }
  orderQuote() {
    return new ByProjectKeyAsAssociateByAssociateIdInBusinessUnitKeyByBusinessUnitKeyOrdersQuotesRequestBuilder({
      pathArgs: {
        ...this.args.pathArgs
      },
      executeRequest: this.args.executeRequest,
      baseUri: this.args.baseUri
    });
  }
  withOrderNumber(childPathArgs) {
    return new ByProjectKeyAsAssociateByAssociateIdInBusinessUnitKeyByBusinessUnitKeyOrdersOrderNumberByOrderNumberRequestBuilder({
      pathArgs: {
        ...this.args.pathArgs,
        ...childPathArgs
      },
      executeRequest: this.args.executeRequest,
      baseUri: this.args.baseUri
    });
  }
  withId(childPathArgs) {
    return new ByProjectKeyAsAssociateByAssociateIdInBusinessUnitKeyByBusinessUnitKeyOrdersByIDRequestBuilder({
      pathArgs: {
        ...this.args.pathArgs,
        ...childPathArgs
      },
      executeRequest: this.args.executeRequest,
      baseUri: this.args.baseUri
    });
  }
  get(methodArgs) {
    return new ApiRequest({
      baseUri: this.args.baseUri,
      method: 'GET',
      uriTemplate: '/{projectKey}/as-associate/{associateId}/in-business-unit/key={businessUnitKey}/orders',
      pathVariables: this.args.pathArgs,
      headers: {
        ...(methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers)
      },
      queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs
    }, this.args.executeRequest);
  }
  /**
   *	Creates an Order from a [Cart](ctp:api:type:Cart) in a [BusinessUnit](ctp:api:type:BusinessUnit).
   *	The Cart must have a shipping address set before creating an Order.
   *	Creating an Order fails with an [InvalidOperation](ctp:api:type:InvalidOperationError) if the Cart does not reference the same BusinessUnit as the `businessUnitKey` path parameter.
   *
   */
  post(methodArgs) {
    return new ApiRequest({
      baseUri: this.args.baseUri,
      method: 'POST',
      uriTemplate: '/{projectKey}/as-associate/{associateId}/in-business-unit/key={businessUnitKey}/orders',
      pathVariables: this.args.pathArgs,
      headers: {
        'Content-Type': 'application/json',
        ...(methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers)
      },
      queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs,
      body: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.body
    }, this.args.executeRequest);
  }
}

/**
 * Code generated by [commercetools RMF-Codegen](https://github.com/commercetools/rmf-codegen). DO NOT EDIT.
 * Please don't change this file manually but run `rmf-codegen generate raml_file_path -o output_path -t typescript_client` to update it.
 * For more information about the commercetools platform APIs, visit https://docs.commercetools.com/.
 */
/**
 **/
class ByProjectKeyAsAssociateByAssociateIdInBusinessUnitKeyByBusinessUnitKeyQuoteRequestsByIDRequestBuilder {
  constructor(args) {
    this.args = args;
  }
  /**
   *	If the QuoteRequest exists in the [Project](ctp:api:type:Project) but does not reference the requested [BusinessUnit](ctp:api:type:BusinessUnit), this method returns an [InvalidOperation](ctp:api:type:InvalidOperationError) error.
   *
   */
  get(methodArgs) {
    return new ApiRequest({
      baseUri: this.args.baseUri,
      method: 'GET',
      uriTemplate: '/{projectKey}/as-associate/{associateId}/in-business-unit/key={businessUnitKey}/quote-requests/{ID}',
      pathVariables: this.args.pathArgs,
      headers: {
        ...(methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers)
      },
      queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs
    }, this.args.executeRequest);
  }
  /**
   *	If the QuoteRequest exists in the [Project](ctp:api:type:Project) but does not reference the requested [BusinessUnit](ctp:api:type:BusinessUnit), this method returns an [InvalidOperation](ctp:api:type:InvalidOperationError) error.
   *
   */
  post(methodArgs) {
    return new ApiRequest({
      baseUri: this.args.baseUri,
      method: 'POST',
      uriTemplate: '/{projectKey}/as-associate/{associateId}/in-business-unit/key={businessUnitKey}/quote-requests/{ID}',
      pathVariables: this.args.pathArgs,
      headers: {
        'Content-Type': 'application/json',
        ...(methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers)
      },
      queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs,
      body: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.body
    }, this.args.executeRequest);
  }
}

/**
 * Code generated by [commercetools RMF-Codegen](https://github.com/commercetools/rmf-codegen). DO NOT EDIT.
 * Please don't change this file manually but run `rmf-codegen generate raml_file_path -o output_path -t typescript_client` to update it.
 * For more information about the commercetools platform APIs, visit https://docs.commercetools.com/.
 */
/**
 **/
class ByProjectKeyAsAssociateByAssociateIdInBusinessUnitKeyByBusinessUnitKeyQuoteRequestsKeyByKeyRequestBuilder {
  constructor(args) {
    this.args = args;
  }
  /**
   *	If the QuoteRequest exists in the [Project](ctp:api:type:Project) but does not reference the requested [BusinessUnit](ctp:api:type:BusinessUnit), this method returns an [InvalidOperation](ctp:api:type:InvalidOperationError) error.
   *
   */
  get(methodArgs) {
    return new ApiRequest({
      baseUri: this.args.baseUri,
      method: 'GET',
      uriTemplate: '/{projectKey}/as-associate/{associateId}/in-business-unit/key={businessUnitKey}/quote-requests/key={key}',
      pathVariables: this.args.pathArgs,
      headers: {
        ...(methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers)
      },
      queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs
    }, this.args.executeRequest);
  }
  /**
   *	If the QuoteRequest exists in the [Project](ctp:api:type:Project) but does not reference the requested [BusinessUnit](ctp:api:type:BusinessUnit), this method returns an [InvalidOperation](ctp:api:type:InvalidOperationError) error.
   *
   */
  post(methodArgs) {
    return new ApiRequest({
      baseUri: this.args.baseUri,
      method: 'POST',
      uriTemplate: '/{projectKey}/as-associate/{associateId}/in-business-unit/key={businessUnitKey}/quote-requests/key={key}',
      pathVariables: this.args.pathArgs,
      headers: {
        'Content-Type': 'application/json',
        ...(methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers)
      },
      queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs,
      body: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.body
    }, this.args.executeRequest);
  }
}

/**
 * Code generated by [commercetools RMF-Codegen](https://github.com/commercetools/rmf-codegen). DO NOT EDIT.
 * Please don't change this file manually but run `rmf-codegen generate raml_file_path -o output_path -t typescript_client` to update it.
 * For more information about the commercetools platform APIs, visit https://docs.commercetools.com/.
 */
/**
 **/
class ByProjectKeyAsAssociateByAssociateIdInBusinessUnitKeyByBusinessUnitKeyQuoteRequestsRequestBuilder {
  constructor(args) {
    this.args = args;
  }
  withKey(childPathArgs) {
    return new ByProjectKeyAsAssociateByAssociateIdInBusinessUnitKeyByBusinessUnitKeyQuoteRequestsKeyByKeyRequestBuilder({
      pathArgs: {
        ...this.args.pathArgs,
        ...childPathArgs
      },
      executeRequest: this.args.executeRequest,
      baseUri: this.args.baseUri
    });
  }
  withId(childPathArgs) {
    return new ByProjectKeyAsAssociateByAssociateIdInBusinessUnitKeyByBusinessUnitKeyQuoteRequestsByIDRequestBuilder({
      pathArgs: {
        ...this.args.pathArgs,
        ...childPathArgs
      },
      executeRequest: this.args.executeRequest,
      baseUri: this.args.baseUri
    });
  }
  get(methodArgs) {
    return new ApiRequest({
      baseUri: this.args.baseUri,
      method: 'GET',
      uriTemplate: '/{projectKey}/as-associate/{associateId}/in-business-unit/key={businessUnitKey}/quote-requests',
      pathVariables: this.args.pathArgs,
      headers: {
        ...(methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers)
      },
      queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs
    }, this.args.executeRequest);
  }
  /**
   *	Creates a QuoteRequest in a [BusinessUnit](ctp:api:type:BusinessUnit). Creating QuoteRequest fails with an [InvalidOperation](ctp:api:type:InvalidOperationError) if the Cart does not reference the same BusinessUnit as the `businessUnitKey` path parameter.
   */
  post(methodArgs) {
    return new ApiRequest({
      baseUri: this.args.baseUri,
      method: 'POST',
      uriTemplate: '/{projectKey}/as-associate/{associateId}/in-business-unit/key={businessUnitKey}/quote-requests',
      pathVariables: this.args.pathArgs,
      headers: {
        'Content-Type': 'application/json',
        ...(methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers)
      },
      queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs,
      body: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.body
    }, this.args.executeRequest);
  }
}

/**
 * Code generated by [commercetools RMF-Codegen](https://github.com/commercetools/rmf-codegen). DO NOT EDIT.
 * Please don't change this file manually but run `rmf-codegen generate raml_file_path -o output_path -t typescript_client` to update it.
 * For more information about the commercetools platform APIs, visit https://docs.commercetools.com/.
 */
/**
 **/
class ByProjectKeyAsAssociateByAssociateIdInBusinessUnitKeyByBusinessUnitKeyQuotesByIDRequestBuilder {
  constructor(args) {
    this.args = args;
  }
  /**
   *	If the Quote exists in the [Project](ctp:api:type:Project) but does not reference the requested [BusinessUnit](ctp:api:type:BusinessUnit), this method returns an [InvalidOperation](ctp:api:type:InvalidOperationError) error.
   *
   */
  get(methodArgs) {
    return new ApiRequest({
      baseUri: this.args.baseUri,
      method: 'GET',
      uriTemplate: '/{projectKey}/as-associate/{associateId}/in-business-unit/key={businessUnitKey}/quotes/{ID}',
      pathVariables: this.args.pathArgs,
      headers: {
        ...(methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers)
      },
      queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs
    }, this.args.executeRequest);
  }
  /**
   *	If the Quote exists in the [Project](ctp:api:type:Project) but does not reference the requested [BusinessUnit](ctp:api:type:BusinessUnit), this method returns an [InvalidOperation](ctp:api:type:InvalidOperationError) error.
   *
   */
  post(methodArgs) {
    return new ApiRequest({
      baseUri: this.args.baseUri,
      method: 'POST',
      uriTemplate: '/{projectKey}/as-associate/{associateId}/in-business-unit/key={businessUnitKey}/quotes/{ID}',
      pathVariables: this.args.pathArgs,
      headers: {
        'Content-Type': 'application/json',
        ...(methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers)
      },
      queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs,
      body: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.body
    }, this.args.executeRequest);
  }
}

/**
 * Code generated by [commercetools RMF-Codegen](https://github.com/commercetools/rmf-codegen). DO NOT EDIT.
 * Please don't change this file manually but run `rmf-codegen generate raml_file_path -o output_path -t typescript_client` to update it.
 * For more information about the commercetools platform APIs, visit https://docs.commercetools.com/.
 */
/**
 **/
class ByProjectKeyAsAssociateByAssociateIdInBusinessUnitKeyByBusinessUnitKeyQuotesKeyByKeyRequestBuilder {
  constructor(args) {
    this.args = args;
  }
  /**
   *	If the Quote exists in the [Project](ctp:api:type:Project) but does not reference the requested [BusinessUnit](ctp:api:type:BusinessUnit), this method returns an [InvalidOperation](ctp:api:type:InvalidOperationError) error.
   *
   */
  get(methodArgs) {
    return new ApiRequest({
      baseUri: this.args.baseUri,
      method: 'GET',
      uriTemplate: '/{projectKey}/as-associate/{associateId}/in-business-unit/key={businessUnitKey}/quotes/key={key}',
      pathVariables: this.args.pathArgs,
      headers: {
        ...(methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers)
      },
      queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs
    }, this.args.executeRequest);
  }
  /**
   *	If the Quote exists in the [Project](ctp:api:type:Project) but does not reference the requested [BusinessUnit](ctp:api:type:BusinessUnit), this method returns an [InvalidOperation](ctp:api:type:InvalidOperationError) error.
   *
   */
  post(methodArgs) {
    return new ApiRequest({
      baseUri: this.args.baseUri,
      method: 'POST',
      uriTemplate: '/{projectKey}/as-associate/{associateId}/in-business-unit/key={businessUnitKey}/quotes/key={key}',
      pathVariables: this.args.pathArgs,
      headers: {
        'Content-Type': 'application/json',
        ...(methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers)
      },
      queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs,
      body: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.body
    }, this.args.executeRequest);
  }
}

/**
 * Code generated by [commercetools RMF-Codegen](https://github.com/commercetools/rmf-codegen). DO NOT EDIT.
 * Please don't change this file manually but run `rmf-codegen generate raml_file_path -o output_path -t typescript_client` to update it.
 * For more information about the commercetools platform APIs, visit https://docs.commercetools.com/.
 */
/**
 **/
class ByProjectKeyAsAssociateByAssociateIdInBusinessUnitKeyByBusinessUnitKeyQuotesRequestBuilder {
  constructor(args) {
    this.args = args;
  }
  withKey(childPathArgs) {
    return new ByProjectKeyAsAssociateByAssociateIdInBusinessUnitKeyByBusinessUnitKeyQuotesKeyByKeyRequestBuilder({
      pathArgs: {
        ...this.args.pathArgs,
        ...childPathArgs
      },
      executeRequest: this.args.executeRequest,
      baseUri: this.args.baseUri
    });
  }
  withId(childPathArgs) {
    return new ByProjectKeyAsAssociateByAssociateIdInBusinessUnitKeyByBusinessUnitKeyQuotesByIDRequestBuilder({
      pathArgs: {
        ...this.args.pathArgs,
        ...childPathArgs
      },
      executeRequest: this.args.executeRequest,
      baseUri: this.args.baseUri
    });
  }
  get(methodArgs) {
    return new ApiRequest({
      baseUri: this.args.baseUri,
      method: 'GET',
      uriTemplate: '/{projectKey}/as-associate/{associateId}/in-business-unit/key={businessUnitKey}/quotes',
      pathVariables: this.args.pathArgs,
      headers: {
        ...(methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers)
      },
      queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs
    }, this.args.executeRequest);
  }
}

/**
 * Code generated by [commercetools RMF-Codegen](https://github.com/commercetools/rmf-codegen). DO NOT EDIT.
 * Please don't change this file manually but run `rmf-codegen generate raml_file_path -o output_path -t typescript_client` to update it.
 * For more information about the commercetools platform APIs, visit https://docs.commercetools.com/.
 */
/**
 **/
class ByProjectKeyAsAssociateByAssociateIdInBusinessUnitKeyByBusinessUnitKeyRequestBuilder {
  constructor(args) {
    this.args = args;
  }
  /**
   *	A shopping cart holds product variants and can be ordered.
   */
  carts() {
    return new ByProjectKeyAsAssociateByAssociateIdInBusinessUnitKeyByBusinessUnitKeyCartsRequestBuilder({
      pathArgs: {
        ...this.args.pathArgs
      },
      executeRequest: this.args.executeRequest,
      baseUri: this.args.baseUri
    });
  }
  orders() {
    return new ByProjectKeyAsAssociateByAssociateIdInBusinessUnitKeyByBusinessUnitKeyOrdersRequestBuilder({
      pathArgs: {
        ...this.args.pathArgs
      },
      executeRequest: this.args.executeRequest,
      baseUri: this.args.baseUri
    });
  }
  /**
   *	A quote holds the negotiated offer.
   */
  quotes() {
    return new ByProjectKeyAsAssociateByAssociateIdInBusinessUnitKeyByBusinessUnitKeyQuotesRequestBuilder({
      pathArgs: {
        ...this.args.pathArgs
      },
      executeRequest: this.args.executeRequest,
      baseUri: this.args.baseUri
    });
  }
  quoteRequests() {
    return new ByProjectKeyAsAssociateByAssociateIdInBusinessUnitKeyByBusinessUnitKeyQuoteRequestsRequestBuilder({
      pathArgs: {
        ...this.args.pathArgs
      },
      executeRequest: this.args.executeRequest,
      baseUri: this.args.baseUri
    });
  }
}

/**
 * Code generated by [commercetools RMF-Codegen](https://github.com/commercetools/rmf-codegen). DO NOT EDIT.
 * Please don't change this file manually but run `rmf-codegen generate raml_file_path -o output_path -t typescript_client` to update it.
 * For more information about the commercetools platform APIs, visit https://docs.commercetools.com/.
 */
/**
 **/
class ByProjectKeyAsAssociateByAssociateIdRequestBuilder {
  constructor(args) {
    this.args = args;
  }
  /**
   *	A Business Unit can represent a Company or a Division.
   */
  businessUnits() {
    return new ByProjectKeyAsAssociateByAssociateIdBusinessUnitsRequestBuilder({
      pathArgs: {
        ...this.args.pathArgs
      },
      executeRequest: this.args.executeRequest,
      baseUri: this.args.baseUri
    });
  }
  inBusinessUnitKeyWithBusinessUnitKeyValue(childPathArgs) {
    return new ByProjectKeyAsAssociateByAssociateIdInBusinessUnitKeyByBusinessUnitKeyRequestBuilder({
      pathArgs: {
        ...this.args.pathArgs,
        ...childPathArgs
      },
      executeRequest: this.args.executeRequest,
      baseUri: this.args.baseUri
    });
  }
}

/**
 * Code generated by [commercetools RMF-Codegen](https://github.com/commercetools/rmf-codegen). DO NOT EDIT.
 * Please don't change this file manually but run `rmf-codegen generate raml_file_path -o output_path -t typescript_client` to update it.
 * For more information about the commercetools platform APIs, visit https://docs.commercetools.com/.
 */
/**
 **/
class ByProjectKeyAsAssociateRequestBuilder {
  constructor(args) {
    this.args = args;
  }
  withAssociateIdValue(childPathArgs) {
    return new ByProjectKeyAsAssociateByAssociateIdRequestBuilder({
      pathArgs: {
        ...this.args.pathArgs,
        ...childPathArgs
      },
      executeRequest: this.args.executeRequest,
      baseUri: this.args.baseUri
    });
  }
}

/**
 * Code generated by [commercetools RMF-Codegen](https://github.com/commercetools/rmf-codegen). DO NOT EDIT.
 * Please don't change this file manually but run `rmf-codegen generate raml_file_path -o output_path -t typescript_client` to update it.
 * For more information about the commercetools platform APIs, visit https://docs.commercetools.com/.
 */
/**
 **/
class ByProjectKeyAssociateRolesByIDRequestBuilder {
  constructor(args) {
    this.args = args;
  }
  get(methodArgs) {
    return new ApiRequest({
      baseUri: this.args.baseUri,
      method: 'GET',
      uriTemplate: '/{projectKey}/associate-roles/{ID}',
      pathVariables: this.args.pathArgs,
      headers: {
        ...(methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers)
      },
      queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs
    }, this.args.executeRequest);
  }
  post(methodArgs) {
    return new ApiRequest({
      baseUri: this.args.baseUri,
      method: 'POST',
      uriTemplate: '/{projectKey}/associate-roles/{ID}',
      pathVariables: this.args.pathArgs,
      headers: {
        'Content-Type': 'application/json',
        ...(methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers)
      },
      queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs,
      body: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.body
    }, this.args.executeRequest);
  }
  delete(methodArgs) {
    return new ApiRequest({
      baseUri: this.args.baseUri,
      method: 'DELETE',
      uriTemplate: '/{projectKey}/associate-roles/{ID}',
      pathVariables: this.args.pathArgs,
      headers: {
        ...(methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers)
      },
      queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs
    }, this.args.executeRequest);
  }
}

/**
 * Code generated by [commercetools RMF-Codegen](https://github.com/commercetools/rmf-codegen). DO NOT EDIT.
 * Please don't change this file manually but run `rmf-codegen generate raml_file_path -o output_path -t typescript_client` to update it.
 * For more information about the commercetools platform APIs, visit https://docs.commercetools.com/.
 */
/**
 **/
class ByProjectKeyAssociateRolesKeyByKeyRequestBuilder {
  constructor(args) {
    this.args = args;
  }
  get(methodArgs) {
    return new ApiRequest({
      baseUri: this.args.baseUri,
      method: 'GET',
      uriTemplate: '/{projectKey}/associate-roles/key={key}',
      pathVariables: this.args.pathArgs,
      headers: {
        ...(methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers)
      },
      queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs
    }, this.args.executeRequest);
  }
  post(methodArgs) {
    return new ApiRequest({
      baseUri: this.args.baseUri,
      method: 'POST',
      uriTemplate: '/{projectKey}/associate-roles/key={key}',
      pathVariables: this.args.pathArgs,
      headers: {
        'Content-Type': 'application/json',
        ...(methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers)
      },
      queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs,
      body: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.body
    }, this.args.executeRequest);
  }
  /**
   *	Deleting an AssociateRole generates the [AssociateRoleDeleted](ctp:api:type:AssociateRoleDeletedMessage) Message. An AssociateRole can only be deleted if it is not assigned to any [Associates](ctp:api:type:Associate).
   *
   */
  delete(methodArgs) {
    return new ApiRequest({
      baseUri: this.args.baseUri,
      method: 'DELETE',
      uriTemplate: '/{projectKey}/associate-roles/key={key}',
      pathVariables: this.args.pathArgs,
      headers: {
        ...(methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers)
      },
      queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs
    }, this.args.executeRequest);
  }
}

/**
 * Code generated by [commercetools RMF-Codegen](https://github.com/commercetools/rmf-codegen). DO NOT EDIT.
 * Please don't change this file manually but run `rmf-codegen generate raml_file_path -o output_path -t typescript_client` to update it.
 * For more information about the commercetools platform APIs, visit https://docs.commercetools.com/.
 */
/**
 **/
class ByProjectKeyAssociateRolesRequestBuilder {
  constructor(args) {
    this.args = args;
  }
  withKey(childPathArgs) {
    return new ByProjectKeyAssociateRolesKeyByKeyRequestBuilder({
      pathArgs: {
        ...this.args.pathArgs,
        ...childPathArgs
      },
      executeRequest: this.args.executeRequest,
      baseUri: this.args.baseUri
    });
  }
  withId(childPathArgs) {
    return new ByProjectKeyAssociateRolesByIDRequestBuilder({
      pathArgs: {
        ...this.args.pathArgs,
        ...childPathArgs
      },
      executeRequest: this.args.executeRequest,
      baseUri: this.args.baseUri
    });
  }
  get(methodArgs) {
    return new ApiRequest({
      baseUri: this.args.baseUri,
      method: 'GET',
      uriTemplate: '/{projectKey}/associate-roles',
      pathVariables: this.args.pathArgs,
      headers: {
        ...(methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers)
      },
      queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs
    }, this.args.executeRequest);
  }
  /**
   *	Creating a Associate Role generates the [AssociateRoleCreated](ctp:api:type:AssociateRoleCreatedMessage) Message.
   *
   */
  post(methodArgs) {
    return new ApiRequest({
      baseUri: this.args.baseUri,
      method: 'POST',
      uriTemplate: '/{projectKey}/associate-roles',
      pathVariables: this.args.pathArgs,
      headers: {
        'Content-Type': 'application/json',
        ...(methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers)
      },
      queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs,
      body: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.body
    }, this.args.executeRequest);
  }
}

/**
 * Code generated by [commercetools RMF-Codegen](https://github.com/commercetools/rmf-codegen). DO NOT EDIT.
 * Please don't change this file manually but run `rmf-codegen generate raml_file_path -o output_path -t typescript_client` to update it.
 * For more information about the commercetools platform APIs, visit https://docs.commercetools.com/.
 */
/**
 **/
class ByProjectKeyAttributeGroupsByIDRequestBuilder {
  constructor(args) {
    this.args = args;
  }
  get(methodArgs) {
    return new ApiRequest({
      baseUri: this.args.baseUri,
      method: 'GET',
      uriTemplate: '/{projectKey}/attribute-groups/{ID}',
      pathVariables: this.args.pathArgs,
      headers: {
        ...(methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers)
      },
      queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs
    }, this.args.executeRequest);
  }
  post(methodArgs) {
    return new ApiRequest({
      baseUri: this.args.baseUri,
      method: 'POST',
      uriTemplate: '/{projectKey}/attribute-groups/{ID}',
      pathVariables: this.args.pathArgs,
      headers: {
        'Content-Type': 'application/json',
        ...(methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers)
      },
      queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs,
      body: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.body
    }, this.args.executeRequest);
  }
  delete(methodArgs) {
    return new ApiRequest({
      baseUri: this.args.baseUri,
      method: 'DELETE',
      uriTemplate: '/{projectKey}/attribute-groups/{ID}',
      pathVariables: this.args.pathArgs,
      headers: {
        ...(methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers)
      },
      queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs
    }, this.args.executeRequest);
  }
}

/**
 * Code generated by [commercetools RMF-Codegen](https://github.com/commercetools/rmf-codegen). DO NOT EDIT.
 * Please don't change this file manually but run `rmf-codegen generate raml_file_path -o output_path -t typescript_client` to update it.
 * For more information about the commercetools platform APIs, visit https://docs.commercetools.com/.
 */
/**
 **/
class ByProjectKeyAttributeGroupsKeyByKeyRequestBuilder {
  constructor(args) {
    this.args = args;
  }
  get(methodArgs) {
    return new ApiRequest({
      baseUri: this.args.baseUri,
      method: 'GET',
      uriTemplate: '/{projectKey}/attribute-groups/key={key}',
      pathVariables: this.args.pathArgs,
      headers: {
        ...(methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers)
      },
      queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs
    }, this.args.executeRequest);
  }
  post(methodArgs) {
    return new ApiRequest({
      baseUri: this.args.baseUri,
      method: 'POST',
      uriTemplate: '/{projectKey}/attribute-groups/key={key}',
      pathVariables: this.args.pathArgs,
      headers: {
        'Content-Type': 'application/json',
        ...(methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers)
      },
      queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs,
      body: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.body
    }, this.args.executeRequest);
  }
  delete(methodArgs) {
    return new ApiRequest({
      baseUri: this.args.baseUri,
      method: 'DELETE',
      uriTemplate: '/{projectKey}/attribute-groups/key={key}',
      pathVariables: this.args.pathArgs,
      headers: {
        ...(methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers)
      },
      queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs
    }, this.args.executeRequest);
  }
}

/**
 * Code generated by [commercetools RMF-Codegen](https://github.com/commercetools/rmf-codegen). DO NOT EDIT.
 * Please don't change this file manually but run `rmf-codegen generate raml_file_path -o output_path -t typescript_client` to update it.
 * For more information about the commercetools platform APIs, visit https://docs.commercetools.com/.
 */
/**
 **/
class ByProjectKeyAttributeGroupsRequestBuilder {
  constructor(args) {
    this.args = args;
  }
  withKey(childPathArgs) {
    return new ByProjectKeyAttributeGroupsKeyByKeyRequestBuilder({
      pathArgs: {
        ...this.args.pathArgs,
        ...childPathArgs
      },
      executeRequest: this.args.executeRequest,
      baseUri: this.args.baseUri
    });
  }
  withId(childPathArgs) {
    return new ByProjectKeyAttributeGroupsByIDRequestBuilder({
      pathArgs: {
        ...this.args.pathArgs,
        ...childPathArgs
      },
      executeRequest: this.args.executeRequest,
      baseUri: this.args.baseUri
    });
  }
  get(methodArgs) {
    return new ApiRequest({
      baseUri: this.args.baseUri,
      method: 'GET',
      uriTemplate: '/{projectKey}/attribute-groups',
      pathVariables: this.args.pathArgs,
      headers: {
        ...(methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers)
      },
      queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs
    }, this.args.executeRequest);
  }
  post(methodArgs) {
    return new ApiRequest({
      baseUri: this.args.baseUri,
      method: 'POST',
      uriTemplate: '/{projectKey}/attribute-groups',
      pathVariables: this.args.pathArgs,
      headers: {
        'Content-Type': 'application/json',
        ...(methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers)
      },
      queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs,
      body: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.body
    }, this.args.executeRequest);
  }
}

/**
 * Code generated by [commercetools RMF-Codegen](https://github.com/commercetools/rmf-codegen). DO NOT EDIT.
 * Please don't change this file manually but run `rmf-codegen generate raml_file_path -o output_path -t typescript_client` to update it.
 * For more information about the commercetools platform APIs, visit https://docs.commercetools.com/.
 */
/**
 **/
class ByProjectKeyBusinessUnitsByIDRequestBuilder {
  constructor(args) {
    this.args = args;
  }
  get(methodArgs) {
    return new ApiRequest({
      baseUri: this.args.baseUri,
      method: 'GET',
      uriTemplate: '/{projectKey}/business-units/{ID}',
      pathVariables: this.args.pathArgs,
      headers: {
        ...(methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers)
      },
      queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs
    }, this.args.executeRequest);
  }
  post(methodArgs) {
    return new ApiRequest({
      baseUri: this.args.baseUri,
      method: 'POST',
      uriTemplate: '/{projectKey}/business-units/{ID}',
      pathVariables: this.args.pathArgs,
      headers: {
        'Content-Type': 'application/json',
        ...(methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers)
      },
      queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs,
      body: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.body
    }, this.args.executeRequest);
  }
  delete(methodArgs) {
    return new ApiRequest({
      baseUri: this.args.baseUri,
      method: 'DELETE',
      uriTemplate: '/{projectKey}/business-units/{ID}',
      pathVariables: this.args.pathArgs,
      headers: {
        ...(methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers)
      },
      queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs
    }, this.args.executeRequest);
  }
}

/**
 * Code generated by [commercetools RMF-Codegen](https://github.com/commercetools/rmf-codegen). DO NOT EDIT.
 * Please don't change this file manually but run `rmf-codegen generate raml_file_path -o output_path -t typescript_client` to update it.
 * For more information about the commercetools platform APIs, visit https://docs.commercetools.com/.
 */
/**
 **/
class ByProjectKeyBusinessUnitsKeyByKeyRequestBuilder {
  constructor(args) {
    this.args = args;
  }
  get(methodArgs) {
    return new ApiRequest({
      baseUri: this.args.baseUri,
      method: 'GET',
      uriTemplate: '/{projectKey}/business-units/key={key}',
      pathVariables: this.args.pathArgs,
      headers: {
        ...(methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers)
      },
      queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs
    }, this.args.executeRequest);
  }
  post(methodArgs) {
    return new ApiRequest({
      baseUri: this.args.baseUri,
      method: 'POST',
      uriTemplate: '/{projectKey}/business-units/key={key}',
      pathVariables: this.args.pathArgs,
      headers: {
        'Content-Type': 'application/json',
        ...(methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers)
      },
      queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs,
      body: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.body
    }, this.args.executeRequest);
  }
  delete(methodArgs) {
    return new ApiRequest({
      baseUri: this.args.baseUri,
      method: 'DELETE',
      uriTemplate: '/{projectKey}/business-units/key={key}',
      pathVariables: this.args.pathArgs,
      headers: {
        ...(methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers)
      },
      queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs
    }, this.args.executeRequest);
  }
}

/**
 * Code generated by [commercetools RMF-Codegen](https://github.com/commercetools/rmf-codegen). DO NOT EDIT.
 * Please don't change this file manually but run `rmf-codegen generate raml_file_path -o output_path -t typescript_client` to update it.
 * For more information about the commercetools platform APIs, visit https://docs.commercetools.com/.
 */
/**
 **/
class ByProjectKeyBusinessUnitsRequestBuilder {
  constructor(args) {
    this.args = args;
  }
  withKey(childPathArgs) {
    return new ByProjectKeyBusinessUnitsKeyByKeyRequestBuilder({
      pathArgs: {
        ...this.args.pathArgs,
        ...childPathArgs
      },
      executeRequest: this.args.executeRequest,
      baseUri: this.args.baseUri
    });
  }
  withId(childPathArgs) {
    return new ByProjectKeyBusinessUnitsByIDRequestBuilder({
      pathArgs: {
        ...this.args.pathArgs,
        ...childPathArgs
      },
      executeRequest: this.args.executeRequest,
      baseUri: this.args.baseUri
    });
  }
  get(methodArgs) {
    return new ApiRequest({
      baseUri: this.args.baseUri,
      method: 'GET',
      uriTemplate: '/{projectKey}/business-units',
      pathVariables: this.args.pathArgs,
      headers: {
        ...(methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers)
      },
      queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs
    }, this.args.executeRequest);
  }
  post(methodArgs) {
    return new ApiRequest({
      baseUri: this.args.baseUri,
      method: 'POST',
      uriTemplate: '/{projectKey}/business-units',
      pathVariables: this.args.pathArgs,
      headers: {
        'Content-Type': 'application/json',
        ...(methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers)
      },
      queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs,
      body: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.body
    }, this.args.executeRequest);
  }
}

/**
 * Code generated by [commercetools RMF-Codegen](https://github.com/commercetools/rmf-codegen). DO NOT EDIT.
 * Please don't change this file manually but run `rmf-codegen generate raml_file_path -o output_path -t typescript_client` to update it.
 * For more information about the commercetools platform APIs, visit https://docs.commercetools.com/.
 */
/**
 **/
class ByProjectKeyCartDiscountsByIDRequestBuilder {
  constructor(args) {
    this.args = args;
  }
  get(methodArgs) {
    return new ApiRequest({
      baseUri: this.args.baseUri,
      method: 'GET',
      uriTemplate: '/{projectKey}/cart-discounts/{ID}',
      pathVariables: this.args.pathArgs,
      headers: {
        ...(methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers)
      },
      queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs
    }, this.args.executeRequest);
  }
  post(methodArgs) {
    return new ApiRequest({
      baseUri: this.args.baseUri,
      method: 'POST',
      uriTemplate: '/{projectKey}/cart-discounts/{ID}',
      pathVariables: this.args.pathArgs,
      headers: {
        'Content-Type': 'application/json',
        ...(methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers)
      },
      queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs,
      body: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.body
    }, this.args.executeRequest);
  }
  delete(methodArgs) {
    return new ApiRequest({
      baseUri: this.args.baseUri,
      method: 'DELETE',
      uriTemplate: '/{projectKey}/cart-discounts/{ID}',
      pathVariables: this.args.pathArgs,
      headers: {
        ...(methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers)
      },
      queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs
    }, this.args.executeRequest);
  }
}

/**
 * Code generated by [commercetools RMF-Codegen](https://github.com/commercetools/rmf-codegen). DO NOT EDIT.
 * Please don't change this file manually but run `rmf-codegen generate raml_file_path -o output_path -t typescript_client` to update it.
 * For more information about the commercetools platform APIs, visit https://docs.commercetools.com/.
 */
/**
 **/
class ByProjectKeyCartDiscountsKeyByKeyRequestBuilder {
  constructor(args) {
    this.args = args;
  }
  get(methodArgs) {
    return new ApiRequest({
      baseUri: this.args.baseUri,
      method: 'GET',
      uriTemplate: '/{projectKey}/cart-discounts/key={key}',
      pathVariables: this.args.pathArgs,
      headers: {
        ...(methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers)
      },
      queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs
    }, this.args.executeRequest);
  }
  post(methodArgs) {
    return new ApiRequest({
      baseUri: this.args.baseUri,
      method: 'POST',
      uriTemplate: '/{projectKey}/cart-discounts/key={key}',
      pathVariables: this.args.pathArgs,
      headers: {
        'Content-Type': 'application/json',
        ...(methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers)
      },
      queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs,
      body: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.body
    }, this.args.executeRequest);
  }
  delete(methodArgs) {
    return new ApiRequest({
      baseUri: this.args.baseUri,
      method: 'DELETE',
      uriTemplate: '/{projectKey}/cart-discounts/key={key}',
      pathVariables: this.args.pathArgs,
      headers: {
        ...(methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers)
      },
      queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs
    }, this.args.executeRequest);
  }
}

/**
 * Code generated by [commercetools RMF-Codegen](https://github.com/commercetools/rmf-codegen). DO NOT EDIT.
 * Please don't change this file manually but run `rmf-codegen generate raml_file_path -o output_path -t typescript_client` to update it.
 * For more information about the commercetools platform APIs, visit https://docs.commercetools.com/.
 */
/**
 **/
class ByProjectKeyCartDiscountsRequestBuilder {
  constructor(args) {
    this.args = args;
  }
  withKey(childPathArgs) {
    return new ByProjectKeyCartDiscountsKeyByKeyRequestBuilder({
      pathArgs: {
        ...this.args.pathArgs,
        ...childPathArgs
      },
      executeRequest: this.args.executeRequest,
      baseUri: this.args.baseUri
    });
  }
  withId(childPathArgs) {
    return new ByProjectKeyCartDiscountsByIDRequestBuilder({
      pathArgs: {
        ...this.args.pathArgs,
        ...childPathArgs
      },
      executeRequest: this.args.executeRequest,
      baseUri: this.args.baseUri
    });
  }
  get(methodArgs) {
    return new ApiRequest({
      baseUri: this.args.baseUri,
      method: 'GET',
      uriTemplate: '/{projectKey}/cart-discounts',
      pathVariables: this.args.pathArgs,
      headers: {
        ...(methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers)
      },
      queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs
    }, this.args.executeRequest);
  }
  post(methodArgs) {
    return new ApiRequest({
      baseUri: this.args.baseUri,
      method: 'POST',
      uriTemplate: '/{projectKey}/cart-discounts',
      pathVariables: this.args.pathArgs,
      headers: {
        'Content-Type': 'application/json',
        ...(methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers)
      },
      queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs,
      body: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.body
    }, this.args.executeRequest);
  }
}

/**
 * Code generated by [commercetools RMF-Codegen](https://github.com/commercetools/rmf-codegen). DO NOT EDIT.
 * Please don't change this file manually but run `rmf-codegen generate raml_file_path -o output_path -t typescript_client` to update it.
 * For more information about the commercetools platform APIs, visit https://docs.commercetools.com/.
 */
/**
 **/
class ByProjectKeyCartsReplicateRequestBuilder {
  constructor(args) {
    this.args = args;
  }
  /**
   *	Creates a new Cart by replicating an existing Cart or Order. Can be useful in cases where a customer wants to cancel a recent order to make some changes or reorder a previous order.
   *
   *	The replicated Cart preserves Customer information, Line Items and Custom Line Items, Custom Fields, Discount Codes, and other settings of the Cart or Order. If the Line Items become invalid, for example, due to removed Products or Prices, they are removed from the new Cart. If the Customer switches to another Customer Group, the new Cart is updated with the new value. It has up-to-date Tax Rates, Prices, and Line Item product data and is in `Active` [CartState](ctp:api:type:CartState).
   *
   *	The new Cart does not contain Payments or Deliveries. The [State](ctp:api:type:ItemState) of Line Items and Custom Line Items is reset to `initial`.
   *
   */
  post(methodArgs) {
    return new ApiRequest({
      baseUri: this.args.baseUri,
      method: 'POST',
      uriTemplate: '/{projectKey}/carts/replicate',
      pathVariables: this.args.pathArgs,
      headers: {
        'Content-Type': 'application/json',
        ...(methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers)
      },
      body: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.body
    }, this.args.executeRequest);
  }
}

/**
 * Code generated by [commercetools RMF-Codegen](https://github.com/commercetools/rmf-codegen). DO NOT EDIT.
 * Please don't change this file manually but run `rmf-codegen generate raml_file_path -o output_path -t typescript_client` to update it.
 * For more information about the commercetools platform APIs, visit https://docs.commercetools.com/.
 */
/**
 **/
class ByProjectKeyCartsByIDRequestBuilder {
  constructor(args) {
    this.args = args;
  }
  /**
   *	To ensure the Cart is up-to-date with current values (such as Prices and Discounts), use the [Recalculate](ctp:api:type:CartRecalculateAction) update action.
   *
   */
  get(methodArgs) {
    return new ApiRequest({
      baseUri: this.args.baseUri,
      method: 'GET',
      uriTemplate: '/{projectKey}/carts/{ID}',
      pathVariables: this.args.pathArgs,
      headers: {
        ...(methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers)
      },
      queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs
    }, this.args.executeRequest);
  }
  post(methodArgs) {
    return new ApiRequest({
      baseUri: this.args.baseUri,
      method: 'POST',
      uriTemplate: '/{projectKey}/carts/{ID}',
      pathVariables: this.args.pathArgs,
      headers: {
        'Content-Type': 'application/json',
        ...(methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers)
      },
      queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs,
      body: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.body
    }, this.args.executeRequest);
  }
  delete(methodArgs) {
    return new ApiRequest({
      baseUri: this.args.baseUri,
      method: 'DELETE',
      uriTemplate: '/{projectKey}/carts/{ID}',
      pathVariables: this.args.pathArgs,
      headers: {
        ...(methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers)
      },
      queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs
    }, this.args.executeRequest);
  }
}

/**
 * Code generated by [commercetools RMF-Codegen](https://github.com/commercetools/rmf-codegen). DO NOT EDIT.
 * Please don't change this file manually but run `rmf-codegen generate raml_file_path -o output_path -t typescript_client` to update it.
 * For more information about the commercetools platform APIs, visit https://docs.commercetools.com/.
 */
/**
 **/
class ByProjectKeyCartsCustomerIdByCustomerIdRequestBuilder {
  constructor(args) {
    this.args = args;
  }
  /**
   *	Retrieves the recently modified active Cart of a Customer with [CartOrigin](ctp:api:type:CartOrigin) `Customer`. If no active Cart exists, a [ResourceNotFound](ctp:api:type:ResourceNotFoundError) error is returned.
   *
   *	To ensure the Cart is up-to-date with current values (such as Prices and Discounts), use the [Recalculate](ctp:api:type:CartRecalculateAction) update action.
   *
   */
  get(methodArgs) {
    return new ApiRequest({
      baseUri: this.args.baseUri,
      method: 'GET',
      uriTemplate: '/{projectKey}/carts/customer-id={customerId}',
      pathVariables: this.args.pathArgs,
      headers: {
        ...(methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers)
      },
      queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs
    }, this.args.executeRequest);
  }
}

/**
 * Code generated by [commercetools RMF-Codegen](https://github.com/commercetools/rmf-codegen). DO NOT EDIT.
 * Please don't change this file manually but run `rmf-codegen generate raml_file_path -o output_path -t typescript_client` to update it.
 * For more information about the commercetools platform APIs, visit https://docs.commercetools.com/.
 */
/**
 **/
class ByProjectKeyCartsKeyByKeyRequestBuilder {
  constructor(args) {
    this.args = args;
  }
  /**
   *	To ensure the Cart is up-to-date with current values (such as Prices and Discounts), use the [Recalculate](ctp:api:type:CartRecalculateAction) update action.
   *
   */
  get(methodArgs) {
    return new ApiRequest({
      baseUri: this.args.baseUri,
      method: 'GET',
      uriTemplate: '/{projectKey}/carts/key={key}',
      pathVariables: this.args.pathArgs,
      headers: {
        ...(methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers)
      },
      queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs
    }, this.args.executeRequest);
  }
  post(methodArgs) {
    return new ApiRequest({
      baseUri: this.args.baseUri,
      method: 'POST',
      uriTemplate: '/{projectKey}/carts/key={key}',
      pathVariables: this.args.pathArgs,
      headers: {
        'Content-Type': 'application/json',
        ...(methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers)
      },
      queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs,
      body: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.body
    }, this.args.executeRequest);
  }
  delete(methodArgs) {
    return new ApiRequest({
      baseUri: this.args.baseUri,
      method: 'DELETE',
      uriTemplate: '/{projectKey}/carts/key={key}',
      pathVariables: this.args.pathArgs,
      headers: {
        ...(methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers)
      },
      queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs
    }, this.args.executeRequest);
  }
}

/**
 * Code generated by [commercetools RMF-Codegen](https://github.com/commercetools/rmf-codegen). DO NOT EDIT.
 * Please don't change this file manually but run `rmf-codegen generate raml_file_path -o output_path -t typescript_client` to update it.
 * For more information about the commercetools platform APIs, visit https://docs.commercetools.com/.
 */
/**
 **/
class ByProjectKeyCartsRequestBuilder {
  constructor(args) {
    this.args = args;
  }
  replicate() {
    return new ByProjectKeyCartsReplicateRequestBuilder({
      pathArgs: {
        ...this.args.pathArgs
      },
      executeRequest: this.args.executeRequest,
      baseUri: this.args.baseUri
    });
  }
  withCustomerId(childPathArgs) {
    return new ByProjectKeyCartsCustomerIdByCustomerIdRequestBuilder({
      pathArgs: {
        ...this.args.pathArgs,
        ...childPathArgs
      },
      executeRequest: this.args.executeRequest,
      baseUri: this.args.baseUri
    });
  }
  withKey(childPathArgs) {
    return new ByProjectKeyCartsKeyByKeyRequestBuilder({
      pathArgs: {
        ...this.args.pathArgs,
        ...childPathArgs
      },
      executeRequest: this.args.executeRequest,
      baseUri: this.args.baseUri
    });
  }
  withId(childPathArgs) {
    return new ByProjectKeyCartsByIDRequestBuilder({
      pathArgs: {
        ...this.args.pathArgs,
        ...childPathArgs
      },
      executeRequest: this.args.executeRequest,
      baseUri: this.args.baseUri
    });
  }
  get(methodArgs) {
    return new ApiRequest({
      baseUri: this.args.baseUri,
      method: 'GET',
      uriTemplate: '/{projectKey}/carts',
      pathVariables: this.args.pathArgs,
      headers: {
        ...(methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers)
      },
      queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs
    }, this.args.executeRequest);
  }
  /**
   *	Creating a Cart fails with an [InvalidOperation](ctp:api:type:InvalidOperationError) error if the
   *	[ShippingMethod](ctp:api:type:ShippingMethod) referenced in the CartDraft
   *	has a `predicate` that does not match the Cart.
   *
   */
  post(methodArgs) {
    return new ApiRequest({
      baseUri: this.args.baseUri,
      method: 'POST',
      uriTemplate: '/{projectKey}/carts',
      pathVariables: this.args.pathArgs,
      headers: {
        'Content-Type': 'application/json',
        ...(methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers)
      },
      queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs,
      body: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.body
    }, this.args.executeRequest);
  }
}

/**
 * Code generated by [commercetools RMF-Codegen](https://github.com/commercetools/rmf-codegen). DO NOT EDIT.
 * Please don't change this file manually but run `rmf-codegen generate raml_file_path -o output_path -t typescript_client` to update it.
 * For more information about the commercetools platform APIs, visit https://docs.commercetools.com/.
 */
/**
 **/
class ByProjectKeyCategoriesByIDRequestBuilder {
  constructor(args) {
    this.args = args;
  }
  /**
   *	Either the [scope](/../api/scopes) `view_products:{projectKey}` or `view_categories:{projectKey}` is required.
   *
   */
  get(methodArgs) {
    return new ApiRequest({
      baseUri: this.args.baseUri,
      method: 'GET',
      uriTemplate: '/{projectKey}/categories/{ID}',
      pathVariables: this.args.pathArgs,
      headers: {
        ...(methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers)
      },
      queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs
    }, this.args.executeRequest);
  }
  /**
   *	Either the [scope](/../api/scopes) `manage_products:{projectKey}` or `manage_categories:{projectKey}` is required.
   *
   */
  post(methodArgs) {
    return new ApiRequest({
      baseUri: this.args.baseUri,
      method: 'POST',
      uriTemplate: '/{projectKey}/categories/{ID}',
      pathVariables: this.args.pathArgs,
      headers: {
        'Content-Type': 'application/json',
        ...(methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers)
      },
      queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs,
      body: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.body
    }, this.args.executeRequest);
  }
  /**
   *	Either the [scope](/../api/scopes) `manage_products:{projectKey}` or `manage_categories:{projectKey}` is required.
   *
   */
  delete(methodArgs) {
    return new ApiRequest({
      baseUri: this.args.baseUri,
      method: 'DELETE',
      uriTemplate: '/{projectKey}/categories/{ID}',
      pathVariables: this.args.pathArgs,
      headers: {
        ...(methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers)
      },
      queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs
    }, this.args.executeRequest);
  }
}

/**
 * Code generated by [commercetools RMF-Codegen](https://github.com/commercetools/rmf-codegen). DO NOT EDIT.
 * Please don't change this file manually but run `rmf-codegen generate raml_file_path -o output_path -t typescript_client` to update it.
 * For more information about the commercetools platform APIs, visit https://docs.commercetools.com/.
 */
/**
 **/
class ByProjectKeyCategoriesKeyByKeyRequestBuilder {
  constructor(args) {
    this.args = args;
  }
  /**
   *	Either the [scope](/../api/scopes) `view_products:{projectKey}` or `view_categories:{projectKey}` is required.
   *
   */
  get(methodArgs) {
    return new ApiRequest({
      baseUri: this.args.baseUri,
      method: 'GET',
      uriTemplate: '/{projectKey}/categories/key={key}',
      pathVariables: this.args.pathArgs,
      headers: {
        ...(methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers)
      },
      queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs
    }, this.args.executeRequest);
  }
  /**
   *	Either the [scope](/../api/scopes) `manage_products:{projectKey}` or `manage_categories:{projectKey}` is required.
   *
   */
  post(methodArgs) {
    return new ApiRequest({
      baseUri: this.args.baseUri,
      method: 'POST',
      uriTemplate: '/{projectKey}/categories/key={key}',
      pathVariables: this.args.pathArgs,
      headers: {
        'Content-Type': 'application/json',
        ...(methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers)
      },
      queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs,
      body: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.body
    }, this.args.executeRequest);
  }
  /**
   *	Either the [scope](/../api/scopes) `manage_products:{projectKey}` or `manage_categories:{projectKey}` is required.
   *
   */
  delete(methodArgs) {
    return new ApiRequest({
      baseUri: this.args.baseUri,
      method: 'DELETE',
      uriTemplate: '/{projectKey}/categories/key={key}',
      pathVariables: this.args.pathArgs,
      headers: {
        ...(methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers)
      },
      queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs
    }, this.args.executeRequest);
  }
}

/**
 * Code generated by [commercetools RMF-Codegen](https://github.com/commercetools/rmf-codegen). DO NOT EDIT.
 * Please don't change this file manually but run `rmf-codegen generate raml_file_path -o output_path -t typescript_client` to update it.
 * For more information about the commercetools platform APIs, visit https://docs.commercetools.com/.
 */
/**
 **/
class ByProjectKeyCategoriesRequestBuilder {
  constructor(args) {
    this.args = args;
  }
  withKey(childPathArgs) {
    return new ByProjectKeyCategoriesKeyByKeyRequestBuilder({
      pathArgs: {
        ...this.args.pathArgs,
        ...childPathArgs
      },
      executeRequest: this.args.executeRequest,
      baseUri: this.args.baseUri
    });
  }
  withId(childPathArgs) {
    return new ByProjectKeyCategoriesByIDRequestBuilder({
      pathArgs: {
        ...this.args.pathArgs,
        ...childPathArgs
      },
      executeRequest: this.args.executeRequest,
      baseUri: this.args.baseUri
    });
  }

  /**
   *	Either the [scope](/../api/scopes) `view_products:{projectKey}` or `view_categories:{projectKey}` is required.
   *
   */
  get(methodArgs) {
    return new ApiRequest({
      baseUri: this.args.baseUri,
      method: 'GET',
      uriTemplate: '/{projectKey}/categories',
      pathVariables: this.args.pathArgs,
      headers: {
        ...(methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers)
      },
      queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs
    }, this.args.executeRequest);
  }
  /**
   *	Either the [scope](/../api/scopes) `manage_products:{projectKey}` or `manage_categories:{projectKey}` is required.
   *
   *	Creating a Category produces the [CategoryCreated](ctp:api:type:CategoryCreatedMessage) Message.
   *
   */
  post(methodArgs) {
    return new ApiRequest({
      baseUri: this.args.baseUri,
      method: 'POST',
      uriTemplate: '/{projectKey}/categories',
      pathVariables: this.args.pathArgs,
      headers: {
        'Content-Type': 'application/json',
        ...(methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers)
      },
      queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs,
      body: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.body
    }, this.args.executeRequest);
  }
}

/**
 * Code generated by [commercetools RMF-Codegen](https://github.com/commercetools/rmf-codegen). DO NOT EDIT.
 * Please don't change this file manually but run `rmf-codegen generate raml_file_path -o output_path -t typescript_client` to update it.
 * For more information about the commercetools platform APIs, visit https://docs.commercetools.com/.
 */
/**
 **/
class ByProjectKeyChannelsByIDRequestBuilder {
  constructor(args) {
    this.args = args;
  }
  get(methodArgs) {
    return new ApiRequest({
      baseUri: this.args.baseUri,
      method: 'GET',
      uriTemplate: '/{projectKey}/channels/{ID}',
      pathVariables: this.args.pathArgs,
      headers: {
        ...(methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers)
      },
      queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs
    }, this.args.executeRequest);
  }
  post(methodArgs) {
    return new ApiRequest({
      baseUri: this.args.baseUri,
      method: 'POST',
      uriTemplate: '/{projectKey}/channels/{ID}',
      pathVariables: this.args.pathArgs,
      headers: {
        'Content-Type': 'application/json',
        ...(methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers)
      },
      queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs,
      body: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.body
    }, this.args.executeRequest);
  }
  delete(methodArgs) {
    return new ApiRequest({
      baseUri: this.args.baseUri,
      method: 'DELETE',
      uriTemplate: '/{projectKey}/channels/{ID}',
      pathVariables: this.args.pathArgs,
      headers: {
        ...(methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers)
      },
      queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs
    }, this.args.executeRequest);
  }
}

/**
 * Code generated by [commercetools RMF-Codegen](https://github.com/commercetools/rmf-codegen). DO NOT EDIT.
 * Please don't change this file manually but run `rmf-codegen generate raml_file_path -o output_path -t typescript_client` to update it.
 * For more information about the commercetools platform APIs, visit https://docs.commercetools.com/.
 */
/**
 **/
class ByProjectKeyChannelsRequestBuilder {
  constructor(args) {
    this.args = args;
  }
  withId(childPathArgs) {
    return new ByProjectKeyChannelsByIDRequestBuilder({
      pathArgs: {
        ...this.args.pathArgs,
        ...childPathArgs
      },
      executeRequest: this.args.executeRequest,
      baseUri: this.args.baseUri
    });
  }
  get(methodArgs) {
    return new ApiRequest({
      baseUri: this.args.baseUri,
      method: 'GET',
      uriTemplate: '/{projectKey}/channels',
      pathVariables: this.args.pathArgs,
      headers: {
        ...(methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers)
      },
      queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs
    }, this.args.executeRequest);
  }
  post(methodArgs) {
    return new ApiRequest({
      baseUri: this.args.baseUri,
      method: 'POST',
      uriTemplate: '/{projectKey}/channels',
      pathVariables: this.args.pathArgs,
      headers: {
        'Content-Type': 'application/json',
        ...(methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers)
      },
      queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs,
      body: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.body
    }, this.args.executeRequest);
  }
}

/**
 * Code generated by [commercetools RMF-Codegen](https://github.com/commercetools/rmf-codegen). DO NOT EDIT.
 * Please don't change this file manually but run `rmf-codegen generate raml_file_path -o output_path -t typescript_client` to update it.
 * For more information about the commercetools platform APIs, visit https://docs.commercetools.com/.
 */
/**
 **/
class ByProjectKeyCustomObjectsByContainerByKeyRequestBuilder {
  constructor(args) {
    this.args = args;
  }
  get(methodArgs) {
    return new ApiRequest({
      baseUri: this.args.baseUri,
      method: 'GET',
      uriTemplate: '/{projectKey}/custom-objects/{container}/{key}',
      pathVariables: this.args.pathArgs,
      headers: {
        ...(methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers)
      },
      queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs
    }, this.args.executeRequest);
  }
  delete(methodArgs) {
    return new ApiRequest({
      baseUri: this.args.baseUri,
      method: 'DELETE',
      uriTemplate: '/{projectKey}/custom-objects/{container}/{key}',
      pathVariables: this.args.pathArgs,
      headers: {
        ...(methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers)
      },
      queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs
    }, this.args.executeRequest);
  }
}

/**
 * Code generated by [commercetools RMF-Codegen](https://github.com/commercetools/rmf-codegen). DO NOT EDIT.
 * Please don't change this file manually but run `rmf-codegen generate raml_file_path -o output_path -t typescript_client` to update it.
 * For more information about the commercetools platform APIs, visit https://docs.commercetools.com/.
 */
/**
 **/
class ByProjectKeyCustomObjectsByContainerRequestBuilder {
  constructor(args) {
    this.args = args;
  }
  get(methodArgs) {
    return new ApiRequest({
      baseUri: this.args.baseUri,
      method: 'GET',
      uriTemplate: '/{projectKey}/custom-objects/{container}',
      pathVariables: this.args.pathArgs,
      headers: {
        ...(methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers)
      },
      queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs
    }, this.args.executeRequest);
  }
}

/**
 * Code generated by [commercetools RMF-Codegen](https://github.com/commercetools/rmf-codegen). DO NOT EDIT.
 * Please don't change this file manually but run `rmf-codegen generate raml_file_path -o output_path -t typescript_client` to update it.
 * For more information about the commercetools platform APIs, visit https://docs.commercetools.com/.
 */
/**
 **/
class ByProjectKeyCustomObjectsRequestBuilder {
  constructor(args) {
    this.args = args;
  }
  withContainerAndKey(childPathArgs) {
    return new ByProjectKeyCustomObjectsByContainerByKeyRequestBuilder({
      pathArgs: {
        ...this.args.pathArgs,
        ...childPathArgs
      },
      executeRequest: this.args.executeRequest,
      baseUri: this.args.baseUri
    });
  }
  withContainer(childPathArgs) {
    return new ByProjectKeyCustomObjectsByContainerRequestBuilder({
      pathArgs: {
        ...this.args.pathArgs,
        ...childPathArgs
      },
      executeRequest: this.args.executeRequest,
      baseUri: this.args.baseUri
    });
  }

  /**
   *	For performance reasons, it is highly advisable to query for Custom Objects in a container by using the `container` field in the `where` predicate.
   *
   */
  /**
   * @deprecated
   **/
  get(methodArgs) {
    return new ApiRequest({
      baseUri: this.args.baseUri,
      method: 'GET',
      uriTemplate: '/{projectKey}/custom-objects',
      pathVariables: this.args.pathArgs,
      headers: {
        ...(methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers)
      },
      queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs
    }, this.args.executeRequest);
  }
  /**
   *	If an object with the given container/key exists, the object will be replaced with the new value and the version is incremented.
   *	If the request contains a version and an object with the given container/key, then the version must match the version of the existing object. Concurrent updates to the same Custom Object returns a [ConcurrentModification](ctp:api:type:ConcurrentModificationError) error even if the version is not provided.
   *
   *	Fields with `null` values will **not be saved**.
   *
   */
  post(methodArgs) {
    return new ApiRequest({
      baseUri: this.args.baseUri,
      method: 'POST',
      uriTemplate: '/{projectKey}/custom-objects',
      pathVariables: this.args.pathArgs,
      headers: {
        'Content-Type': 'application/json',
        ...(methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers)
      },
      queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs,
      body: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.body
    }, this.args.executeRequest);
  }
}

/**
 * Code generated by [commercetools RMF-Codegen](https://github.com/commercetools/rmf-codegen). DO NOT EDIT.
 * Please don't change this file manually but run `rmf-codegen generate raml_file_path -o output_path -t typescript_client` to update it.
 * For more information about the commercetools platform APIs, visit https://docs.commercetools.com/.
 */
/**
 **/
class ByProjectKeyCustomerGroupsByIDRequestBuilder {
  constructor(args) {
    this.args = args;
  }
  get(methodArgs) {
    return new ApiRequest({
      baseUri: this.args.baseUri,
      method: 'GET',
      uriTemplate: '/{projectKey}/customer-groups/{ID}',
      pathVariables: this.args.pathArgs,
      headers: {
        ...(methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers)
      },
      queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs
    }, this.args.executeRequest);
  }
  post(methodArgs) {
    return new ApiRequest({
      baseUri: this.args.baseUri,
      method: 'POST',
      uriTemplate: '/{projectKey}/customer-groups/{ID}',
      pathVariables: this.args.pathArgs,
      headers: {
        'Content-Type': 'application/json',
        ...(methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers)
      },
      queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs,
      body: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.body
    }, this.args.executeRequest);
  }
  delete(methodArgs) {
    return new ApiRequest({
      baseUri: this.args.baseUri,
      method: 'DELETE',
      uriTemplate: '/{projectKey}/customer-groups/{ID}',
      pathVariables: this.args.pathArgs,
      headers: {
        ...(methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers)
      },
      queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs
    }, this.args.executeRequest);
  }
}

/**
 * Code generated by [commercetools RMF-Codegen](https://github.com/commercetools/rmf-codegen). DO NOT EDIT.
 * Please don't change this file manually but run `rmf-codegen generate raml_file_path -o output_path -t typescript_client` to update it.
 * For more information about the commercetools platform APIs, visit https://docs.commercetools.com/.
 */
/**
 **/
class ByProjectKeyCustomerGroupsKeyByKeyRequestBuilder {
  constructor(args) {
    this.args = args;
  }
  get(methodArgs) {
    return new ApiRequest({
      baseUri: this.args.baseUri,
      method: 'GET',
      uriTemplate: '/{projectKey}/customer-groups/key={key}',
      pathVariables: this.args.pathArgs,
      headers: {
        ...(methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers)
      },
      queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs
    }, this.args.executeRequest);
  }
  post(methodArgs) {
    return new ApiRequest({
      baseUri: this.args.baseUri,
      method: 'POST',
      uriTemplate: '/{projectKey}/customer-groups/key={key}',
      pathVariables: this.args.pathArgs,
      headers: {
        'Content-Type': 'application/json',
        ...(methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers)
      },
      queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs,
      body: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.body
    }, this.args.executeRequest);
  }
  delete(methodArgs) {
    return new ApiRequest({
      baseUri: this.args.baseUri,
      method: 'DELETE',
      uriTemplate: '/{projectKey}/customer-groups/key={key}',
      pathVariables: this.args.pathArgs,
      headers: {
        ...(methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers)
      },
      queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs
    }, this.args.executeRequest);
  }
}

/**
 * Code generated by [commercetools RMF-Codegen](https://github.com/commercetools/rmf-codegen). DO NOT EDIT.
 * Please don't change this file manually but run `rmf-codegen generate raml_file_path -o output_path -t typescript_client` to update it.
 * For more information about the commercetools platform APIs, visit https://docs.commercetools.com/.
 */
/**
 **/
class ByProjectKeyCustomerGroupsRequestBuilder {
  constructor(args) {
    this.args = args;
  }
  withKey(childPathArgs) {
    return new ByProjectKeyCustomerGroupsKeyByKeyRequestBuilder({
      pathArgs: {
        ...this.args.pathArgs,
        ...childPathArgs
      },
      executeRequest: this.args.executeRequest,
      baseUri: this.args.baseUri
    });
  }
  withId(childPathArgs) {
    return new ByProjectKeyCustomerGroupsByIDRequestBuilder({
      pathArgs: {
        ...this.args.pathArgs,
        ...childPathArgs
      },
      executeRequest: this.args.executeRequest,
      baseUri: this.args.baseUri
    });
  }
  get(methodArgs) {
    return new ApiRequest({
      baseUri: this.args.baseUri,
      method: 'GET',
      uriTemplate: '/{projectKey}/customer-groups',
      pathVariables: this.args.pathArgs,
      headers: {
        ...(methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers)
      },
      queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs
    }, this.args.executeRequest);
  }
  post(methodArgs) {
    return new ApiRequest({
      baseUri: this.args.baseUri,
      method: 'POST',
      uriTemplate: '/{projectKey}/customer-groups',
      pathVariables: this.args.pathArgs,
      headers: {
        'Content-Type': 'application/json',
        ...(methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers)
      },
      queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs,
      body: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.body
    }, this.args.executeRequest);
  }
}

/**
 * Code generated by [commercetools RMF-Codegen](https://github.com/commercetools/rmf-codegen). DO NOT EDIT.
 * Please don't change this file manually but run `rmf-codegen generate raml_file_path -o output_path -t typescript_client` to update it.
 * For more information about the commercetools platform APIs, visit https://docs.commercetools.com/.
 */
/**
 **/
class ByProjectKeyCustomersEmailConfirmRequestBuilder {
  constructor(args) {
    this.args = args;
  }
  /**
   *	Verifying the email of the Customer produces the [CustomerEmailVerified](ctp:api:type:CustomerEmailVerifiedMessage) Message.
   *
   */
  post(methodArgs) {
    return new ApiRequest({
      baseUri: this.args.baseUri,
      method: 'POST',
      uriTemplate: '/{projectKey}/customers/email/confirm',
      pathVariables: this.args.pathArgs,
      headers: {
        'Content-Type': 'application/json',
        ...(methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers)
      },
      body: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.body
    }, this.args.executeRequest);
  }
}

/**
 * Code generated by [commercetools RMF-Codegen](https://github.com/commercetools/rmf-codegen). DO NOT EDIT.
 * Please don't change this file manually but run `rmf-codegen generate raml_file_path -o output_path -t typescript_client` to update it.
 * For more information about the commercetools platform APIs, visit https://docs.commercetools.com/.
 */
/**
 **/
class ByProjectKeyCustomersEmailTokenRequestBuilder {
  constructor(args) {
    this.args = args;
  }
  post(methodArgs) {
    return new ApiRequest({
      baseUri: this.args.baseUri,
      method: 'POST',
      uriTemplate: '/{projectKey}/customers/email-token',
      pathVariables: this.args.pathArgs,
      headers: {
        'Content-Type': 'application/json',
        ...(methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers)
      },
      body: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.body
    }, this.args.executeRequest);
  }
}

/**
 * Code generated by [commercetools RMF-Codegen](https://github.com/commercetools/rmf-codegen). DO NOT EDIT.
 * Please don't change this file manually but run `rmf-codegen generate raml_file_path -o output_path -t typescript_client` to update it.
 * For more information about the commercetools platform APIs, visit https://docs.commercetools.com/.
 */
/**
 **/
class ByProjectKeyCustomersPasswordTokenRequestBuilder {
  constructor(args) {
    this.args = args;
  }
  post(methodArgs) {
    return new ApiRequest({
      baseUri: this.args.baseUri,
      method: 'POST',
      uriTemplate: '/{projectKey}/customers/password-token',
      pathVariables: this.args.pathArgs,
      headers: {
        'Content-Type': 'application/json',
        ...(methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers)
      },
      body: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.body
    }, this.args.executeRequest);
  }
}

/**
 * Code generated by [commercetools RMF-Codegen](https://github.com/commercetools/rmf-codegen). DO NOT EDIT.
 * Please don't change this file manually but run `rmf-codegen generate raml_file_path -o output_path -t typescript_client` to update it.
 * For more information about the commercetools platform APIs, visit https://docs.commercetools.com/.
 */
/**
 **/
class ByProjectKeyCustomersPasswordRequestBuilder {
  constructor(args) {
    this.args = args;
  }
  /**
   *	Changing the password produces the [CustomerPasswordUpdated](ctp:api:type:CustomerPasswordUpdatedMessage) Message with `reset=false`.
   *
   */
  post(methodArgs) {
    return new ApiRequest({
      baseUri: this.args.baseUri,
      method: 'POST',
      uriTemplate: '/{projectKey}/customers/password',
      pathVariables: this.args.pathArgs,
      headers: {
        'Content-Type': 'application/json',
        ...(methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers)
      },
      body: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.body
    }, this.args.executeRequest);
  }
}

/**
 * Code generated by [commercetools RMF-Codegen](https://github.com/commercetools/rmf-codegen). DO NOT EDIT.
 * Please don't change this file manually but run `rmf-codegen generate raml_file_path -o output_path -t typescript_client` to update it.
 * For more information about the commercetools platform APIs, visit https://docs.commercetools.com/.
 */
/**
 **/
class ByProjectKeyCustomersPasswordResetRequestBuilder {
  constructor(args) {
    this.args = args;
  }
  /**
   *	Resetting the password of the Customer produces the [CustomerPasswordUpdated](ctp:api:type:CustomerPasswordUpdatedMessage) Message with `reset=true`.
   *
   */
  post(methodArgs) {
    return new ApiRequest({
      baseUri: this.args.baseUri,
      method: 'POST',
      uriTemplate: '/{projectKey}/customers/password/reset',
      pathVariables: this.args.pathArgs,
      headers: {
        'Content-Type': 'application/json',
        ...(methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers)
      },
      body: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.body
    }, this.args.executeRequest);
  }
}

/**
 * Code generated by [commercetools RMF-Codegen](https://github.com/commercetools/rmf-codegen). DO NOT EDIT.
 * Please don't change this file manually but run `rmf-codegen generate raml_file_path -o output_path -t typescript_client` to update it.
 * For more information about the commercetools platform APIs, visit https://docs.commercetools.com/.
 */
/**
 **/
class ByProjectKeyCustomersByIDRequestBuilder {
  constructor(args) {
    this.args = args;
  }
  get(methodArgs) {
    return new ApiRequest({
      baseUri: this.args.baseUri,
      method: 'GET',
      uriTemplate: '/{projectKey}/customers/{ID}',
      pathVariables: this.args.pathArgs,
      headers: {
        ...(methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers)
      },
      queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs
    }, this.args.executeRequest);
  }
  post(methodArgs) {
    return new ApiRequest({
      baseUri: this.args.baseUri,
      method: 'POST',
      uriTemplate: '/{projectKey}/customers/{ID}',
      pathVariables: this.args.pathArgs,
      headers: {
        'Content-Type': 'application/json',
        ...(methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers)
      },
      queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs,
      body: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.body
    }, this.args.executeRequest);
  }
  /**
   *	Deleting a Customer produces the [CustomerDeleted](ctp:api:type:CustomerDeletedMessage) Message.
   *
   */
  delete(methodArgs) {
    return new ApiRequest({
      baseUri: this.args.baseUri,
      method: 'DELETE',
      uriTemplate: '/{projectKey}/customers/{ID}',
      pathVariables: this.args.pathArgs,
      headers: {
        ...(methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers)
      },
      queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs
    }, this.args.executeRequest);
  }
}

/**
 * Code generated by [commercetools RMF-Codegen](https://github.com/commercetools/rmf-codegen). DO NOT EDIT.
 * Please don't change this file manually but run `rmf-codegen generate raml_file_path -o output_path -t typescript_client` to update it.
 * For more information about the commercetools platform APIs, visit https://docs.commercetools.com/.
 */
/**
 **/
class ByProjectKeyCustomersEmailTokenByEmailTokenRequestBuilder {
  constructor(args) {
    this.args = args;
  }
  get(methodArgs) {
    return new ApiRequest({
      baseUri: this.args.baseUri,
      method: 'GET',
      uriTemplate: '/{projectKey}/customers/email-token={emailToken}',
      pathVariables: this.args.pathArgs,
      headers: {
        ...(methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers)
      },
      queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs
    }, this.args.executeRequest);
  }
}

/**
 * Code generated by [commercetools RMF-Codegen](https://github.com/commercetools/rmf-codegen). DO NOT EDIT.
 * Please don't change this file manually but run `rmf-codegen generate raml_file_path -o output_path -t typescript_client` to update it.
 * For more information about the commercetools platform APIs, visit https://docs.commercetools.com/.
 */
/**
 **/
class ByProjectKeyCustomersKeyByKeyRequestBuilder {
  constructor(args) {
    this.args = args;
  }
  get(methodArgs) {
    return new ApiRequest({
      baseUri: this.args.baseUri,
      method: 'GET',
      uriTemplate: '/{projectKey}/customers/key={key}',
      pathVariables: this.args.pathArgs,
      headers: {
        ...(methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers)
      },
      queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs
    }, this.args.executeRequest);
  }
  post(methodArgs) {
    return new ApiRequest({
      baseUri: this.args.baseUri,
      method: 'POST',
      uriTemplate: '/{projectKey}/customers/key={key}',
      pathVariables: this.args.pathArgs,
      headers: {
        'Content-Type': 'application/json',
        ...(methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers)
      },
      queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs,
      body: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.body
    }, this.args.executeRequest);
  }
  /**
   *	Deleting a Customer produces the [CustomerDeleted](ctp:api:type:CustomerDeletedMessage) Message.
   *
   */
  delete(methodArgs) {
    return new ApiRequest({
      baseUri: this.args.baseUri,
      method: 'DELETE',
      uriTemplate: '/{projectKey}/customers/key={key}',
      pathVariables: this.args.pathArgs,
      headers: {
        ...(methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers)
      },
      queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs
    }, this.args.executeRequest);
  }
}

/**
 * Code generated by [commercetools RMF-Codegen](https://github.com/commercetools/rmf-codegen). DO NOT EDIT.
 * Please don't change this file manually but run `rmf-codegen generate raml_file_path -o output_path -t typescript_client` to update it.
 * For more information about the commercetools platform APIs, visit https://docs.commercetools.com/.
 */
/**
 **/
class ByProjectKeyCustomersPasswordTokenByPasswordTokenRequestBuilder {
  constructor(args) {
    this.args = args;
  }
  get(methodArgs) {
    return new ApiRequest({
      baseUri: this.args.baseUri,
      method: 'GET',
      uriTemplate: '/{projectKey}/customers/password-token={passwordToken}',
      pathVariables: this.args.pathArgs,
      headers: {
        ...(methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers)
      },
      queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs
    }, this.args.executeRequest);
  }
}

/**
 * Code generated by [commercetools RMF-Codegen](https://github.com/commercetools/rmf-codegen). DO NOT EDIT.
 * Please don't change this file manually but run `rmf-codegen generate raml_file_path -o output_path -t typescript_client` to update it.
 * For more information about the commercetools platform APIs, visit https://docs.commercetools.com/.
 */
/**
 **/
class ByProjectKeyCustomersRequestBuilder {
  constructor(args) {
    this.args = args;
  }
  withPasswordToken(childPathArgs) {
    return new ByProjectKeyCustomersPasswordTokenByPasswordTokenRequestBuilder({
      pathArgs: {
        ...this.args.pathArgs,
        ...childPathArgs
      },
      executeRequest: this.args.executeRequest,
      baseUri: this.args.baseUri
    });
  }
  withEmailToken(childPathArgs) {
    return new ByProjectKeyCustomersEmailTokenByEmailTokenRequestBuilder({
      pathArgs: {
        ...this.args.pathArgs,
        ...childPathArgs
      },
      executeRequest: this.args.executeRequest,
      baseUri: this.args.baseUri
    });
  }
  emailToken() {
    return new ByProjectKeyCustomersEmailTokenRequestBuilder({
      pathArgs: {
        ...this.args.pathArgs
      },
      executeRequest: this.args.executeRequest,
      baseUri: this.args.baseUri
    });
  }
  emailConfirm() {
    return new ByProjectKeyCustomersEmailConfirmRequestBuilder({
      pathArgs: {
        ...this.args.pathArgs
      },
      executeRequest: this.args.executeRequest,
      baseUri: this.args.baseUri
    });
  }
  password() {
    return new ByProjectKeyCustomersPasswordRequestBuilder({
      pathArgs: {
        ...this.args.pathArgs
      },
      executeRequest: this.args.executeRequest,
      baseUri: this.args.baseUri
    });
  }
  passwordReset() {
    return new ByProjectKeyCustomersPasswordResetRequestBuilder({
      pathArgs: {
        ...this.args.pathArgs
      },
      executeRequest: this.args.executeRequest,
      baseUri: this.args.baseUri
    });
  }
  passwordToken() {
    return new ByProjectKeyCustomersPasswordTokenRequestBuilder({
      pathArgs: {
        ...this.args.pathArgs
      },
      executeRequest: this.args.executeRequest,
      baseUri: this.args.baseUri
    });
  }
  withKey(childPathArgs) {
    return new ByProjectKeyCustomersKeyByKeyRequestBuilder({
      pathArgs: {
        ...this.args.pathArgs,
        ...childPathArgs
      },
      executeRequest: this.args.executeRequest,
      baseUri: this.args.baseUri
    });
  }
  withId(childPathArgs) {
    return new ByProjectKeyCustomersByIDRequestBuilder({
      pathArgs: {
        ...this.args.pathArgs,
        ...childPathArgs
      },
      executeRequest: this.args.executeRequest,
      baseUri: this.args.baseUri
    });
  }
  get(methodArgs) {
    return new ApiRequest({
      baseUri: this.args.baseUri,
      method: 'GET',
      uriTemplate: '/{projectKey}/customers',
      pathVariables: this.args.pathArgs,
      headers: {
        ...(methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers)
      },
      queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs
    }, this.args.executeRequest);
  }
  /**
   *	If the `anonymousCart` field is set on the [CustomerDraft](ctp:api:type:CustomerDraft), then the newly created Customer will be assigned to that [Cart](ctp:api:type:Cart).
   *	Similarly, if the `anonymousId` field is set, the Customer will be set on all [Carts](ctp:api:type:Cart), [Orders](ctp:api:type:Order), [ShoppingLists](ctp:api:type:ShoppingList) and [Payments](ctp:api:type:Payment) with the same `anonymousId`.
   *	Creating a Customer produces the [CustomerCreated](ctp:api:type:CustomerCreatedMessage) Message.
   *
   */
  post(methodArgs) {
    return new ApiRequest({
      baseUri: this.args.baseUri,
      method: 'POST',
      uriTemplate: '/{projectKey}/customers',
      pathVariables: this.args.pathArgs,
      headers: {
        'Content-Type': 'application/json',
        ...(methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers)
      },
      queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs,
      body: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.body
    }, this.args.executeRequest);
  }
}

/**
 * Code generated by [commercetools RMF-Codegen](https://github.com/commercetools/rmf-codegen). DO NOT EDIT.
 * Please don't change this file manually but run `rmf-codegen generate raml_file_path -o output_path -t typescript_client` to update it.
 * For more information about the commercetools platform APIs, visit https://docs.commercetools.com/.
 */
/**
 **/
class ByProjectKeyDiscountCodesByIDRequestBuilder {
  constructor(args) {
    this.args = args;
  }
  /**
   *	Deprecated scope: `view_orders:{projectKey}`
   */
  get(methodArgs) {
    return new ApiRequest({
      baseUri: this.args.baseUri,
      method: 'GET',
      uriTemplate: '/{projectKey}/discount-codes/{ID}',
      pathVariables: this.args.pathArgs,
      headers: {
        ...(methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers)
      },
      queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs
    }, this.args.executeRequest);
  }
  /**
   *	Deprecated scope: `manage_orders:{projectKey}`
   */
  post(methodArgs) {
    return new ApiRequest({
      baseUri: this.args.baseUri,
      method: 'POST',
      uriTemplate: '/{projectKey}/discount-codes/{ID}',
      pathVariables: this.args.pathArgs,
      headers: {
        'Content-Type': 'application/json',
        ...(methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers)
      },
      queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs,
      body: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.body
    }, this.args.executeRequest);
  }
  /**
   *	Deprecated scope: `manage_orders:{projectKey}`
   */
  delete(methodArgs) {
    return new ApiRequest({
      baseUri: this.args.baseUri,
      method: 'DELETE',
      uriTemplate: '/{projectKey}/discount-codes/{ID}',
      pathVariables: this.args.pathArgs,
      headers: {
        ...(methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers)
      },
      queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs
    }, this.args.executeRequest);
  }
}

/**
 * Code generated by [commercetools RMF-Codegen](https://github.com/commercetools/rmf-codegen). DO NOT EDIT.
 * Please don't change this file manually but run `rmf-codegen generate raml_file_path -o output_path -t typescript_client` to update it.
 * For more information about the commercetools platform APIs, visit https://docs.commercetools.com/.
 */
/**
 **/
class ByProjectKeyDiscountCodesRequestBuilder {
  constructor(args) {
    this.args = args;
  }
  withId(childPathArgs) {
    return new ByProjectKeyDiscountCodesByIDRequestBuilder({
      pathArgs: {
        ...this.args.pathArgs,
        ...childPathArgs
      },
      executeRequest: this.args.executeRequest,
      baseUri: this.args.baseUri
    });
  }

  /**
   *	Deprecated scope: `view_orders:{projectKey}`
   */
  get(methodArgs) {
    return new ApiRequest({
      baseUri: this.args.baseUri,
      method: 'GET',
      uriTemplate: '/{projectKey}/discount-codes',
      pathVariables: this.args.pathArgs,
      headers: {
        ...(methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers)
      },
      queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs
    }, this.args.executeRequest);
  }
  /**
   *	Deprecated scope: `manage_orders:{projectKey}`
   */
  post(methodArgs) {
    return new ApiRequest({
      baseUri: this.args.baseUri,
      method: 'POST',
      uriTemplate: '/{projectKey}/discount-codes',
      pathVariables: this.args.pathArgs,
      headers: {
        'Content-Type': 'application/json',
        ...(methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers)
      },
      queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs,
      body: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.body
    }, this.args.executeRequest);
  }
}

/**
 * Code generated by [commercetools RMF-Codegen](https://github.com/commercetools/rmf-codegen). DO NOT EDIT.
 * Please don't change this file manually but run `rmf-codegen generate raml_file_path -o output_path -t typescript_client` to update it.
 * For more information about the commercetools platform APIs, visit https://docs.commercetools.com/.
 */
/**
 **/
class ByProjectKeyExtensionsByIDRequestBuilder {
  constructor(args) {
    this.args = args;
  }
  get(methodArgs) {
    return new ApiRequest({
      baseUri: this.args.baseUri,
      method: 'GET',
      uriTemplate: '/{projectKey}/extensions/{ID}',
      pathVariables: this.args.pathArgs,
      headers: {
        ...(methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers)
      },
      queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs
    }, this.args.executeRequest);
  }
  post(methodArgs) {
    return new ApiRequest({
      baseUri: this.args.baseUri,
      method: 'POST',
      uriTemplate: '/{projectKey}/extensions/{ID}',
      pathVariables: this.args.pathArgs,
      headers: {
        'Content-Type': 'application/json',
        ...(methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers)
      },
      queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs,
      body: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.body
    }, this.args.executeRequest);
  }
  delete(methodArgs) {
    return new ApiRequest({
      baseUri: this.args.baseUri,
      method: 'DELETE',
      uriTemplate: '/{projectKey}/extensions/{ID}',
      pathVariables: this.args.pathArgs,
      headers: {
        ...(methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers)
      },
      queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs
    }, this.args.executeRequest);
  }
}

/**
 * Code generated by [commercetools RMF-Codegen](https://github.com/commercetools/rmf-codegen). DO NOT EDIT.
 * Please don't change this file manually but run `rmf-codegen generate raml_file_path -o output_path -t typescript_client` to update it.
 * For more information about the commercetools platform APIs, visit https://docs.commercetools.com/.
 */
/**
 **/
class ByProjectKeyExtensionsKeyByKeyRequestBuilder {
  constructor(args) {
    this.args = args;
  }
  get(methodArgs) {
    return new ApiRequest({
      baseUri: this.args.baseUri,
      method: 'GET',
      uriTemplate: '/{projectKey}/extensions/key={key}',
      pathVariables: this.args.pathArgs,
      headers: {
        ...(methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers)
      },
      queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs
    }, this.args.executeRequest);
  }
  post(methodArgs) {
    return new ApiRequest({
      baseUri: this.args.baseUri,
      method: 'POST',
      uriTemplate: '/{projectKey}/extensions/key={key}',
      pathVariables: this.args.pathArgs,
      headers: {
        'Content-Type': 'application/json',
        ...(methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers)
      },
      queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs,
      body: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.body
    }, this.args.executeRequest);
  }
  delete(methodArgs) {
    return new ApiRequest({
      baseUri: this.args.baseUri,
      method: 'DELETE',
      uriTemplate: '/{projectKey}/extensions/key={key}',
      pathVariables: this.args.pathArgs,
      headers: {
        ...(methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers)
      },
      queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs
    }, this.args.executeRequest);
  }
}

/**
 * Code generated by [commercetools RMF-Codegen](https://github.com/commercetools/rmf-codegen). DO NOT EDIT.
 * Please don't change this file manually but run `rmf-codegen generate raml_file_path -o output_path -t typescript_client` to update it.
 * For more information about the commercetools platform APIs, visit https://docs.commercetools.com/.
 */
/**
 **/
class ByProjectKeyExtensionsRequestBuilder {
  constructor(args) {
    this.args = args;
  }
  withKey(childPathArgs) {
    return new ByProjectKeyExtensionsKeyByKeyRequestBuilder({
      pathArgs: {
        ...this.args.pathArgs,
        ...childPathArgs
      },
      executeRequest: this.args.executeRequest,
      baseUri: this.args.baseUri
    });
  }
  withId(childPathArgs) {
    return new ByProjectKeyExtensionsByIDRequestBuilder({
      pathArgs: {
        ...this.args.pathArgs,
        ...childPathArgs
      },
      executeRequest: this.args.executeRequest,
      baseUri: this.args.baseUri
    });
  }
  get(methodArgs) {
    return new ApiRequest({
      baseUri: this.args.baseUri,
      method: 'GET',
      uriTemplate: '/{projectKey}/extensions',
      pathVariables: this.args.pathArgs,
      headers: {
        ...(methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers)
      },
      queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs
    }, this.args.executeRequest);
  }
  post(methodArgs) {
    return new ApiRequest({
      baseUri: this.args.baseUri,
      method: 'POST',
      uriTemplate: '/{projectKey}/extensions',
      pathVariables: this.args.pathArgs,
      headers: {
        'Content-Type': 'application/json',
        ...(methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers)
      },
      queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs,
      body: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.body
    }, this.args.executeRequest);
  }
}

/**
 * Code generated by [commercetools RMF-Codegen](https://github.com/commercetools/rmf-codegen). DO NOT EDIT.
 * Please don't change this file manually but run `rmf-codegen generate raml_file_path -o output_path -t typescript_client` to update it.
 * For more information about the commercetools platform APIs, visit https://docs.commercetools.com/.
 */
/**
 **/
class ByProjectKeyGraphqlRequestBuilder {
  constructor(args) {
    this.args = args;
  }
  /**
   *	Execute a GraphQL query
   */
  post(methodArgs) {
    return new ApiRequest({
      baseUri: this.args.baseUri,
      method: 'POST',
      uriTemplate: '/{projectKey}/graphql',
      pathVariables: this.args.pathArgs,
      headers: {
        'Content-Type': 'application/graphql',
        ...(methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers)
      },
      body: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.body
    }, this.args.executeRequest);
  }
}

/**
 * Code generated by [commercetools RMF-Codegen](https://github.com/commercetools/rmf-codegen). DO NOT EDIT.
 * Please don't change this file manually but run `rmf-codegen generate raml_file_path -o output_path -t typescript_client` to update it.
 * For more information about the commercetools platform APIs, visit https://docs.commercetools.com/.
 */
/**
 **/
class ByProjectKeyInBusinessUnitKeyByBusinessUnitKeyMeCustomersRequestBuilder {
  constructor(args) {
    this.args = args;
  }
  /**
   *	The My Business Unit endpoint does not support assigning existing Customers to a Business Unit.
   *	Associates with the `UpdateAssociates` [Permission](ctp:api:type:Permission) can use this endpoint to create a new Customer and associate it with the Business Unit.
   *	If the required [Permission](/projects/associate-roles#permission) is missing, an [AssociateMissingPermission](/errors#associatemissingpermission) error is returned.
   *
   */
  post(methodArgs) {
    return new ApiRequest({
      baseUri: this.args.baseUri,
      method: 'POST',
      uriTemplate: '/{projectKey}/in-business-unit/key={businessUnitKey}/me/customers',
      pathVariables: this.args.pathArgs,
      headers: {
        'Content-Type': 'application/json',
        ...(methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers)
      },
      body: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.body
    }, this.args.executeRequest);
  }
}

/**
 * Code generated by [commercetools RMF-Codegen](https://github.com/commercetools/rmf-codegen). DO NOT EDIT.
 * Please don't change this file manually but run `rmf-codegen generate raml_file_path -o output_path -t typescript_client` to update it.
 * For more information about the commercetools platform APIs, visit https://docs.commercetools.com/.
 */
/**
 **/
class ByProjectKeyInBusinessUnitKeyByBusinessUnitKeyMeRequestBuilder {
  constructor(args) {
    this.args = args;
  }
  customers() {
    return new ByProjectKeyInBusinessUnitKeyByBusinessUnitKeyMeCustomersRequestBuilder({
      pathArgs: {
        ...this.args.pathArgs
      },
      executeRequest: this.args.executeRequest,
      baseUri: this.args.baseUri
    });
  }
}

/**
 * Code generated by [commercetools RMF-Codegen](https://github.com/commercetools/rmf-codegen). DO NOT EDIT.
 * Please don't change this file manually but run `rmf-codegen generate raml_file_path -o output_path -t typescript_client` to update it.
 * For more information about the commercetools platform APIs, visit https://docs.commercetools.com/.
 */
/**
 **/
class ByProjectKeyInBusinessUnitKeyByBusinessUnitKeyRequestBuilder {
  constructor(args) {
    this.args = args;
  }
  me() {
    return new ByProjectKeyInBusinessUnitKeyByBusinessUnitKeyMeRequestBuilder({
      pathArgs: {
        ...this.args.pathArgs
      },
      executeRequest: this.args.executeRequest,
      baseUri: this.args.baseUri
    });
  }
}

/**
 * Code generated by [commercetools RMF-Codegen](https://github.com/commercetools/rmf-codegen). DO NOT EDIT.
 * Please don't change this file manually but run `rmf-codegen generate raml_file_path -o output_path -t typescript_client` to update it.
 * For more information about the commercetools platform APIs, visit https://docs.commercetools.com/.
 */
/**
 **/
class ByProjectKeyInStoreKeyByStoreKeyCartDiscountsByIDRequestBuilder {
  constructor(args) {
    this.args = args;
  }
  get(methodArgs) {
    return new ApiRequest({
      baseUri: this.args.baseUri,
      method: 'GET',
      uriTemplate: '/{projectKey}/in-store/key={storeKey}/cart-discounts/{ID}',
      pathVariables: this.args.pathArgs,
      headers: {
        ...(methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers)
      },
      queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs
    }, this.args.executeRequest);
  }
  /**
   *	To update a CartDiscount, you must have permissions for all Stores the CartDiscount is associated with, except when [removing a Store](ctp:api:type:CartDiscountRemoveStoreAction).
   *
   */
  post(methodArgs) {
    return new ApiRequest({
      baseUri: this.args.baseUri,
      method: 'POST',
      uriTemplate: '/{projectKey}/in-store/key={storeKey}/cart-discounts/{ID}',
      pathVariables: this.args.pathArgs,
      headers: {
        'Content-Type': 'application/json',
        ...(methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers)
      },
      queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs,
      body: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.body
    }, this.args.executeRequest);
  }
  /**
   *	To delete a CartDiscount, specify the `manage_cart_discounts:{projectKey}:{storeKey}` scope for all Stores associated with the CartDiscount.
   *
   */
  delete(methodArgs) {
    return new ApiRequest({
      baseUri: this.args.baseUri,
      method: 'DELETE',
      uriTemplate: '/{projectKey}/in-store/key={storeKey}/cart-discounts/{ID}',
      pathVariables: this.args.pathArgs,
      headers: {
        ...(methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers)
      },
      queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs
    }, this.args.executeRequest);
  }
}

/**
 * Code generated by [commercetools RMF-Codegen](https://github.com/commercetools/rmf-codegen). DO NOT EDIT.
 * Please don't change this file manually but run `rmf-codegen generate raml_file_path -o output_path -t typescript_client` to update it.
 * For more information about the commercetools platform APIs, visit https://docs.commercetools.com/.
 */
/**
 **/
class ByProjectKeyInStoreKeyByStoreKeyCartDiscountsKeyByKeyRequestBuilder {
  constructor(args) {
    this.args = args;
  }
  get(methodArgs) {
    return new ApiRequest({
      baseUri: this.args.baseUri,
      method: 'GET',
      uriTemplate: '/{projectKey}/in-store/key={storeKey}/cart-discounts/key={key}',
      pathVariables: this.args.pathArgs,
      headers: {
        ...(methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers)
      },
      queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs
    }, this.args.executeRequest);
  }
  /**
   *	To update a CartDiscount, you must have permissions for all Stores the CartDiscount is associated with, except when [removing a Store](ctp:api:type:CartDiscountRemoveStoreAction).
   *
   */
  post(methodArgs) {
    return new ApiRequest({
      baseUri: this.args.baseUri,
      method: 'POST',
      uriTemplate: '/{projectKey}/in-store/key={storeKey}/cart-discounts/key={key}',
      pathVariables: this.args.pathArgs,
      headers: {
        'Content-Type': 'application/json',
        ...(methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers)
      },
      queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs,
      body: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.body
    }, this.args.executeRequest);
  }
  /**
   *	To delete a CartDiscount, specify the `manage_cart_discounts:{projectKey}:{storeKey}` scope for all Stores associated with the CartDiscount.
   *
   */
  delete(methodArgs) {
    return new ApiRequest({
      baseUri: this.args.baseUri,
      method: 'DELETE',
      uriTemplate: '/{projectKey}/in-store/key={storeKey}/cart-discounts/key={key}',
      pathVariables: this.args.pathArgs,
      headers: {
        ...(methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers)
      },
      queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs
    }, this.args.executeRequest);
  }
}

/**
 * Code generated by [commercetools RMF-Codegen](https://github.com/commercetools/rmf-codegen). DO NOT EDIT.
 * Please don't change this file manually but run `rmf-codegen generate raml_file_path -o output_path -t typescript_client` to update it.
 * For more information about the commercetools platform APIs, visit https://docs.commercetools.com/.
 */
/**
 **/
class ByProjectKeyInStoreKeyByStoreKeyCartDiscountsRequestBuilder {
  constructor(args) {
    this.args = args;
  }
  withKey(childPathArgs) {
    return new ByProjectKeyInStoreKeyByStoreKeyCartDiscountsKeyByKeyRequestBuilder({
      pathArgs: {
        ...this.args.pathArgs,
        ...childPathArgs
      },
      executeRequest: this.args.executeRequest,
      baseUri: this.args.baseUri
    });
  }
  withId(childPathArgs) {
    return new ByProjectKeyInStoreKeyByStoreKeyCartDiscountsByIDRequestBuilder({
      pathArgs: {
        ...this.args.pathArgs,
        ...childPathArgs
      },
      executeRequest: this.args.executeRequest,
      baseUri: this.args.baseUri
    });
  }
  get(methodArgs) {
    return new ApiRequest({
      baseUri: this.args.baseUri,
      method: 'GET',
      uriTemplate: '/{projectKey}/in-store/key={storeKey}/cart-discounts',
      pathVariables: this.args.pathArgs,
      headers: {
        ...(methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers)
      }
    }, this.args.executeRequest);
  }
  /**
   *	When using the endpoint, the Store specified in the path and the Stores specified in the payload's `stores` field are added to the CartDiscount.
   *
   */
  post(methodArgs) {
    return new ApiRequest({
      baseUri: this.args.baseUri,
      method: 'POST',
      uriTemplate: '/{projectKey}/in-store/key={storeKey}/cart-discounts',
      pathVariables: this.args.pathArgs,
      headers: {
        'Content-Type': 'application/json',
        ...(methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers)
      },
      body: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.body
    }, this.args.executeRequest);
  }
}

/**
 * Code generated by [commercetools RMF-Codegen](https://github.com/commercetools/rmf-codegen). DO NOT EDIT.
 * Please don't change this file manually but run `rmf-codegen generate raml_file_path -o output_path -t typescript_client` to update it.
 * For more information about the commercetools platform APIs, visit https://docs.commercetools.com/.
 */
/**
 **/
class ByProjectKeyInStoreKeyByStoreKeyCartsReplicateRequestBuilder {
  constructor(args) {
    this.args = args;
  }
  /**
   *	Creates a new Cart by replicating an existing Cart or Order. Can be useful in cases where a customer wants to cancel a recent order to make some changes or reorder a previous order.
   *
   *	The replicated Cart preserves Customer information, Line Items and Custom Line Items, Custom Fields, Discount Codes, and other settings of the Cart or Order. If the Line Items become invalid, for example, due to removed Products or Prices, they are removed from the new Cart. If the Customer switches to another Customer Group, the new Cart is updated with the new value. It has up-to-date Tax Rates, Prices, and Line Item product data and is in `Active` [CartState](ctp:api:type:CartState).
   *
   *	The new Cart does not contain payments or deliveries. The [State](ctp:api:type:ItemState) of Line Items and Custom Line Items is reset to `initial`.
   *
   */
  post(methodArgs) {
    return new ApiRequest({
      baseUri: this.args.baseUri,
      method: 'POST',
      uriTemplate: '/{projectKey}/in-store/key={storeKey}/carts/replicate',
      pathVariables: this.args.pathArgs,
      headers: {
        'Content-Type': 'application/json',
        ...(methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers)
      },
      body: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.body
    }, this.args.executeRequest);
  }
}

/**
 * Code generated by [commercetools RMF-Codegen](https://github.com/commercetools/rmf-codegen). DO NOT EDIT.
 * Please don't change this file manually but run `rmf-codegen generate raml_file_path -o output_path -t typescript_client` to update it.
 * For more information about the commercetools platform APIs, visit https://docs.commercetools.com/.
 */
/**
 **/
class ByProjectKeyInStoreKeyByStoreKeyCartsByIDRequestBuilder {
  constructor(args) {
    this.args = args;
  }
  /**
   *	If the Cart exists in the Project but does not have the `store` field, or the `store` field references a different Store, a [ResourceNotFound](ctp:api:type:ResourceNotFoundError) error is returned.
   *
   *	To ensure the Cart is up-to-date with current values (such as Prices and Discounts), use the [Recalculate](ctp:api:type:CartRecalculateAction) update action.
   *
   */
  get(methodArgs) {
    return new ApiRequest({
      baseUri: this.args.baseUri,
      method: 'GET',
      uriTemplate: '/{projectKey}/in-store/key={storeKey}/carts/{ID}',
      pathVariables: this.args.pathArgs,
      headers: {
        ...(methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers)
      },
      queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs
    }, this.args.executeRequest);
  }
  /**
   *	Updates a [Cart](ctp:api:type:Cart) in the [Store](ctp:api:type:Store) specified by `storeKey`.
   *	If the Cart exists in the Project but does not have the `store` field, or the `store` field references a different Store, a [ResourceNotFound](ctp:api:type:ResourceNotFoundError) error is returned.
   *
   */
  post(methodArgs) {
    return new ApiRequest({
      baseUri: this.args.baseUri,
      method: 'POST',
      uriTemplate: '/{projectKey}/in-store/key={storeKey}/carts/{ID}',
      pathVariables: this.args.pathArgs,
      headers: {
        'Content-Type': 'application/json',
        ...(methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers)
      },
      queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs,
      body: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.body
    }, this.args.executeRequest);
  }
  /**
   *	If the Cart exists in the Project but does not have the `store` field, or the `store` field references a different Store, this method returns a [ResourceNotFound](ctp:api:type:ResourceNotFoundError) error.
   *
   */
  delete(methodArgs) {
    return new ApiRequest({
      baseUri: this.args.baseUri,
      method: 'DELETE',
      uriTemplate: '/{projectKey}/in-store/key={storeKey}/carts/{ID}',
      pathVariables: this.args.pathArgs,
      headers: {
        ...(methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers)
      },
      queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs
    }, this.args.executeRequest);
  }
}

/**
 * Code generated by [commercetools RMF-Codegen](https://github.com/commercetools/rmf-codegen). DO NOT EDIT.
 * Please don't change this file manually but run `rmf-codegen generate raml_file_path -o output_path -t typescript_client` to update it.
 * For more information about the commercetools platform APIs, visit https://docs.commercetools.com/.
 */
/**
 **/
class ByProjectKeyInStoreKeyByStoreKeyCartsCustomerIdByCustomerIdRequestBuilder {
  constructor(args) {
    this.args = args;
  }
  /**
   *	Retrieves the recently modified active Cart of a Customer with [CartOrigin](ctp:api:type:CartOrigin) `Customer`. If no active Cart exists, a [ResourceNotFound](ctp:api:type:ResourceNotFoundError) error is returned.
   *
   *	If the Cart exists in the Project but does not have the `store` field, or the `store` field references a different Store, a [ResourceNotFound](ctp:api:type:ResourceNotFoundError) error is returned.
   *
   *	To ensure the Cart is up-to-date with current values (such as Prices and Discounts), use the [Recalculate](ctp:api:type:CartRecalculateAction) update action.
   *
   */
  get(methodArgs) {
    return new ApiRequest({
      baseUri: this.args.baseUri,
      method: 'GET',
      uriTemplate: '/{projectKey}/in-store/key={storeKey}/carts/customer-id={customerId}',
      pathVariables: this.args.pathArgs,
      headers: {
        ...(methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers)
      },
      queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs
    }, this.args.executeRequest);
  }
}

/**
 * Code generated by [commercetools RMF-Codegen](https://github.com/commercetools/rmf-codegen). DO NOT EDIT.
 * Please don't change this file manually but run `rmf-codegen generate raml_file_path -o output_path -t typescript_client` to update it.
 * For more information about the commercetools platform APIs, visit https://docs.commercetools.com/.
 */
/**
 **/
class ByProjectKeyInStoreKeyByStoreKeyCartsKeyByKeyRequestBuilder {
  constructor(args) {
    this.args = args;
  }
  /**
   *	If the Cart exists in the Project but does not have the `store` field, or the `store` field references a different Store, a [ResourceNotFound](ctp:api:type:ResourceNotFoundError) error is returned.
   *
   *	To ensure the Cart is up-to-date with current values (such as Prices and Discounts), use the [Recalculate](ctp:api:type:CartRecalculateAction) update action.
   *
   */
  get(methodArgs) {
    return new ApiRequest({
      baseUri: this.args.baseUri,
      method: 'GET',
      uriTemplate: '/{projectKey}/in-store/key={storeKey}/carts/key={key}',
      pathVariables: this.args.pathArgs,
      headers: {
        ...(methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers)
      },
      queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs
    }, this.args.executeRequest);
  }
  /**
   *	If the Cart exists in the Project but does not have the `store` field, or the `store` field references a different Store, this method returns a [ResourceNotFound](ctp:api:type:ResourceNotFoundError) error.
   *
   */
  post(methodArgs) {
    return new ApiRequest({
      baseUri: this.args.baseUri,
      method: 'POST',
      uriTemplate: '/{projectKey}/in-store/key={storeKey}/carts/key={key}',
      pathVariables: this.args.pathArgs,
      headers: {
        'Content-Type': 'application/json',
        ...(methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers)
      },
      queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs,
      body: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.body
    }, this.args.executeRequest);
  }
  /**
   *	If the Cart exists in the Project but does not have the `store` field, or the `store` field references a different Store, this method returns a [ResourceNotFound](ctp:api:type:ResourceNotFoundError) error.
   *
   */
  delete(methodArgs) {
    return new ApiRequest({
      baseUri: this.args.baseUri,
      method: 'DELETE',
      uriTemplate: '/{projectKey}/in-store/key={storeKey}/carts/key={key}',
      pathVariables: this.args.pathArgs,
      headers: {
        ...(methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers)
      },
      queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs
    }, this.args.executeRequest);
  }
}

/**
 * Code generated by [commercetools RMF-Codegen](https://github.com/commercetools/rmf-codegen). DO NOT EDIT.
 * Please don't change this file manually but run `rmf-codegen generate raml_file_path -o output_path -t typescript_client` to update it.
 * For more information about the commercetools platform APIs, visit https://docs.commercetools.com/.
 */
/**
 **/
class ByProjectKeyInStoreKeyByStoreKeyCartsRequestBuilder {
  constructor(args) {
    this.args = args;
  }
  withCustomerId(childPathArgs) {
    return new ByProjectKeyInStoreKeyByStoreKeyCartsCustomerIdByCustomerIdRequestBuilder({
      pathArgs: {
        ...this.args.pathArgs,
        ...childPathArgs
      },
      executeRequest: this.args.executeRequest,
      baseUri: this.args.baseUri
    });
  }
  withKey(childPathArgs) {
    return new ByProjectKeyInStoreKeyByStoreKeyCartsKeyByKeyRequestBuilder({
      pathArgs: {
        ...this.args.pathArgs,
        ...childPathArgs
      },
      executeRequest: this.args.executeRequest,
      baseUri: this.args.baseUri
    });
  }
  replicate() {
    return new ByProjectKeyInStoreKeyByStoreKeyCartsReplicateRequestBuilder({
      pathArgs: {
        ...this.args.pathArgs
      },
      executeRequest: this.args.executeRequest,
      baseUri: this.args.baseUri
    });
  }
  withId(childPathArgs) {
    return new ByProjectKeyInStoreKeyByStoreKeyCartsByIDRequestBuilder({
      pathArgs: {
        ...this.args.pathArgs,
        ...childPathArgs
      },
      executeRequest: this.args.executeRequest,
      baseUri: this.args.baseUri
    });
  }

  /**
   *	Queries carts in a specific [Store](ctp:api:type:Store).
   */
  get(methodArgs) {
    return new ApiRequest({
      baseUri: this.args.baseUri,
      method: 'GET',
      uriTemplate: '/{projectKey}/in-store/key={storeKey}/carts',
      pathVariables: this.args.pathArgs,
      headers: {
        ...(methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers)
      },
      queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs
    }, this.args.executeRequest);
  }
  /**
   *	Creates a [Cart](ctp:api:type:Cart) in the [Store](ctp:api:type:Store) specified by `storeKey`.
   *	When using this endpoint the Cart's `store` field is always set to the [Store](ctp:api:type:Store) specified in the path parameter.
   *	If the referenced [ShippingMethod](ctp:api:type:ShippingMethod) in the [CartDraft](ctp:api:type:CartDraft) has a predicate that does not match, an [InvalidOperation](ctp:api:type:InvalidOperationError) error is returned.
   *
   */
  post(methodArgs) {
    return new ApiRequest({
      baseUri: this.args.baseUri,
      method: 'POST',
      uriTemplate: '/{projectKey}/in-store/key={storeKey}/carts',
      pathVariables: this.args.pathArgs,
      headers: {
        'Content-Type': 'application/json',
        ...(methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers)
      },
      queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs,
      body: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.body
    }, this.args.executeRequest);
  }
}

/**
 * Code generated by [commercetools RMF-Codegen](https://github.com/commercetools/rmf-codegen). DO NOT EDIT.
 * Please don't change this file manually but run `rmf-codegen generate raml_file_path -o output_path -t typescript_client` to update it.
 * For more information about the commercetools platform APIs, visit https://docs.commercetools.com/.
 */
/**
 **/
class ByProjectKeyInStoreKeyByStoreKeyCustomersEmailConfirmRequestBuilder {
  constructor(args) {
    this.args = args;
  }
  /**
   *	The customer verifies the email using the token value.
   *	Verifying the email of the Customer produces the [CustomerEmailVerified](ctp:api:type:CustomerEmailVerifiedMessage) Message.
   *
   *	If the Customer exists in the Project but the `stores` field references a different [Store](ctp:api:type:Store), this method returns a [ResourceNotFound](ctp:api:type:ResourceNotFoundError) error.
   *
   */
  post(methodArgs) {
    return new ApiRequest({
      baseUri: this.args.baseUri,
      method: 'POST',
      uriTemplate: '/{projectKey}/in-store/key={storeKey}/customers/email/confirm',
      pathVariables: this.args.pathArgs,
      headers: {
        'Content-Type': 'application/json',
        ...(methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers)
      },
      body: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.body
    }, this.args.executeRequest);
  }
}

/**
 * Code generated by [commercetools RMF-Codegen](https://github.com/commercetools/rmf-codegen). DO NOT EDIT.
 * Please don't change this file manually but run `rmf-codegen generate raml_file_path -o output_path -t typescript_client` to update it.
 * For more information about the commercetools platform APIs, visit https://docs.commercetools.com/.
 */
/**
 **/
class ByProjectKeyInStoreKeyByStoreKeyCustomersEmailTokenRequestBuilder {
  constructor(args) {
    this.args = args;
  }
  /**
   *	If the Customer exists in the Project but the `stores` field references a different Store, this method returns a [ResourceNotFound](ctp:api:type:ResourceNotFoundError) error.
   *
   */
  post(methodArgs) {
    return new ApiRequest({
      baseUri: this.args.baseUri,
      method: 'POST',
      uriTemplate: '/{projectKey}/in-store/key={storeKey}/customers/email-token',
      pathVariables: this.args.pathArgs,
      headers: {
        'Content-Type': 'application/json',
        ...(methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers)
      },
      body: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.body
    }, this.args.executeRequest);
  }
}

/**
 * Code generated by [commercetools RMF-Codegen](https://github.com/commercetools/rmf-codegen). DO NOT EDIT.
 * Please don't change this file manually but run `rmf-codegen generate raml_file_path -o output_path -t typescript_client` to update it.
 * For more information about the commercetools platform APIs, visit https://docs.commercetools.com/.
 */
/**
 **/
class ByProjectKeyInStoreKeyByStoreKeyCustomersPasswordTokenRequestBuilder {
  constructor(args) {
    this.args = args;
  }
  /**
   *	If the Customer exists in the Project but the `stores` field references a different Store, this method returns a [ResourceNotFound](ctp:api:type:ResourceNotFoundError) error.
   *
   */
  post(methodArgs) {
    return new ApiRequest({
      baseUri: this.args.baseUri,
      method: 'POST',
      uriTemplate: '/{projectKey}/in-store/key={storeKey}/customers/password-token',
      pathVariables: this.args.pathArgs,
      headers: {
        'Content-Type': 'application/json',
        ...(methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers)
      },
      body: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.body
    }, this.args.executeRequest);
  }
}

/**
 * Code generated by [commercetools RMF-Codegen](https://github.com/commercetools/rmf-codegen). DO NOT EDIT.
 * Please don't change this file manually but run `rmf-codegen generate raml_file_path -o output_path -t typescript_client` to update it.
 * For more information about the commercetools platform APIs, visit https://docs.commercetools.com/.
 */
/**
 **/
class ByProjectKeyInStoreKeyByStoreKeyCustomersPasswordRequestBuilder {
  constructor(args) {
    this.args = args;
  }
  /**
   *	Changing the password of the Customer produces the [CustomerPasswordUpdated](ctp:api:type:CustomerPasswordUpdatedMessage) Message with `reset=false`.
   *
   */
  post(methodArgs) {
    return new ApiRequest({
      baseUri: this.args.baseUri,
      method: 'POST',
      uriTemplate: '/{projectKey}/in-store/key={storeKey}/customers/password',
      pathVariables: this.args.pathArgs,
      headers: {
        'Content-Type': 'application/json',
        ...(methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers)
      },
      body: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.body
    }, this.args.executeRequest);
  }
}

/**
 * Code generated by [commercetools RMF-Codegen](https://github.com/commercetools/rmf-codegen). DO NOT EDIT.
 * Please don't change this file manually but run `rmf-codegen generate raml_file_path -o output_path -t typescript_client` to update it.
 * For more information about the commercetools platform APIs, visit https://docs.commercetools.com/.
 */
/**
 **/
class ByProjectKeyInStoreKeyByStoreKeyCustomersPasswordResetRequestBuilder {
  constructor(args) {
    this.args = args;
  }
  /**
   *	Resetting the password of the Customer produces the [CustomerPasswordUpdated](ctp:api:type:CustomerPasswordUpdatedMessage) Message with `reset=true`.
   *
   *	If the Customer exists in the Project but the `stores` field references a different [Store](ctp:api:type:Store), this method returns a [ResourceNotFound](ctp:api:type:ResourceNotFoundError) error.
   *
   */
  post(methodArgs) {
    return new ApiRequest({
      baseUri: this.args.baseUri,
      method: 'POST',
      uriTemplate: '/{projectKey}/in-store/key={storeKey}/customers/password/reset',
      pathVariables: this.args.pathArgs,
      headers: {
        'Content-Type': 'application/json',
        ...(methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers)
      },
      body: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.body
    }, this.args.executeRequest);
  }
}

/**
 * Code generated by [commercetools RMF-Codegen](https://github.com/commercetools/rmf-codegen). DO NOT EDIT.
 * Please don't change this file manually but run `rmf-codegen generate raml_file_path -o output_path -t typescript_client` to update it.
 * For more information about the commercetools platform APIs, visit https://docs.commercetools.com/.
 */
/**
 **/
class ByProjectKeyInStoreKeyByStoreKeyCustomersByIDRequestBuilder {
  constructor(args) {
    this.args = args;
  }
  /**
   *	If the Customer exists in the Project but the `stores` field references a different Store, this method returns a [ResourceNotFound](ctp:api:type:ResourceNotFoundError) error.
   *
   */
  get(methodArgs) {
    return new ApiRequest({
      baseUri: this.args.baseUri,
      method: 'GET',
      uriTemplate: '/{projectKey}/in-store/key={storeKey}/customers/{ID}',
      pathVariables: this.args.pathArgs,
      headers: {
        ...(methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers)
      },
      queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs
    }, this.args.executeRequest);
  }
  /**
   *	If the Customer exists in the Project but the `stores` field references a different [Store](ctp:api:type:Store), this method returns a [ResourceNotFound](ctp:api:type:ResourceNotFoundError) error.
   *
   */
  post(methodArgs) {
    return new ApiRequest({
      baseUri: this.args.baseUri,
      method: 'POST',
      uriTemplate: '/{projectKey}/in-store/key={storeKey}/customers/{ID}',
      pathVariables: this.args.pathArgs,
      headers: {
        'Content-Type': 'application/json',
        ...(methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers)
      },
      queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs,
      body: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.body
    }, this.args.executeRequest);
  }
  /**
   *	Deleting a Customer produces the [CustomerDeleted](ctp:api:type:CustomerDeletedMessage) Message.
   *
   *	If the Customer exists in the Project but the `stores` field references a different Store, this method returns a [ResourceNotFound](ctp:api:type:ResourceNotFoundError) error.
   *
   */
  delete(methodArgs) {
    return new ApiRequest({
      baseUri: this.args.baseUri,
      method: 'DELETE',
      uriTemplate: '/{projectKey}/in-store/key={storeKey}/customers/{ID}',
      pathVariables: this.args.pathArgs,
      headers: {
        ...(methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers)
      },
      queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs
    }, this.args.executeRequest);
  }
}

/**
 * Code generated by [commercetools RMF-Codegen](https://github.com/commercetools/rmf-codegen). DO NOT EDIT.
 * Please don't change this file manually but run `rmf-codegen generate raml_file_path -o output_path -t typescript_client` to update it.
 * For more information about the commercetools platform APIs, visit https://docs.commercetools.com/.
 */
/**
 **/
class ByProjectKeyInStoreKeyByStoreKeyCustomersEmailTokenByEmailTokenRequestBuilder {
  constructor(args) {
    this.args = args;
  }
  /**
   *	If the Customer exists in the Project but the `stores` field references a different [Store](ctp:api:type:Store), this method returns a [ResourceNotFound](ctp:api:type:ResourceNotFoundError) error.
   *
   */
  get(methodArgs) {
    return new ApiRequest({
      baseUri: this.args.baseUri,
      method: 'GET',
      uriTemplate: '/{projectKey}/in-store/key={storeKey}/customers/email-token={emailToken}',
      pathVariables: this.args.pathArgs,
      headers: {
        ...(methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers)
      },
      queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs
    }, this.args.executeRequest);
  }
}

/**
 * Code generated by [commercetools RMF-Codegen](https://github.com/commercetools/rmf-codegen). DO NOT EDIT.
 * Please don't change this file manually but run `rmf-codegen generate raml_file_path -o output_path -t typescript_client` to update it.
 * For more information about the commercetools platform APIs, visit https://docs.commercetools.com/.
 */
/**
 **/
class ByProjectKeyInStoreKeyByStoreKeyCustomersKeyByKeyRequestBuilder {
  constructor(args) {
    this.args = args;
  }
  /**
   *	If the Customer exists in the Project but the `stores` field references a different [Store](ctp:api:type:Store), this method returns a [ResourceNotFound](ctp:api:type:ResourceNotFoundError) error.
   *
   */
  get(methodArgs) {
    return new ApiRequest({
      baseUri: this.args.baseUri,
      method: 'GET',
      uriTemplate: '/{projectKey}/in-store/key={storeKey}/customers/key={key}',
      pathVariables: this.args.pathArgs,
      headers: {
        ...(methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers)
      },
      queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs
    }, this.args.executeRequest);
  }
  /**
   *	If the Customer exists in the Project but the `stores` field references a different Store, this method returns a [ResourceNotFound](ctp:api:type:ResourceNotFoundError) error.
   *
   */
  post(methodArgs) {
    return new ApiRequest({
      baseUri: this.args.baseUri,
      method: 'POST',
      uriTemplate: '/{projectKey}/in-store/key={storeKey}/customers/key={key}',
      pathVariables: this.args.pathArgs,
      headers: {
        'Content-Type': 'application/json',
        ...(methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers)
      },
      queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs,
      body: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.body
    }, this.args.executeRequest);
  }
  /**
   *	Deleting a Customer produces the [CustomerDeleted](ctp:api:type:CustomerDeletedMessage) Message.
   *
   *	If the Customer exists in the Project but the `stores` field references a different [Store](ctp:api:type:Store), this method returns a [ResourceNotFound](ctp:api:type:ResourceNotFoundError) error.
   *
   */
  delete(methodArgs) {
    return new ApiRequest({
      baseUri: this.args.baseUri,
      method: 'DELETE',
      uriTemplate: '/{projectKey}/in-store/key={storeKey}/customers/key={key}',
      pathVariables: this.args.pathArgs,
      headers: {
        ...(methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers)
      },
      queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs
    }, this.args.executeRequest);
  }
}

/**
 * Code generated by [commercetools RMF-Codegen](https://github.com/commercetools/rmf-codegen). DO NOT EDIT.
 * Please don't change this file manually but run `rmf-codegen generate raml_file_path -o output_path -t typescript_client` to update it.
 * For more information about the commercetools platform APIs, visit https://docs.commercetools.com/.
 */
/**
 **/
class ByProjectKeyInStoreKeyByStoreKeyCustomersPasswordTokenByPasswordTokenRequestBuilder {
  constructor(args) {
    this.args = args;
  }
  /**
   *	If the Customer exists in the Project but the `stores` field references a different Store, this method returns a [ResourceNotFound](ctp:api:type:ResourceNotFoundError) error.
   *
   */
  get(methodArgs) {
    return new ApiRequest({
      baseUri: this.args.baseUri,
      method: 'GET',
      uriTemplate: '/{projectKey}/in-store/key={storeKey}/customers/password-token={passwordToken}',
      pathVariables: this.args.pathArgs,
      headers: {
        ...(methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers)
      },
      queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs
    }, this.args.executeRequest);
  }
}

/**
 * Code generated by [commercetools RMF-Codegen](https://github.com/commercetools/rmf-codegen). DO NOT EDIT.
 * Please don't change this file manually but run `rmf-codegen generate raml_file_path -o output_path -t typescript_client` to update it.
 * For more information about the commercetools platform APIs, visit https://docs.commercetools.com/.
 */
/**
 **/
class ByProjectKeyInStoreKeyByStoreKeyCustomersRequestBuilder {
  constructor(args) {
    this.args = args;
  }
  withPasswordToken(childPathArgs) {
    return new ByProjectKeyInStoreKeyByStoreKeyCustomersPasswordTokenByPasswordTokenRequestBuilder({
      pathArgs: {
        ...this.args.pathArgs,
        ...childPathArgs
      },
      executeRequest: this.args.executeRequest,
      baseUri: this.args.baseUri
    });
  }
  withEmailToken(childPathArgs) {
    return new ByProjectKeyInStoreKeyByStoreKeyCustomersEmailTokenByEmailTokenRequestBuilder({
      pathArgs: {
        ...this.args.pathArgs,
        ...childPathArgs
      },
      executeRequest: this.args.executeRequest,
      baseUri: this.args.baseUri
    });
  }
  emailToken() {
    return new ByProjectKeyInStoreKeyByStoreKeyCustomersEmailTokenRequestBuilder({
      pathArgs: {
        ...this.args.pathArgs
      },
      executeRequest: this.args.executeRequest,
      baseUri: this.args.baseUri
    });
  }
  emailConfirm() {
    return new ByProjectKeyInStoreKeyByStoreKeyCustomersEmailConfirmRequestBuilder({
      pathArgs: {
        ...this.args.pathArgs
      },
      executeRequest: this.args.executeRequest,
      baseUri: this.args.baseUri
    });
  }
  password() {
    return new ByProjectKeyInStoreKeyByStoreKeyCustomersPasswordRequestBuilder({
      pathArgs: {
        ...this.args.pathArgs
      },
      executeRequest: this.args.executeRequest,
      baseUri: this.args.baseUri
    });
  }
  passwordReset() {
    return new ByProjectKeyInStoreKeyByStoreKeyCustomersPasswordResetRequestBuilder({
      pathArgs: {
        ...this.args.pathArgs
      },
      executeRequest: this.args.executeRequest,
      baseUri: this.args.baseUri
    });
  }
  passwordToken() {
    return new ByProjectKeyInStoreKeyByStoreKeyCustomersPasswordTokenRequestBuilder({
      pathArgs: {
        ...this.args.pathArgs
      },
      executeRequest: this.args.executeRequest,
      baseUri: this.args.baseUri
    });
  }
  withKey(childPathArgs) {
    return new ByProjectKeyInStoreKeyByStoreKeyCustomersKeyByKeyRequestBuilder({
      pathArgs: {
        ...this.args.pathArgs,
        ...childPathArgs
      },
      executeRequest: this.args.executeRequest,
      baseUri: this.args.baseUri
    });
  }
  withId(childPathArgs) {
    return new ByProjectKeyInStoreKeyByStoreKeyCustomersByIDRequestBuilder({
      pathArgs: {
        ...this.args.pathArgs,
        ...childPathArgs
      },
      executeRequest: this.args.executeRequest,
      baseUri: this.args.baseUri
    });
  }
  get(methodArgs) {
    return new ApiRequest({
      baseUri: this.args.baseUri,
      method: 'GET',
      uriTemplate: '/{projectKey}/in-store/key={storeKey}/customers',
      pathVariables: this.args.pathArgs,
      headers: {
        ...(methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers)
      },
      queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs
    }, this.args.executeRequest);
  }
  /**
   *	When using this endpoint, if omitted, the Customer `stores` field is set to the [Store](ctp:api:type:Store) specified in the path parameter.
   *
   *	If the `anonymousCart` field is set on the [CustomerDraft](ctp:api:type:CustomerDraft), then the newly created Customer will be assigned to that [Cart](ctp:api:type:Cart).
   *	Similarly, if the `anonymousId` field is set, the Customer will be set on all [Carts](ctp:api:type:Cart), [Orders](ctp:api:type:Order), [ShoppingLists](ctp:api:type:ShoppingList) and [Payments](ctp:api:type:Payment) with the same `anonymousId`.
   *	If a Cart with a `store` field specified, the `store` field must reference the same [Store](ctp:api:type:Store) specified in the `{storeKey}` path parameter.
   *	Creating a Customer produces the [CustomerCreated](ctp:api:type:CustomerCreatedMessage) Message.
   *
   */
  post(methodArgs) {
    return new ApiRequest({
      baseUri: this.args.baseUri,
      method: 'POST',
      uriTemplate: '/{projectKey}/in-store/key={storeKey}/customers',
      pathVariables: this.args.pathArgs,
      headers: {
        'Content-Type': 'application/json',
        ...(methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers)
      },
      queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs,
      body: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.body
    }, this.args.executeRequest);
  }
}

/**
 * Code generated by [commercetools RMF-Codegen](https://github.com/commercetools/rmf-codegen). DO NOT EDIT.
 * Please don't change this file manually but run `rmf-codegen generate raml_file_path -o output_path -t typescript_client` to update it.
 * For more information about the commercetools platform APIs, visit https://docs.commercetools.com/.
 */
/**
 **/
class ByProjectKeyInStoreKeyByStoreKeyLoginRequestBuilder {
  constructor(args) {
    this.args = args;
  }
  /**
   *	Authenticates a Customer associated with a [Store](ctp:api:type:Store). For more information, see [Global versus Store-specific Customers](/../api/customers-overview#global-versus-store-specific-customers).
   *
   *	If the Customer exists in the Project but the `stores` field references a different [Store](ctp:api:type:Store), this method returns an [InvalidCredentials](ctp:api:type:InvalidCredentialsError) error.
   *
   */
  post(methodArgs) {
    return new ApiRequest({
      baseUri: this.args.baseUri,
      method: 'POST',
      uriTemplate: '/{projectKey}/in-store/key={storeKey}/login',
      pathVariables: this.args.pathArgs,
      headers: {
        'Content-Type': 'application/json',
        ...(methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers)
      },
      body: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.body
    }, this.args.executeRequest);
  }
}

/**
 * Code generated by [commercetools RMF-Codegen](https://github.com/commercetools/rmf-codegen). DO NOT EDIT.
 * Please don't change this file manually but run `rmf-codegen generate raml_file_path -o output_path -t typescript_client` to update it.
 * For more information about the commercetools platform APIs, visit https://docs.commercetools.com/.
 */
/**
 **/
class ByProjectKeyInStoreKeyByStoreKeyMeActiveCartRequestBuilder {
  constructor(args) {
    this.args = args;
  }
  /**
   *	Retrieves the Customer's most recently modified active Cart in the Store specified by the `storeKey` path parameter.
   *
   *	Carts with `Merchant` or `Quote` [CartOrigin](ctp:api:type:CartOrigin) are ignored.
   *
   *	If no active Cart exists, a [ResourceNotFound](ctp:api:type:ResourceNotFoundError) error is returned.
   *
   */
  get(methodArgs) {
    return new ApiRequest({
      baseUri: this.args.baseUri,
      method: 'GET',
      uriTemplate: '/{projectKey}/in-store/key={storeKey}/me/active-cart',
      pathVariables: this.args.pathArgs,
      headers: {
        ...(methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers)
      },
      queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs
    }, this.args.executeRequest);
  }
}

/**
 * Code generated by [commercetools RMF-Codegen](https://github.com/commercetools/rmf-codegen). DO NOT EDIT.
 * Please don't change this file manually but run `rmf-codegen generate raml_file_path -o output_path -t typescript_client` to update it.
 * For more information about the commercetools platform APIs, visit https://docs.commercetools.com/.
 */
/**
 **/
class ByProjectKeyInStoreKeyByStoreKeyMeCartsByIDRequestBuilder {
  constructor(args) {
    this.args = args;
  }
  get(methodArgs) {
    return new ApiRequest({
      baseUri: this.args.baseUri,
      method: 'GET',
      uriTemplate: '/{projectKey}/in-store/key={storeKey}/me/carts/{ID}',
      pathVariables: this.args.pathArgs,
      headers: {
        ...(methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers)
      },
      queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs
    }, this.args.executeRequest);
  }
  /**
   *	If the Cart exists in the Project but does not have the `store` field, or the `store` field references a different Store, this method returns a [ResourceNotFound](ctp:api:type:ResourceNotFoundError) error.
   *
   */
  post(methodArgs) {
    return new ApiRequest({
      baseUri: this.args.baseUri,
      method: 'POST',
      uriTemplate: '/{projectKey}/in-store/key={storeKey}/me/carts/{ID}',
      pathVariables: this.args.pathArgs,
      headers: {
        'Content-Type': 'application/json',
        ...(methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers)
      },
      queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs,
      body: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.body
    }, this.args.executeRequest);
  }
  delete(methodArgs) {
    return new ApiRequest({
      baseUri: this.args.baseUri,
      method: 'DELETE',
      uriTemplate: '/{projectKey}/in-store/key={storeKey}/me/carts/{ID}',
      pathVariables: this.args.pathArgs,
      headers: {
        ...(methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers)
      },
      queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs
    }, this.args.executeRequest);
  }
}

/**
 * Code generated by [commercetools RMF-Codegen](https://github.com/commercetools/rmf-codegen). DO NOT EDIT.
 * Please don't change this file manually but run `rmf-codegen generate raml_file_path -o output_path -t typescript_client` to update it.
 * For more information about the commercetools platform APIs, visit https://docs.commercetools.com/.
 */
/**
 **/
class ByProjectKeyInStoreKeyByStoreKeyMeCartsRequestBuilder {
  constructor(args) {
    this.args = args;
  }
  withId(childPathArgs) {
    return new ByProjectKeyInStoreKeyByStoreKeyMeCartsByIDRequestBuilder({
      pathArgs: {
        ...this.args.pathArgs,
        ...childPathArgs
      },
      executeRequest: this.args.executeRequest,
      baseUri: this.args.baseUri
    });
  }
  get(methodArgs) {
    return new ApiRequest({
      baseUri: this.args.baseUri,
      method: 'GET',
      uriTemplate: '/{projectKey}/in-store/key={storeKey}/me/carts',
      pathVariables: this.args.pathArgs,
      headers: {
        ...(methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers)
      },
      queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs
    }, this.args.executeRequest);
  }
  /**
   *	The `store` field in the created [Cart](ctp:api:type:Cart) is set to the Store specified by the `storeKey` path parameter.
   *
   *	Specific Error Codes: [CountryNotConfiguredInStore](ctp:api:type:CountryNotConfiguredInStoreError)
   *
   */
  post(methodArgs) {
    return new ApiRequest({
      baseUri: this.args.baseUri,
      method: 'POST',
      uriTemplate: '/{projectKey}/in-store/key={storeKey}/me/carts',
      pathVariables: this.args.pathArgs,
      headers: {
        'Content-Type': 'application/json',
        ...(methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers)
      },
      queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs,
      body: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.body
    }, this.args.executeRequest);
  }
}

/**
 * Code generated by [commercetools RMF-Codegen](https://github.com/commercetools/rmf-codegen). DO NOT EDIT.
 * Please don't change this file manually but run `rmf-codegen generate raml_file_path -o output_path -t typescript_client` to update it.
 * For more information about the commercetools platform APIs, visit https://docs.commercetools.com/.
 */
/**
 **/
class ByProjectKeyInStoreKeyByStoreKeyMeEmailConfirmRequestBuilder {
  constructor(args) {
    this.args = args;
  }
  /**
   *	This is the last step in the [email verification process of a Customer](/../api/projects/customers#email-verification-of-customer-in-store).
   *
   */
  post(methodArgs) {
    return new ApiRequest({
      baseUri: this.args.baseUri,
      method: 'POST',
      uriTemplate: '/{projectKey}/in-store/key={storeKey}/me/email/confirm',
      pathVariables: this.args.pathArgs,
      headers: {
        'Content-Type': 'application/json',
        ...(methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers)
      },
      body: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.body
    }, this.args.executeRequest);
  }
}

/**
 * Code generated by [commercetools RMF-Codegen](https://github.com/commercetools/rmf-codegen). DO NOT EDIT.
 * Please don't change this file manually but run `rmf-codegen generate raml_file_path -o output_path -t typescript_client` to update it.
 * For more information about the commercetools platform APIs, visit https://docs.commercetools.com/.
 */
/**
 **/
class ByProjectKeyInStoreKeyByStoreKeyMeLoginRequestBuilder {
  constructor(args) {
    this.args = args;
  }
  /**
   *	Retrieves the authenticated Customer (that matches the given email/password pair) if they are part of a specific [Store](ctp:api:type:Store).
   *
   *	- If the Customer does not have a Cart, the most recently modified anonymous cart becomes the Customer's Cart.
   *	- If the Customer already has a Cart, the most recently modified anonymous cart is handled according to [AnonymousCartSignInMode](ctp:api:type:AnonymousCartSignInMode).
   *
   *	If a Cart is returned as part of [CustomerSignInResult](ctp:api:type:CustomerSignInResult), it has been [recalculated](ctp:api:type:MyCartRecalculateAction) with up-to-date prices, taxes, discounts, and invalid line items removed.
   *
   *	If an account with the given credentials is not found, an [InvalidCredentials](ctp:api:type:InvalidCredentialsError) error is returned.
   *
   */
  post(methodArgs) {
    return new ApiRequest({
      baseUri: this.args.baseUri,
      method: 'POST',
      uriTemplate: '/{projectKey}/in-store/key={storeKey}/me/login',
      pathVariables: this.args.pathArgs,
      headers: {
        'Content-Type': 'application/json',
        ...(methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers)
      },
      body: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.body
    }, this.args.executeRequest);
  }
}

/**
 * Code generated by [commercetools RMF-Codegen](https://github.com/commercetools/rmf-codegen). DO NOT EDIT.
 * Please don't change this file manually but run `rmf-codegen generate raml_file_path -o output_path -t typescript_client` to update it.
 * For more information about the commercetools platform APIs, visit https://docs.commercetools.com/.
 */
/**
 **/
class ByProjectKeyInStoreKeyByStoreKeyMeOrdersByIDRequestBuilder {
  constructor(args) {
    this.args = args;
  }
  get(methodArgs) {
    return new ApiRequest({
      baseUri: this.args.baseUri,
      method: 'GET',
      uriTemplate: '/{projectKey}/in-store/key={storeKey}/me/orders/{ID}',
      pathVariables: this.args.pathArgs,
      headers: {
        ...(methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers)
      },
      queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs
    }, this.args.executeRequest);
  }
}

/**
 * Code generated by [commercetools RMF-Codegen](https://github.com/commercetools/rmf-codegen). DO NOT EDIT.
 * Please don't change this file manually but run `rmf-codegen generate raml_file_path -o output_path -t typescript_client` to update it.
 * For more information about the commercetools platform APIs, visit https://docs.commercetools.com/.
 */
/**
 **/
class ByProjectKeyInStoreKeyByStoreKeyMeOrdersRequestBuilder {
  constructor(args) {
    this.args = args;
  }
  withId(childPathArgs) {
    return new ByProjectKeyInStoreKeyByStoreKeyMeOrdersByIDRequestBuilder({
      pathArgs: {
        ...this.args.pathArgs,
        ...childPathArgs
      },
      executeRequest: this.args.executeRequest,
      baseUri: this.args.baseUri
    });
  }
  get(methodArgs) {
    return new ApiRequest({
      baseUri: this.args.baseUri,
      method: 'GET',
      uriTemplate: '/{projectKey}/in-store/key={storeKey}/me/orders',
      pathVariables: this.args.pathArgs,
      headers: {
        ...(methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers)
      },
      queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs
    }, this.args.executeRequest);
  }
  post(methodArgs) {
    return new ApiRequest({
      baseUri: this.args.baseUri,
      method: 'POST',
      uriTemplate: '/{projectKey}/in-store/key={storeKey}/me/orders',
      pathVariables: this.args.pathArgs,
      headers: {
        'Content-Type': 'application/json',
        ...(methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers)
      },
      queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs,
      body: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.body
    }, this.args.executeRequest);
  }
}

/**
 * Code generated by [commercetools RMF-Codegen](https://github.com/commercetools/rmf-codegen). DO NOT EDIT.
 * Please don't change this file manually but run `rmf-codegen generate raml_file_path -o output_path -t typescript_client` to update it.
 * For more information about the commercetools platform APIs, visit https://docs.commercetools.com/.
 */
/**
 **/
class ByProjectKeyInStoreKeyByStoreKeyMePasswordResetRequestBuilder {
  constructor(args) {
    this.args = args;
  }
  /**
   *	This is the last step in the [password reset process of the authenticated Customer](/../api/projects/customers#password-reset-of-customer-in-store).
   *
   *	Resetting a password produces the of the Customer [CustomerPasswordUpdated](ctp:api:type:CustomerPasswordUpdatedMessage) Message with `reset=true`.
   *
   */
  post(methodArgs) {
    return new ApiRequest({
      baseUri: this.args.baseUri,
      method: 'POST',
      uriTemplate: '/{projectKey}/in-store/key={storeKey}/me/password/reset',
      pathVariables: this.args.pathArgs,
      headers: {
        'Content-Type': 'application/json',
        ...(methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers)
      },
      body: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.body
    }, this.args.executeRequest);
  }
}

/**
 * Code generated by [commercetools RMF-Codegen](https://github.com/commercetools/rmf-codegen). DO NOT EDIT.
 * Please don't change this file manually but run `rmf-codegen generate raml_file_path -o output_path -t typescript_client` to update it.
 * For more information about the commercetools platform APIs, visit https://docs.commercetools.com/.
 */
/**
 **/
class ByProjectKeyInStoreKeyByStoreKeyMePasswordRequestBuilder {
  constructor(args) {
    this.args = args;
  }
  reset() {
    return new ByProjectKeyInStoreKeyByStoreKeyMePasswordResetRequestBuilder({
      pathArgs: {
        ...this.args.pathArgs
      },
      executeRequest: this.args.executeRequest,
      baseUri: this.args.baseUri
    });
  }

  /**
   *	Changing the password of the Customer produces the [CustomerPasswordUpdated](ctp:api:type:CustomerPasswordUpdatedMessage) Message with `reset=false`.
   *
   */
  post(methodArgs) {
    return new ApiRequest({
      baseUri: this.args.baseUri,
      method: 'POST',
      uriTemplate: '/{projectKey}/in-store/key={storeKey}/me/password',
      pathVariables: this.args.pathArgs,
      headers: {
        'Content-Type': 'application/json',
        ...(methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers)
      },
      body: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.body
    }, this.args.executeRequest);
  }
}

/**
 * Code generated by [commercetools RMF-Codegen](https://github.com/commercetools/rmf-codegen). DO NOT EDIT.
 * Please don't change this file manually but run `rmf-codegen generate raml_file_path -o output_path -t typescript_client` to update it.
 * For more information about the commercetools platform APIs, visit https://docs.commercetools.com/.
 */
/**
 **/
class ByProjectKeyInStoreKeyByStoreKeyMeShoppingListsByIDRequestBuilder {
  constructor(args) {
    this.args = args;
  }
  /**
   *	If a ShoppingList exists in a Project but does _not_ have the `store` field, or the `store` field references a different [Store](ctp:api:type:Store),
   *	the [ResourceNotFound](/errors#404-not-found-1) error is returned.
   *
   */
  get(methodArgs) {
    return new ApiRequest({
      baseUri: this.args.baseUri,
      method: 'GET',
      uriTemplate: '/{projectKey}/in-store/key={storeKey}/me/shopping-lists/{ID}',
      pathVariables: this.args.pathArgs,
      headers: {
        ...(methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers)
      },
      queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs
    }, this.args.executeRequest);
  }
  /**
   *	If a ShoppingList exists in a Project but does _not_ have the `store` field, or the `store` field references a different [Store](ctp:api:type:Store),
   *	the [ResourceNotFound](/errors#404-not-found-1) error is returned.
   *
   */
  post(methodArgs) {
    return new ApiRequest({
      baseUri: this.args.baseUri,
      method: 'POST',
      uriTemplate: '/{projectKey}/in-store/key={storeKey}/me/shopping-lists/{ID}',
      pathVariables: this.args.pathArgs,
      headers: {
        'Content-Type': 'application/json',
        ...(methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers)
      },
      queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs,
      body: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.body
    }, this.args.executeRequest);
  }
  /**
   *	If a ShoppingList exists in a Project but does _not_ have the `store` field, or the `store` field references a different [Store](ctp:api:type:Store),
   *	the [ResourceNotFound](/errors#404-not-found-1) error is returned.
   *
   */
  delete(methodArgs) {
    return new ApiRequest({
      baseUri: this.args.baseUri,
      method: 'DELETE',
      uriTemplate: '/{projectKey}/in-store/key={storeKey}/me/shopping-lists/{ID}',
      pathVariables: this.args.pathArgs,
      headers: {
        ...(methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers)
      },
      queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs
    }, this.args.executeRequest);
  }
}

/**
 * Code generated by [commercetools RMF-Codegen](https://github.com/commercetools/rmf-codegen). DO NOT EDIT.
 * Please don't change this file manually but run `rmf-codegen generate raml_file_path -o output_path -t typescript_client` to update it.
 * For more information about the commercetools platform APIs, visit https://docs.commercetools.com/.
 */
/**
 **/
class ByProjectKeyInStoreKeyByStoreKeyMeShoppingListsKeyByKeyRequestBuilder {
  constructor(args) {
    this.args = args;
  }
  /**
   *	If a ShoppingList exists in a Project but does _not_ have the `store` field, or the `store` field references a different [Store](ctp:api:type:Store), the [ResourceNotFound](/errors#404-not-found-1) error is returned.
   *
   */
  get(methodArgs) {
    return new ApiRequest({
      baseUri: this.args.baseUri,
      method: 'GET',
      uriTemplate: '/{projectKey}/in-store/key={storeKey}/me/shopping-lists/key={key}',
      pathVariables: this.args.pathArgs,
      headers: {
        ...(methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers)
      },
      queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs
    }, this.args.executeRequest);
  }
  /**
   *	If a ShoppingList exists in a Project but does _not_ have the `store` field, or the `store` field references a different [Store](ctp:api:type:Store),
   *	the [ResourceNotFound](/errors#404-not-found-1) error is returned.
   *
   */
  post(methodArgs) {
    return new ApiRequest({
      baseUri: this.args.baseUri,
      method: 'POST',
      uriTemplate: '/{projectKey}/in-store/key={storeKey}/me/shopping-lists/key={key}',
      pathVariables: this.args.pathArgs,
      headers: {
        'Content-Type': 'application/json',
        ...(methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers)
      },
      queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs,
      body: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.body
    }, this.args.executeRequest);
  }
  /**
   *	If a ShoppingList exists in a Project but does _not_ have the `store` field, or the `store` field references a different [Store](ctp:api:type:Store),
   *	the [ResourceNotFound](/errors#404-not-found-1) error is returned.
   *
   */
  delete(methodArgs) {
    return new ApiRequest({
      baseUri: this.args.baseUri,
      method: 'DELETE',
      uriTemplate: '/{projectKey}/in-store/key={storeKey}/me/shopping-lists/key={key}',
      pathVariables: this.args.pathArgs,
      headers: {
        ...(methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers)
      },
      queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs
    }, this.args.executeRequest);
  }
}

/**
 * Code generated by [commercetools RMF-Codegen](https://github.com/commercetools/rmf-codegen). DO NOT EDIT.
 * Please don't change this file manually but run `rmf-codegen generate raml_file_path -o output_path -t typescript_client` to update it.
 * For more information about the commercetools platform APIs, visit https://docs.commercetools.com/.
 */
/**
 **/
class ByProjectKeyInStoreKeyByStoreKeyMeShoppingListsRequestBuilder {
  constructor(args) {
    this.args = args;
  }
  withKey(childPathArgs) {
    return new ByProjectKeyInStoreKeyByStoreKeyMeShoppingListsKeyByKeyRequestBuilder({
      pathArgs: {
        ...this.args.pathArgs,
        ...childPathArgs
      },
      executeRequest: this.args.executeRequest,
      baseUri: this.args.baseUri
    });
  }
  withId(childPathArgs) {
    return new ByProjectKeyInStoreKeyByStoreKeyMeShoppingListsByIDRequestBuilder({
      pathArgs: {
        ...this.args.pathArgs,
        ...childPathArgs
      },
      executeRequest: this.args.executeRequest,
      baseUri: this.args.baseUri
    });
  }
  get(methodArgs) {
    return new ApiRequest({
      baseUri: this.args.baseUri,
      method: 'GET',
      uriTemplate: '/{projectKey}/in-store/key={storeKey}/me/shopping-lists',
      pathVariables: this.args.pathArgs,
      headers: {
        ...(methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers)
      },
      queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs
    }, this.args.executeRequest);
  }
  /**
   *	When using this endpoint, the `store` field of a ShoppingList is always set to the [Store](ctp:api:type:Store) specified in the path parameter.
   *
   */
  post(methodArgs) {
    return new ApiRequest({
      baseUri: this.args.baseUri,
      method: 'POST',
      uriTemplate: '/{projectKey}/in-store/key={storeKey}/me/shopping-lists',
      pathVariables: this.args.pathArgs,
      headers: {
        'Content-Type': 'application/json',
        ...(methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers)
      },
      queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs,
      body: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.body
    }, this.args.executeRequest);
  }
}

/**
 * Code generated by [commercetools RMF-Codegen](https://github.com/commercetools/rmf-codegen). DO NOT EDIT.
 * Please don't change this file manually but run `rmf-codegen generate raml_file_path -o output_path -t typescript_client` to update it.
 * For more information about the commercetools platform APIs, visit https://docs.commercetools.com/.
 */
/**
 **/
class ByProjectKeyInStoreKeyByStoreKeyMeSignupRequestBuilder {
  constructor(args) {
    this.args = args;
  }
  /**
   *	If omitted in the request body, the [Customer](ctp:api:type:Customer) `stores` field is set to the [Store](ctp:api:type:Store) specified in the path parameter.
   *
   *	Creating a Customer produces the [CustomerCreated](ctp:api:type:CustomerCreatedMessage) Message.
   *
   */
  post(methodArgs) {
    return new ApiRequest({
      baseUri: this.args.baseUri,
      method: 'POST',
      uriTemplate: '/{projectKey}/in-store/key={storeKey}/me/signup',
      pathVariables: this.args.pathArgs,
      headers: {
        'Content-Type': 'application/json',
        ...(methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers)
      },
      body: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.body
    }, this.args.executeRequest);
  }
}

/**
 * Code generated by [commercetools RMF-Codegen](https://github.com/commercetools/rmf-codegen). DO NOT EDIT.
 * Please don't change this file manually but run `rmf-codegen generate raml_file_path -o output_path -t typescript_client` to update it.
 * For more information about the commercetools platform APIs, visit https://docs.commercetools.com/.
 */
/**
 **/
class ByProjectKeyInStoreKeyByStoreKeyMeRequestBuilder {
  constructor(args) {
    this.args = args;
  }
  /**
   *	A shopping cart holds product variants and can be ordered.
   */
  carts() {
    return new ByProjectKeyInStoreKeyByStoreKeyMeCartsRequestBuilder({
      pathArgs: {
        ...this.args.pathArgs
      },
      executeRequest: this.args.executeRequest,
      baseUri: this.args.baseUri
    });
  }
  /**
   *	An order can be created from a order, usually after a checkout process has been completed.
   */
  orders() {
    return new ByProjectKeyInStoreKeyByStoreKeyMeOrdersRequestBuilder({
      pathArgs: {
        ...this.args.pathArgs
      },
      executeRequest: this.args.executeRequest,
      baseUri: this.args.baseUri
    });
  }
  activeCart() {
    return new ByProjectKeyInStoreKeyByStoreKeyMeActiveCartRequestBuilder({
      pathArgs: {
        ...this.args.pathArgs
      },
      executeRequest: this.args.executeRequest,
      baseUri: this.args.baseUri
    });
  }
  /**
   *	shopping-lists e.g. for wishlist support
   *
   */
  shoppingLists() {
    return new ByProjectKeyInStoreKeyByStoreKeyMeShoppingListsRequestBuilder({
      pathArgs: {
        ...this.args.pathArgs
      },
      executeRequest: this.args.executeRequest,
      baseUri: this.args.baseUri
    });
  }
  emailConfirm() {
    return new ByProjectKeyInStoreKeyByStoreKeyMeEmailConfirmRequestBuilder({
      pathArgs: {
        ...this.args.pathArgs
      },
      executeRequest: this.args.executeRequest,
      baseUri: this.args.baseUri
    });
  }
  password() {
    return new ByProjectKeyInStoreKeyByStoreKeyMePasswordRequestBuilder({
      pathArgs: {
        ...this.args.pathArgs
      },
      executeRequest: this.args.executeRequest,
      baseUri: this.args.baseUri
    });
  }
  signup() {
    return new ByProjectKeyInStoreKeyByStoreKeyMeSignupRequestBuilder({
      pathArgs: {
        ...this.args.pathArgs
      },
      executeRequest: this.args.executeRequest,
      baseUri: this.args.baseUri
    });
  }
  login() {
    return new ByProjectKeyInStoreKeyByStoreKeyMeLoginRequestBuilder({
      pathArgs: {
        ...this.args.pathArgs
      },
      executeRequest: this.args.executeRequest,
      baseUri: this.args.baseUri
    });
  }
  get(methodArgs) {
    return new ApiRequest({
      baseUri: this.args.baseUri,
      method: 'GET',
      uriTemplate: '/{projectKey}/in-store/key={storeKey}/me',
      pathVariables: this.args.pathArgs,
      headers: {
        ...(methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers)
      },
      queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs
    }, this.args.executeRequest);
  }
  post(methodArgs) {
    return new ApiRequest({
      baseUri: this.args.baseUri,
      method: 'POST',
      uriTemplate: '/{projectKey}/in-store/key={storeKey}/me',
      pathVariables: this.args.pathArgs,
      headers: {
        'Content-Type': 'application/json',
        ...(methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers)
      },
      body: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.body
    }, this.args.executeRequest);
  }
  delete(methodArgs) {
    return new ApiRequest({
      baseUri: this.args.baseUri,
      method: 'DELETE',
      uriTemplate: '/{projectKey}/in-store/key={storeKey}/me',
      pathVariables: this.args.pathArgs,
      headers: {
        ...(methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers)
      },
      queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs
    }, this.args.executeRequest);
  }
}

/**
 * Code generated by [commercetools RMF-Codegen](https://github.com/commercetools/rmf-codegen). DO NOT EDIT.
 * Please don't change this file manually but run `rmf-codegen generate raml_file_path -o output_path -t typescript_client` to update it.
 * For more information about the commercetools platform APIs, visit https://docs.commercetools.com/.
 */
/**
 **/
class ByProjectKeyInStoreKeyByStoreKeyOrdersByIDRequestBuilder {
  constructor(args) {
    this.args = args;
  }
  /**
   *	Returns an [Order](ctp:api:type:Order) by its ID from a specific [Store](ctp:api:type:Store).
   *	If the Order exists in the Project but does not have the `store` field,
   *	or the `store` field references a different Store, this method returns a [ResourceNotFound](ctp:api:type:ResourceNotFoundError) error.
   *
   */
  get(methodArgs) {
    return new ApiRequest({
      baseUri: this.args.baseUri,
      method: 'GET',
      uriTemplate: '/{projectKey}/in-store/key={storeKey}/orders/{ID}',
      pathVariables: this.args.pathArgs,
      headers: {
        ...(methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers)
      },
      queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs
    }, this.args.executeRequest);
  }
  /**
   *	Updates an [Order](ctp:api:type:Order) in the [Store](ctp:api:type:Store) specified by {storeKey}.
   *	If the Order exists in the Project but does not have the `store` field,
   *	or the `store` field references a different Store, this method returns a [ResourceNotFound](ctp:api:type:ResourceNotFoundError) error.
   *
   */
  post(methodArgs) {
    return new ApiRequest({
      baseUri: this.args.baseUri,
      method: 'POST',
      uriTemplate: '/{projectKey}/in-store/key={storeKey}/orders/{ID}',
      pathVariables: this.args.pathArgs,
      headers: {
        'Content-Type': 'application/json',
        ...(methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers)
      },
      queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs,
      body: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.body
    }, this.args.executeRequest);
  }
  delete(methodArgs) {
    return new ApiRequest({
      baseUri: this.args.baseUri,
      method: 'DELETE',
      uriTemplate: '/{projectKey}/in-store/key={storeKey}/orders/{ID}',
      pathVariables: this.args.pathArgs,
      headers: {
        ...(methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers)
      },
      queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs
    }, this.args.executeRequest);
  }
}

/**
 * Code generated by [commercetools RMF-Codegen](https://github.com/commercetools/rmf-codegen). DO NOT EDIT.
 * Please don't change this file manually but run `rmf-codegen generate raml_file_path -o output_path -t typescript_client` to update it.
 * For more information about the commercetools platform APIs, visit https://docs.commercetools.com/.
 */
/**
 **/
class ByProjectKeyInStoreKeyByStoreKeyOrdersOrderNumberByOrderNumberRequestBuilder {
  constructor(args) {
    this.args = args;
  }
  /**
   *	Returns an order by its order number from a specific [Store](ctp:api:type:Store).
   *
   *	If the Order exists in the Project but does not have the `store` field,
   *	or the `store` field references a different [Store](ctp:api:type:Store), this method returns a [ResourceNotFound](ctp:api:type:ResourceNotFoundError) error.
   *	In case the orderNumber does not match the regular expression [a-zA-Z0-9_\-]+,
   *	it should be provided in URL-encoded format.
   *
   */
  get(methodArgs) {
    return new ApiRequest({
      baseUri: this.args.baseUri,
      method: 'GET',
      uriTemplate: '/{projectKey}/in-store/key={storeKey}/orders/order-number={orderNumber}',
      pathVariables: this.args.pathArgs,
      headers: {
        ...(methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers)
      },
      queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs
    }, this.args.executeRequest);
  }
  /**
   *	Updates an order in the [Store](ctp:api:type:Store) specified by {storeKey}.
   *
   *	If the [Order](ctp:api:type:Order) exists in the Project but does not have the `store` field,
   *	or the `store` field references a different Store, this method returns a [ResourceNotFound](ctp:api:type:ResourceNotFoundError) error.
   *	In case the orderNumber does not match the regular expression [a-zA-Z0-9_\-]+,
   *	it should be provided in URL-encoded format.
   *
   */
  post(methodArgs) {
    return new ApiRequest({
      baseUri: this.args.baseUri,
      method: 'POST',
      uriTemplate: '/{projectKey}/in-store/key={storeKey}/orders/order-number={orderNumber}',
      pathVariables: this.args.pathArgs,
      headers: {
        'Content-Type': 'application/json',
        ...(methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers)
      },
      queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs,
      body: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.body
    }, this.args.executeRequest);
  }
  delete(methodArgs) {
    return new ApiRequest({
      baseUri: this.args.baseUri,
      method: 'DELETE',
      uriTemplate: '/{projectKey}/in-store/key={storeKey}/orders/order-number={orderNumber}',
      pathVariables: this.args.pathArgs,
      headers: {
        ...(methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers)
      },
      queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs
    }, this.args.executeRequest);
  }
}

/**
 * Code generated by [commercetools RMF-Codegen](https://github.com/commercetools/rmf-codegen). DO NOT EDIT.
 * Please don't change this file manually but run `rmf-codegen generate raml_file_path -o output_path -t typescript_client` to update it.
 * For more information about the commercetools platform APIs, visit https://docs.commercetools.com/.
 */
/**
 **/
class ByProjectKeyInStoreKeyByStoreKeyOrdersRequestBuilder {
  constructor(args) {
    this.args = args;
  }
  withOrderNumber(childPathArgs) {
    return new ByProjectKeyInStoreKeyByStoreKeyOrdersOrderNumberByOrderNumberRequestBuilder({
      pathArgs: {
        ...this.args.pathArgs,
        ...childPathArgs
      },
      executeRequest: this.args.executeRequest,
      baseUri: this.args.baseUri
    });
  }
  withId(childPathArgs) {
    return new ByProjectKeyInStoreKeyByStoreKeyOrdersByIDRequestBuilder({
      pathArgs: {
        ...this.args.pathArgs,
        ...childPathArgs
      },
      executeRequest: this.args.executeRequest,
      baseUri: this.args.baseUri
    });
  }

  /**
   *	Queries orders in a specific [Store](ctp:api:type:Store).
   */
  get(methodArgs) {
    return new ApiRequest({
      baseUri: this.args.baseUri,
      method: 'GET',
      uriTemplate: '/{projectKey}/in-store/key={storeKey}/orders',
      pathVariables: this.args.pathArgs,
      headers: {
        ...(methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers)
      },
      queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs
    }, this.args.executeRequest);
  }
  /**
   *	Creates an order from a Cart from a specific [Store](ctp:api:type:Store).
   *	When using this endpoint the orders's `store` field is always set to the [Store](ctp:api:type:Store) specified in the path parameter.
   *	The cart must have a shipping address set before creating an order. When using the Platform TaxMode,
   *	the shipping address is used for tax calculation.
   *
   */
  post(methodArgs) {
    return new ApiRequest({
      baseUri: this.args.baseUri,
      method: 'POST',
      uriTemplate: '/{projectKey}/in-store/key={storeKey}/orders',
      pathVariables: this.args.pathArgs,
      headers: {
        'Content-Type': 'application/json',
        ...(methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers)
      },
      queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs,
      body: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.body
    }, this.args.executeRequest);
  }
}

/**
 * Code generated by [commercetools RMF-Codegen](https://github.com/commercetools/rmf-codegen). DO NOT EDIT.
 * Please don't change this file manually but run `rmf-codegen generate raml_file_path -o output_path -t typescript_client` to update it.
 * For more information about the commercetools platform APIs, visit https://docs.commercetools.com/.
 */
/**
 **/
class ByProjectKeyInStoreKeyByStoreKeyProductProjectionsByIDRequestBuilder {
  constructor(args) {
    this.args = args;
  }
  /**
   *	Gets the current or staged representation of a [Product](ctp:api:type:Product) by its ID from the specified [Store](ctp:api:type:Store).
   *	If the Store has defined some languages, countries, distribution or supply Channels,
   *	they are used for projections based on [locale](ctp:api:type:ProductProjectionLocales), [price](ctp:api:type:ProductProjectionPrices)
   *	and [inventory](ctp:api:type:ProductProjectionInventoryEntries).
   *
   *	When used with an API Client that has the `view_published_products:{projectKey}` scope, this endpoint only returns published (current) Product Projections.
   *
   */
  get(methodArgs) {
    return new ApiRequest({
      baseUri: this.args.baseUri,
      method: 'GET',
      uriTemplate: '/{projectKey}/in-store/key={storeKey}/product-projections/{ID}',
      pathVariables: this.args.pathArgs,
      headers: {
        ...(methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers)
      },
      queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs
    }, this.args.executeRequest);
  }
}

/**
 * Code generated by [commercetools RMF-Codegen](https://github.com/commercetools/rmf-codegen). DO NOT EDIT.
 * Please don't change this file manually but run `rmf-codegen generate raml_file_path -o output_path -t typescript_client` to update it.
 * For more information about the commercetools platform APIs, visit https://docs.commercetools.com/.
 */
/**
 **/
class ByProjectKeyInStoreKeyByStoreKeyProductProjectionsKeyByKeyRequestBuilder {
  constructor(args) {
    this.args = args;
  }
  /**
   *	Gets the current or staged representation of a [Product](ctp:api:type:Product) by its key from the specified [Store](ctp:api:type:Store).
   *	If the Store has defined some languages, countries, distribution or supply Channels,
   *	they are used for projections based on [locale](ctp:api:type:ProductProjectionLocales), [price](ctp:api:type:ProductProjectionPrices)
   *	and [inventory](ctp:api:type:ProductProjectionInventoryEntries).
   *
   *	When used with an API Client that has the `view_published_products:{projectKey}` scope, this endpoint only returns published (current) Product Projections.
   *
   */
  get(methodArgs) {
    return new ApiRequest({
      baseUri: this.args.baseUri,
      method: 'GET',
      uriTemplate: '/{projectKey}/in-store/key={storeKey}/product-projections/key={key}',
      pathVariables: this.args.pathArgs,
      headers: {
        ...(methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers)
      },
      queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs
    }, this.args.executeRequest);
  }
}

/**
 * Code generated by [commercetools RMF-Codegen](https://github.com/commercetools/rmf-codegen). DO NOT EDIT.
 * Please don't change this file manually but run `rmf-codegen generate raml_file_path -o output_path -t typescript_client` to update it.
 * For more information about the commercetools platform APIs, visit https://docs.commercetools.com/.
 */
/**
 **/
class ByProjectKeyInStoreKeyByStoreKeyProductProjectionsRequestBuilder {
  constructor(args) {
    this.args = args;
  }
  withKey(childPathArgs) {
    return new ByProjectKeyInStoreKeyByStoreKeyProductProjectionsKeyByKeyRequestBuilder({
      pathArgs: {
        ...this.args.pathArgs,
        ...childPathArgs
      },
      executeRequest: this.args.executeRequest,
      baseUri: this.args.baseUri
    });
  }
  withId(childPathArgs) {
    return new ByProjectKeyInStoreKeyByStoreKeyProductProjectionsByIDRequestBuilder({
      pathArgs: {
        ...this.args.pathArgs,
        ...childPathArgs
      },
      executeRequest: this.args.executeRequest,
      baseUri: this.args.baseUri
    });
  }
}

/**
 * Code generated by [commercetools RMF-Codegen](https://github.com/commercetools/rmf-codegen). DO NOT EDIT.
 * Please don't change this file manually but run `rmf-codegen generate raml_file_path -o output_path -t typescript_client` to update it.
 * For more information about the commercetools platform APIs, visit https://docs.commercetools.com/.
 */
/**
 **/
class ByProjectKeyInStoreKeyByStoreKeyProductSelectionAssignmentsRequestBuilder {
  constructor(args) {
    this.args = args;
  }
  /**
   *	Queries Product Selection assignments in a specific [Store](ctp:api:type:Store).
   *
   *	The response will include duplicate Products whenever more than one active Product Selection of the Store
   *	includes a Product. To make clear through which Product Selection a Product is available in the Store
   *	the response contains assignments including both the Product and the Product Selection.
   *	Only Products of Product Selections that are activated in the Store will be returned.
   *
   */
  get(methodArgs) {
    return new ApiRequest({
      baseUri: this.args.baseUri,
      method: 'GET',
      uriTemplate: '/{projectKey}/in-store/key={storeKey}/product-selection-assignments',
      pathVariables: this.args.pathArgs,
      headers: {
        ...(methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers)
      },
      queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs
    }, this.args.executeRequest);
  }
}

/**
 * Code generated by [commercetools RMF-Codegen](https://github.com/commercetools/rmf-codegen). DO NOT EDIT.
 * Please don't change this file manually but run `rmf-codegen generate raml_file_path -o output_path -t typescript_client` to update it.
 * For more information about the commercetools platform APIs, visit https://docs.commercetools.com/.
 */
/**
 **/
class ByProjectKeyInStoreKeyByStoreKeyShippingMethodsMatchingCartRequestBuilder {
  constructor(args) {
    this.args = args;
  }
  /**
   *	Retrieves all the ShippingMethods that can ship to the shipping address of the given Cart in a given [Store](ctp:api:type:Store).
   *	Each ShippingMethod contains exactly one ShippingRate with the flag `isMatching` set to `true`.
   *	This ShippingRate is used when the ShippingMethod is [added to the Cart](ctp:api:type:CartSetShippingMethodAction).
   *
   */
  get(methodArgs) {
    return new ApiRequest({
      baseUri: this.args.baseUri,
      method: 'GET',
      uriTemplate: '/{projectKey}/in-store/key={storeKey}/shipping-methods/matching-cart',
      pathVariables: this.args.pathArgs,
      headers: {
        ...(methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers)
      },
      queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs
    }, this.args.executeRequest);
  }
}

/**
 * Code generated by [commercetools RMF-Codegen](https://github.com/commercetools/rmf-codegen). DO NOT EDIT.
 * Please don't change this file manually but run `rmf-codegen generate raml_file_path -o output_path -t typescript_client` to update it.
 * For more information about the commercetools platform APIs, visit https://docs.commercetools.com/.
 */
/**
 **/
class ByProjectKeyInStoreKeyByStoreKeyShippingMethodsRequestBuilder {
  constructor(args) {
    this.args = args;
  }
  /**
   *	Get ShippingMethods for a cart in a store
   */
  matchingCart() {
    return new ByProjectKeyInStoreKeyByStoreKeyShippingMethodsMatchingCartRequestBuilder({
      pathArgs: {
        ...this.args.pathArgs
      },
      executeRequest: this.args.executeRequest,
      baseUri: this.args.baseUri
    });
  }
}

/**
 * Code generated by [commercetools RMF-Codegen](https://github.com/commercetools/rmf-codegen). DO NOT EDIT.
 * Please don't change this file manually but run `rmf-codegen generate raml_file_path -o output_path -t typescript_client` to update it.
 * For more information about the commercetools platform APIs, visit https://docs.commercetools.com/.
 */
/**
 **/
class ByProjectKeyInStoreKeyByStoreKeyShoppingListsByIDRequestBuilder {
  constructor(args) {
    this.args = args;
  }
  /**
   *	If a ShoppingList exists in a Project but does _not_ have the `store` field, or the `store` field references a different [Store](ctp:api:type:Store),
   *	the [ResourceNotFound](/errors#404-not-found-1) error is returned.
   *
   */
  get(methodArgs) {
    return new ApiRequest({
      baseUri: this.args.baseUri,
      method: 'GET',
      uriTemplate: '/{projectKey}/in-store/key={storeKey}/shopping-lists/{ID}',
      pathVariables: this.args.pathArgs,
      headers: {
        ...(methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers)
      },
      queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs
    }, this.args.executeRequest);
  }
  /**
   *	If a ShoppingList exists in a Project but does _not_ have the `store` field, or the `store` field references a different [Store](ctp:api:type:Store),
   *	the [ResourceNotFound](/errors#404-not-found-1) error is returned.
   *
   */
  post(methodArgs) {
    return new ApiRequest({
      baseUri: this.args.baseUri,
      method: 'POST',
      uriTemplate: '/{projectKey}/in-store/key={storeKey}/shopping-lists/{ID}',
      pathVariables: this.args.pathArgs,
      headers: {
        'Content-Type': 'application/json',
        ...(methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers)
      },
      queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs,
      body: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.body
    }, this.args.executeRequest);
  }
  /**
   *	If a ShoppingList exists in a Project but does _not_ have the `store` field, or the `store` field references a different [Store](ctp:api:type:Store),
   *	the [ResourceNotFound](/errors#404-not-found-1) error is returned.
   *
   */
  delete(methodArgs) {
    return new ApiRequest({
      baseUri: this.args.baseUri,
      method: 'DELETE',
      uriTemplate: '/{projectKey}/in-store/key={storeKey}/shopping-lists/{ID}',
      pathVariables: this.args.pathArgs,
      headers: {
        ...(methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers)
      },
      queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs
    }, this.args.executeRequest);
  }
}

/**
 * Code generated by [commercetools RMF-Codegen](https://github.com/commercetools/rmf-codegen). DO NOT EDIT.
 * Please don't change this file manually but run `rmf-codegen generate raml_file_path -o output_path -t typescript_client` to update it.
 * For more information about the commercetools platform APIs, visit https://docs.commercetools.com/.
 */
/**
 **/
class ByProjectKeyInStoreKeyByStoreKeyShoppingListsKeyByKeyRequestBuilder {
  constructor(args) {
    this.args = args;
  }
  /**
   *	If a ShoppingList exists in a Project but does _not_ have the `store` field, or the `store` field references a different [Store](ctp:api:type:Store),
   *	the [ResourceNotFound](/errors#404-not-found-1) error is returned.
   *
   */
  get(methodArgs) {
    return new ApiRequest({
      baseUri: this.args.baseUri,
      method: 'GET',
      uriTemplate: '/{projectKey}/in-store/key={storeKey}/shopping-lists/key={key}',
      pathVariables: this.args.pathArgs,
      headers: {
        ...(methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers)
      },
      queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs
    }, this.args.executeRequest);
  }
  /**
   *	If a ShoppingList exists in a Project but does _not_ have the `store` field, or the `store` field references a different [Store](ctp:api:type:Store),
   *	the [ResourceNotFound](/errors#404-not-found-1) error is returned.
   *
   */
  post(methodArgs) {
    return new ApiRequest({
      baseUri: this.args.baseUri,
      method: 'POST',
      uriTemplate: '/{projectKey}/in-store/key={storeKey}/shopping-lists/key={key}',
      pathVariables: this.args.pathArgs,
      headers: {
        'Content-Type': 'application/json',
        ...(methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers)
      },
      queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs,
      body: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.body
    }, this.args.executeRequest);
  }
  /**
   *	If a ShoppingList exists in a Project but does _not_ have the `store` field, or the `store` field references a different [Store](ctp:api:type:Store),
   *	the [ResourceNotFound](/errors#404-not-found-1) error is returned.
   *
   */
  delete(methodArgs) {
    return new ApiRequest({
      baseUri: this.args.baseUri,
      method: 'DELETE',
      uriTemplate: '/{projectKey}/in-store/key={storeKey}/shopping-lists/key={key}',
      pathVariables: this.args.pathArgs,
      headers: {
        ...(methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers)
      },
      queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs
    }, this.args.executeRequest);
  }
}

/**
 * Code generated by [commercetools RMF-Codegen](https://github.com/commercetools/rmf-codegen). DO NOT EDIT.
 * Please don't change this file manually but run `rmf-codegen generate raml_file_path -o output_path -t typescript_client` to update it.
 * For more information about the commercetools platform APIs, visit https://docs.commercetools.com/.
 */
/**
 **/
class ByProjectKeyInStoreKeyByStoreKeyShoppingListsRequestBuilder {
  constructor(args) {
    this.args = args;
  }
  withKey(childPathArgs) {
    return new ByProjectKeyInStoreKeyByStoreKeyShoppingListsKeyByKeyRequestBuilder({
      pathArgs: {
        ...this.args.pathArgs,
        ...childPathArgs
      },
      executeRequest: this.args.executeRequest,
      baseUri: this.args.baseUri
    });
  }
  withId(childPathArgs) {
    return new ByProjectKeyInStoreKeyByStoreKeyShoppingListsByIDRequestBuilder({
      pathArgs: {
        ...this.args.pathArgs,
        ...childPathArgs
      },
      executeRequest: this.args.executeRequest,
      baseUri: this.args.baseUri
    });
  }
  get(methodArgs) {
    return new ApiRequest({
      baseUri: this.args.baseUri,
      method: 'GET',
      uriTemplate: '/{projectKey}/in-store/key={storeKey}/shopping-lists',
      pathVariables: this.args.pathArgs,
      headers: {
        ...(methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers)
      },
      queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs
    }, this.args.executeRequest);
  }
  /**
   *	When using this endpoint, the `store` field of a ShoppingList is always set to the [Store](ctp:api:type:Store) specified in the path parameter.
   *
   */
  post(methodArgs) {
    return new ApiRequest({
      baseUri: this.args.baseUri,
      method: 'POST',
      uriTemplate: '/{projectKey}/in-store/key={storeKey}/shopping-lists',
      pathVariables: this.args.pathArgs,
      headers: {
        'Content-Type': 'application/json',
        ...(methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers)
      },
      queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs,
      body: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.body
    }, this.args.executeRequest);
  }
}

/**
 * Code generated by [commercetools RMF-Codegen](https://github.com/commercetools/rmf-codegen). DO NOT EDIT.
 * Please don't change this file manually but run `rmf-codegen generate raml_file_path -o output_path -t typescript_client` to update it.
 * For more information about the commercetools platform APIs, visit https://docs.commercetools.com/.
 */
/**
 **/
class ByProjectKeyInStoreKeyByStoreKeyRequestBuilder {
  constructor(args) {
    this.args = args;
  }
  /**
   *	A shopping cart holds product variants and can be ordered.
   */
  carts() {
    return new ByProjectKeyInStoreKeyByStoreKeyCartsRequestBuilder({
      pathArgs: {
        ...this.args.pathArgs
      },
      executeRequest: this.args.executeRequest,
      baseUri: this.args.baseUri
    });
  }
  /**
   *	An order can be created from a cart, usually after a checkout process has been completed.
   */
  orders() {
    return new ByProjectKeyInStoreKeyByStoreKeyOrdersRequestBuilder({
      pathArgs: {
        ...this.args.pathArgs
      },
      executeRequest: this.args.executeRequest,
      baseUri: this.args.baseUri
    });
  }
  me() {
    return new ByProjectKeyInStoreKeyByStoreKeyMeRequestBuilder({
      pathArgs: {
        ...this.args.pathArgs
      },
      executeRequest: this.args.executeRequest,
      baseUri: this.args.baseUri
    });
  }
  /**
   *	A Customer is a person purchasing products. Carts, Orders,
   *	Comments and Reviews can be associated to a Customer.
   *
   */
  customers() {
    return new ByProjectKeyInStoreKeyByStoreKeyCustomersRequestBuilder({
      pathArgs: {
        ...this.args.pathArgs
      },
      executeRequest: this.args.executeRequest,
      baseUri: this.args.baseUri
    });
  }
  /**
   *	Retrieves the authenticated customer.
   */
  login() {
    return new ByProjectKeyInStoreKeyByStoreKeyLoginRequestBuilder({
      pathArgs: {
        ...this.args.pathArgs
      },
      executeRequest: this.args.executeRequest,
      baseUri: this.args.baseUri
    });
  }
  shippingMethods() {
    return new ByProjectKeyInStoreKeyByStoreKeyShippingMethodsRequestBuilder({
      pathArgs: {
        ...this.args.pathArgs
      },
      executeRequest: this.args.executeRequest,
      baseUri: this.args.baseUri
    });
  }
  /**
   *	shopping-lists e.g. for wishlist support
   *
   */
  shoppingLists() {
    return new ByProjectKeyInStoreKeyByStoreKeyShoppingListsRequestBuilder({
      pathArgs: {
        ...this.args.pathArgs
      },
      executeRequest: this.args.executeRequest,
      baseUri: this.args.baseUri
    });
  }
  productProjections() {
    return new ByProjectKeyInStoreKeyByStoreKeyProductProjectionsRequestBuilder({
      pathArgs: {
        ...this.args.pathArgs
      },
      executeRequest: this.args.executeRequest,
      baseUri: this.args.baseUri
    });
  }
  productSelectionAssignments() {
    return new ByProjectKeyInStoreKeyByStoreKeyProductSelectionAssignmentsRequestBuilder({
      pathArgs: {
        ...this.args.pathArgs
      },
      executeRequest: this.args.executeRequest,
      baseUri: this.args.baseUri
    });
  }
  cartDiscounts() {
    return new ByProjectKeyInStoreKeyByStoreKeyCartDiscountsRequestBuilder({
      pathArgs: {
        ...this.args.pathArgs
      },
      executeRequest: this.args.executeRequest,
      baseUri: this.args.baseUri
    });
  }
}

/**
 * Code generated by [commercetools RMF-Codegen](https://github.com/commercetools/rmf-codegen). DO NOT EDIT.
 * Please don't change this file manually but run `rmf-codegen generate raml_file_path -o output_path -t typescript_client` to update it.
 * For more information about the commercetools platform APIs, visit https://docs.commercetools.com/.
 */
/**
 **/
class ByProjectKeyInventoryByIDRequestBuilder {
  constructor(args) {
    this.args = args;
  }
  get(methodArgs) {
    return new ApiRequest({
      baseUri: this.args.baseUri,
      method: 'GET',
      uriTemplate: '/{projectKey}/inventory/{ID}',
      pathVariables: this.args.pathArgs,
      headers: {
        ...(methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers)
      },
      queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs
    }, this.args.executeRequest);
  }
  post(methodArgs) {
    return new ApiRequest({
      baseUri: this.args.baseUri,
      method: 'POST',
      uriTemplate: '/{projectKey}/inventory/{ID}',
      pathVariables: this.args.pathArgs,
      headers: {
        'Content-Type': 'application/json',
        ...(methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers)
      },
      queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs,
      body: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.body
    }, this.args.executeRequest);
  }
  /**
   *	Produces the [InventoryEntryDeleted](ctp:api:type:InventoryEntryDeletedMessage) Message.
   */
  delete(methodArgs) {
    return new ApiRequest({
      baseUri: this.args.baseUri,
      method: 'DELETE',
      uriTemplate: '/{projectKey}/inventory/{ID}',
      pathVariables: this.args.pathArgs,
      headers: {
        ...(methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers)
      },
      queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs
    }, this.args.executeRequest);
  }
}

/**
 * Code generated by [commercetools RMF-Codegen](https://github.com/commercetools/rmf-codegen). DO NOT EDIT.
 * Please don't change this file manually but run `rmf-codegen generate raml_file_path -o output_path -t typescript_client` to update it.
 * For more information about the commercetools platform APIs, visit https://docs.commercetools.com/.
 */
/**
 **/
class ByProjectKeyInventoryKeyByKeyRequestBuilder {
  constructor(args) {
    this.args = args;
  }
  get(methodArgs) {
    return new ApiRequest({
      baseUri: this.args.baseUri,
      method: 'GET',
      uriTemplate: '/{projectKey}/inventory/key={key}',
      pathVariables: this.args.pathArgs,
      headers: {
        ...(methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers)
      },
      queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs
    }, this.args.executeRequest);
  }
  post(methodArgs) {
    return new ApiRequest({
      baseUri: this.args.baseUri,
      method: 'POST',
      uriTemplate: '/{projectKey}/inventory/key={key}',
      pathVariables: this.args.pathArgs,
      headers: {
        'Content-Type': 'application/json',
        ...(methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers)
      },
      queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs,
      body: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.body
    }, this.args.executeRequest);
  }
  /**
   *	Produces the [InventoryEntryDeleted](ctp:api:type:InventoryEntryDeletedMessage) Message.
   */
  delete(methodArgs) {
    return new ApiRequest({
      baseUri: this.args.baseUri,
      method: 'DELETE',
      uriTemplate: '/{projectKey}/inventory/key={key}',
      pathVariables: this.args.pathArgs,
      headers: {
        ...(methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers)
      },
      queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs
    }, this.args.executeRequest);
  }
}

/**
 * Code generated by [commercetools RMF-Codegen](https://github.com/commercetools/rmf-codegen). DO NOT EDIT.
 * Please don't change this file manually but run `rmf-codegen generate raml_file_path -o output_path -t typescript_client` to update it.
 * For more information about the commercetools platform APIs, visit https://docs.commercetools.com/.
 */
/**
 **/
class ByProjectKeyInventoryRequestBuilder {
  constructor(args) {
    this.args = args;
  }
  withId(childPathArgs) {
    return new ByProjectKeyInventoryByIDRequestBuilder({
      pathArgs: {
        ...this.args.pathArgs,
        ...childPathArgs
      },
      executeRequest: this.args.executeRequest,
      baseUri: this.args.baseUri
    });
  }
  withKey(childPathArgs) {
    return new ByProjectKeyInventoryKeyByKeyRequestBuilder({
      pathArgs: {
        ...this.args.pathArgs,
        ...childPathArgs
      },
      executeRequest: this.args.executeRequest,
      baseUri: this.args.baseUri
    });
  }
  get(methodArgs) {
    return new ApiRequest({
      baseUri: this.args.baseUri,
      method: 'GET',
      uriTemplate: '/{projectKey}/inventory',
      pathVariables: this.args.pathArgs,
      headers: {
        ...(methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers)
      },
      queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs
    }, this.args.executeRequest);
  }
  /**
   *	Produces the [InventoryEntryCreated](ctp:api:type:InventoryEntryCreatedMessage) Message.
   */
  post(methodArgs) {
    return new ApiRequest({
      baseUri: this.args.baseUri,
      method: 'POST',
      uriTemplate: '/{projectKey}/inventory',
      pathVariables: this.args.pathArgs,
      headers: {
        'Content-Type': 'application/json',
        ...(methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers)
      },
      queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs,
      body: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.body
    }, this.args.executeRequest);
  }
}

/**
 * Code generated by [commercetools RMF-Codegen](https://github.com/commercetools/rmf-codegen). DO NOT EDIT.
 * Please don't change this file manually but run `rmf-codegen generate raml_file_path -o output_path -t typescript_client` to update it.
 * For more information about the commercetools platform APIs, visit https://docs.commercetools.com/.
 */
/**
 **/
class ByProjectKeyLoginRequestBuilder {
  constructor(args) {
    this.args = args;
  }
  /**
   *	Authenticates a global Customer not associated with a Store.
   *	For more information, see [Global versus Store-specific Customers](/../api/customers-overview#global-versus-store-specific-customers).
   *	If the Customer is registered in a Store, use the [Authenticate (sign in) Customer in Store](/../api/projects/customers#authenticate-sign-in-customer-in-store) method.
   *
   *	If an account with the given credentials is not found, an [InvalidCredentials](ctp:api:type:InvalidCredentialsError) error is returned.
   *
   */
  post(methodArgs) {
    return new ApiRequest({
      baseUri: this.args.baseUri,
      method: 'POST',
      uriTemplate: '/{projectKey}/login',
      pathVariables: this.args.pathArgs,
      headers: {
        'Content-Type': 'application/json',
        ...(methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers)
      },
      body: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.body
    }, this.args.executeRequest);
  }
}

/**
 * Code generated by [commercetools RMF-Codegen](https://github.com/commercetools/rmf-codegen). DO NOT EDIT.
 * Please don't change this file manually but run `rmf-codegen generate raml_file_path -o output_path -t typescript_client` to update it.
 * For more information about the commercetools platform APIs, visit https://docs.commercetools.com/.
 */
/**
 **/
class ByProjectKeyMeActiveCartRequestBuilder {
  constructor(args) {
    this.args = args;
  }
  /**
   *	Retrieves the Customer's most recently modified active Cart.
   *	Carts with `Merchant` or `Quote` [CartOrigin](ctp:api:type:CartOrigin) are ignored.
   *
   *	If no active Cart exists, a [ResourceNotFound](ctp:api:type:ResourceNotFoundError) error is returned.
   *
   */
  get(methodArgs) {
    return new ApiRequest({
      baseUri: this.args.baseUri,
      method: 'GET',
      uriTemplate: '/{projectKey}/me/active-cart',
      pathVariables: this.args.pathArgs,
      headers: {
        ...(methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers)
      },
      queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs
    }, this.args.executeRequest);
  }
}

/**
 * Code generated by [commercetools RMF-Codegen](https://github.com/commercetools/rmf-codegen). DO NOT EDIT.
 * Please don't change this file manually but run `rmf-codegen generate raml_file_path -o output_path -t typescript_client` to update it.
 * For more information about the commercetools platform APIs, visit https://docs.commercetools.com/.
 */
/**
 **/
class ByProjectKeyMeBusinessUnitsByIDRequestBuilder {
  constructor(args) {
    this.args = args;
  }
  get(methodArgs) {
    return new ApiRequest({
      baseUri: this.args.baseUri,
      method: 'GET',
      uriTemplate: '/{projectKey}/me/business-units/{ID}',
      pathVariables: this.args.pathArgs,
      headers: {
        ...(methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers)
      },
      queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs
    }, this.args.executeRequest);
  }
  post(methodArgs) {
    return new ApiRequest({
      baseUri: this.args.baseUri,
      method: 'POST',
      uriTemplate: '/{projectKey}/me/business-units/{ID}',
      pathVariables: this.args.pathArgs,
      headers: {
        'Content-Type': 'application/json',
        ...(methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers)
      },
      queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs,
      body: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.body
    }, this.args.executeRequest);
  }
  delete(methodArgs) {
    return new ApiRequest({
      baseUri: this.args.baseUri,
      method: 'DELETE',
      uriTemplate: '/{projectKey}/me/business-units/{ID}',
      pathVariables: this.args.pathArgs,
      headers: {
        ...(methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers)
      },
      queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs
    }, this.args.executeRequest);
  }
}

/**
 * Code generated by [commercetools RMF-Codegen](https://github.com/commercetools/rmf-codegen). DO NOT EDIT.
 * Please don't change this file manually but run `rmf-codegen generate raml_file_path -o output_path -t typescript_client` to update it.
 * For more information about the commercetools platform APIs, visit https://docs.commercetools.com/.
 */
/**
 **/
class ByProjectKeyMeBusinessUnitsKeyByKeyRequestBuilder {
  constructor(args) {
    this.args = args;
  }
  get(methodArgs) {
    return new ApiRequest({
      baseUri: this.args.baseUri,
      method: 'GET',
      uriTemplate: '/{projectKey}/me/business-units/key={key}',
      pathVariables: this.args.pathArgs,
      headers: {
        ...(methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers)
      },
      queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs
    }, this.args.executeRequest);
  }
  post(methodArgs) {
    return new ApiRequest({
      baseUri: this.args.baseUri,
      method: 'POST',
      uriTemplate: '/{projectKey}/me/business-units/key={key}',
      pathVariables: this.args.pathArgs,
      headers: {
        'Content-Type': 'application/json',
        ...(methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers)
      },
      queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs,
      body: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.body
    }, this.args.executeRequest);
  }
  delete(methodArgs) {
    return new ApiRequest({
      baseUri: this.args.baseUri,
      method: 'DELETE',
      uriTemplate: '/{projectKey}/me/business-units/key={key}',
      pathVariables: this.args.pathArgs,
      headers: {
        ...(methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers)
      },
      queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs
    }, this.args.executeRequest);
  }
}

/**
 * Code generated by [commercetools RMF-Codegen](https://github.com/commercetools/rmf-codegen). DO NOT EDIT.
 * Please don't change this file manually but run `rmf-codegen generate raml_file_path -o output_path -t typescript_client` to update it.
 * For more information about the commercetools platform APIs, visit https://docs.commercetools.com/.
 */
/**
 **/
class ByProjectKeyMeBusinessUnitsRequestBuilder {
  constructor(args) {
    this.args = args;
  }
  withId(childPathArgs) {
    return new ByProjectKeyMeBusinessUnitsByIDRequestBuilder({
      pathArgs: {
        ...this.args.pathArgs,
        ...childPathArgs
      },
      executeRequest: this.args.executeRequest,
      baseUri: this.args.baseUri
    });
  }
  withKey(childPathArgs) {
    return new ByProjectKeyMeBusinessUnitsKeyByKeyRequestBuilder({
      pathArgs: {
        ...this.args.pathArgs,
        ...childPathArgs
      },
      executeRequest: this.args.executeRequest,
      baseUri: this.args.baseUri
    });
  }
  get(methodArgs) {
    return new ApiRequest({
      baseUri: this.args.baseUri,
      method: 'GET',
      uriTemplate: '/{projectKey}/me/business-units',
      pathVariables: this.args.pathArgs,
      headers: {
        ...(methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers)
      },
      queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs
    }, this.args.executeRequest);
  }
  /**
   *	Automatically assigns the Associate to the Business Unit in the default [Associate Role](ctp:api:type:AssociateRole) defined in [BusinessUnitConfiguration](ctp:api:type:BusinessUnitConfiguration). If there is no default Associate Role configured, this request fails with an [InvalidOperation](ctp:api:type:InvalidOperationError) error. When creating a Division, the Associate must have the `AddChildUnits` [Permission](ctp:api:type:Permission) in the parent unit. If the required [Permission](/projects/associate-roles#permission) is missing, an [AssociateMissingPermission](/errors#associatemissingpermission) error is returned.
   *
   */
  post(methodArgs) {
    return new ApiRequest({
      baseUri: this.args.baseUri,
      method: 'POST',
      uriTemplate: '/{projectKey}/me/business-units',
      pathVariables: this.args.pathArgs,
      headers: {
        'Content-Type': 'application/json',
        ...(methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers)
      },
      queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs,
      body: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.body
    }, this.args.executeRequest);
  }
}

/**
 * Code generated by [commercetools RMF-Codegen](https://github.com/commercetools/rmf-codegen). DO NOT EDIT.
 * Please don't change this file manually but run `rmf-codegen generate raml_file_path -o output_path -t typescript_client` to update it.
 * For more information about the commercetools platform APIs, visit https://docs.commercetools.com/.
 */
/**
 **/
class ByProjectKeyMeCartsReplicateRequestBuilder {
  constructor(args) {
    this.args = args;
  }
  /**
   *	Creates a new Cart by replicating an existing Cart or Order of the authenticated Customer.
   *	This can be useful in cases where a customer wants to cancel a recent order to make some changes or reorder a previous order.
   *
   *	The replicated Cart preserves Customer information, Line Items and Custom Line Items, Custom Fields, Discount Codes, and other settings of the Cart or Order.
   *	If the Line Items become invalid, for example, due to removed Products or Prices, they are removed from the new Cart.
   *	If the Customer switches to another Customer Group, the new Cart is updated with the new value.
   *	It has up-to-date Tax Rates, Prices, and Line Item product data and is in `Active` [CartState](ctp:api:type:CartState).
   *
   *	The new Cart does not contain Payments or Deliveries. The [State](ctp:api:type:ItemState) of Line Items and Custom Line Items is reset to `initial`.
   *
   *	In case the Cart or Order to be replicated does not belong to the authenticaed Customer, the API returns a [ResourceNotFound](ctp:api:type:ResourceNotFoundError) error
   *
   */
  post(methodArgs) {
    return new ApiRequest({
      baseUri: this.args.baseUri,
      method: 'POST',
      uriTemplate: '/{projectKey}/me/carts/replicate',
      pathVariables: this.args.pathArgs,
      headers: {
        'Content-Type': 'application/json',
        ...(methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers)
      },
      body: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.body
    }, this.args.executeRequest);
  }
}

/**
 * Code generated by [commercetools RMF-Codegen](https://github.com/commercetools/rmf-codegen). DO NOT EDIT.
 * Please don't change this file manually but run `rmf-codegen generate raml_file_path -o output_path -t typescript_client` to update it.
 * For more information about the commercetools platform APIs, visit https://docs.commercetools.com/.
 */
/**
 **/
class ByProjectKeyMeCartsByIDRequestBuilder {
  constructor(args) {
    this.args = args;
  }
  get(methodArgs) {
    return new ApiRequest({
      baseUri: this.args.baseUri,
      method: 'GET',
      uriTemplate: '/{projectKey}/me/carts/{ID}',
      pathVariables: this.args.pathArgs,
      headers: {
        ...(methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers)
      },
      queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs
    }, this.args.executeRequest);
  }
  post(methodArgs) {
    return new ApiRequest({
      baseUri: this.args.baseUri,
      method: 'POST',
      uriTemplate: '/{projectKey}/me/carts/{ID}',
      pathVariables: this.args.pathArgs,
      headers: {
        'Content-Type': 'application/json',
        ...(methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers)
      },
      queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs,
      body: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.body
    }, this.args.executeRequest);
  }
  delete(methodArgs) {
    return new ApiRequest({
      baseUri: this.args.baseUri,
      method: 'DELETE',
      uriTemplate: '/{projectKey}/me/carts/{ID}',
      pathVariables: this.args.pathArgs,
      headers: {
        ...(methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers)
      },
      queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs
    }, this.args.executeRequest);
  }
}

/**
 * Code generated by [commercetools RMF-Codegen](https://github.com/commercetools/rmf-codegen). DO NOT EDIT.
 * Please don't change this file manually but run `rmf-codegen generate raml_file_path -o output_path -t typescript_client` to update it.
 * For more information about the commercetools platform APIs, visit https://docs.commercetools.com/.
 */
/**
 **/
class ByProjectKeyMeCartsKeyByKeyRequestBuilder {
  constructor(args) {
    this.args = args;
  }
  get(methodArgs) {
    return new ApiRequest({
      baseUri: this.args.baseUri,
      method: 'GET',
      uriTemplate: '/{projectKey}/me/carts/key={key}',
      pathVariables: this.args.pathArgs,
      headers: {
        ...(methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers)
      },
      queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs
    }, this.args.executeRequest);
  }
  post(methodArgs) {
    return new ApiRequest({
      baseUri: this.args.baseUri,
      method: 'POST',
      uriTemplate: '/{projectKey}/me/carts/key={key}',
      pathVariables: this.args.pathArgs,
      headers: {
        'Content-Type': 'application/json',
        ...(methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers)
      },
      queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs,
      body: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.body
    }, this.args.executeRequest);
  }
  delete(methodArgs) {
    return new ApiRequest({
      baseUri: this.args.baseUri,
      method: 'DELETE',
      uriTemplate: '/{projectKey}/me/carts/key={key}',
      pathVariables: this.args.pathArgs,
      headers: {
        ...(methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers)
      },
      queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs
    }, this.args.executeRequest);
  }
}

/**
 * Code generated by [commercetools RMF-Codegen](https://github.com/commercetools/rmf-codegen). DO NOT EDIT.
 * Please don't change this file manually but run `rmf-codegen generate raml_file_path -o output_path -t typescript_client` to update it.
 * For more information about the commercetools platform APIs, visit https://docs.commercetools.com/.
 */
/**
 **/
class ByProjectKeyMeCartsRequestBuilder {
  constructor(args) {
    this.args = args;
  }
  withKey(childPathArgs) {
    return new ByProjectKeyMeCartsKeyByKeyRequestBuilder({
      pathArgs: {
        ...this.args.pathArgs,
        ...childPathArgs
      },
      executeRequest: this.args.executeRequest,
      baseUri: this.args.baseUri
    });
  }
  withId(childPathArgs) {
    return new ByProjectKeyMeCartsByIDRequestBuilder({
      pathArgs: {
        ...this.args.pathArgs,
        ...childPathArgs
      },
      executeRequest: this.args.executeRequest,
      baseUri: this.args.baseUri
    });
  }
  replicate() {
    return new ByProjectKeyMeCartsReplicateRequestBuilder({
      pathArgs: {
        ...this.args.pathArgs
      },
      executeRequest: this.args.executeRequest,
      baseUri: this.args.baseUri
    });
  }
  get(methodArgs) {
    return new ApiRequest({
      baseUri: this.args.baseUri,
      method: 'GET',
      uriTemplate: '/{projectKey}/me/carts',
      pathVariables: this.args.pathArgs,
      headers: {
        ...(methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers)
      },
      queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs
    }, this.args.executeRequest);
  }
  post(methodArgs) {
    return new ApiRequest({
      baseUri: this.args.baseUri,
      method: 'POST',
      uriTemplate: '/{projectKey}/me/carts',
      pathVariables: this.args.pathArgs,
      headers: {
        'Content-Type': 'application/json',
        ...(methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers)
      },
      queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs,
      body: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.body
    }, this.args.executeRequest);
  }
}

/**
 * Code generated by [commercetools RMF-Codegen](https://github.com/commercetools/rmf-codegen). DO NOT EDIT.
 * Please don't change this file manually but run `rmf-codegen generate raml_file_path -o output_path -t typescript_client` to update it.
 * For more information about the commercetools platform APIs, visit https://docs.commercetools.com/.
 */
/**
 **/
class ByProjectKeyMeEmailConfirmRequestBuilder {
  constructor(args) {
    this.args = args;
  }
  /**
   *	This is the last step in the [email verification process of a Customer](/../api/projects/customers#email-verification-of-customer).
   *
   */
  post(methodArgs) {
    return new ApiRequest({
      baseUri: this.args.baseUri,
      method: 'POST',
      uriTemplate: '/{projectKey}/me/email/confirm',
      pathVariables: this.args.pathArgs,
      headers: {
        'Content-Type': 'application/json',
        ...(methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers)
      },
      body: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.body
    }, this.args.executeRequest);
  }
}

/**
 * Code generated by [commercetools RMF-Codegen](https://github.com/commercetools/rmf-codegen). DO NOT EDIT.
 * Please don't change this file manually but run `rmf-codegen generate raml_file_path -o output_path -t typescript_client` to update it.
 * For more information about the commercetools platform APIs, visit https://docs.commercetools.com/.
 */
/**
 **/
class ByProjectKeyMeLoginRequestBuilder {
  constructor(args) {
    this.args = args;
  }
  /**
   *	Retrieves the authenticated customer (that matches the given email/password pair).
   *
   *	If used with [an access token for an anonymous session](ctp:api:type:AnonymousSession), all Orders and Carts that belong to the `anonymousId` are assigned to the newly logged-in Customer.
   *
   *	- If the Customer does not have a Cart yet, the most recently modified anonymous cart becomes the Customer's Cart.
   *	- If the Customer already has a Cart, the most recently modified anonymous cart is handled in accordance with [AnonymousCartSignInMode](ctp:api:type:AnonymousCartSignInMode).
   *
   *	A Cart returned as part of the [CustomerSignInResult](ctp:api:type:CustomerSignInResult) is [recalculated](ctp:api:type:MyCartRecalculateAction) with up-to-date prices, taxes, discounts, and invalid line items removed.
   *
   *	If an account with the given credentials is not found, an [InvalidCredentials](ctp:api:type:InvalidCredentialsError) error is returned.
   *
   */
  post(methodArgs) {
    return new ApiRequest({
      baseUri: this.args.baseUri,
      method: 'POST',
      uriTemplate: '/{projectKey}/me/login',
      pathVariables: this.args.pathArgs,
      headers: {
        'Content-Type': 'application/json',
        ...(methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers)
      },
      body: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.body
    }, this.args.executeRequest);
  }
}

/**
 * Code generated by [commercetools RMF-Codegen](https://github.com/commercetools/rmf-codegen). DO NOT EDIT.
 * Please don't change this file manually but run `rmf-codegen generate raml_file_path -o output_path -t typescript_client` to update it.
 * For more information about the commercetools platform APIs, visit https://docs.commercetools.com/.
 */
/**
 **/
class ByProjectKeyMeOrdersQuotesRequestBuilder {
  constructor(args) {
    this.args = args;
  }
  post(methodArgs) {
    return new ApiRequest({
      baseUri: this.args.baseUri,
      method: 'POST',
      uriTemplate: '/{projectKey}/me/orders/quotes',
      pathVariables: this.args.pathArgs,
      headers: {
        'Content-Type': 'application/json',
        ...(methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers)
      },
      body: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.body
    }, this.args.executeRequest);
  }
}

/**
 * Code generated by [commercetools RMF-Codegen](https://github.com/commercetools/rmf-codegen). DO NOT EDIT.
 * Please don't change this file manually but run `rmf-codegen generate raml_file_path -o output_path -t typescript_client` to update it.
 * For more information about the commercetools platform APIs, visit https://docs.commercetools.com/.
 */
/**
 **/
class ByProjectKeyMeOrdersByIDRequestBuilder {
  constructor(args) {
    this.args = args;
  }
  get(methodArgs) {
    return new ApiRequest({
      baseUri: this.args.baseUri,
      method: 'GET',
      uriTemplate: '/{projectKey}/me/orders/{ID}',
      pathVariables: this.args.pathArgs,
      headers: {
        ...(methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers)
      },
      queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs
    }, this.args.executeRequest);
  }
}

/**
 * Code generated by [commercetools RMF-Codegen](https://github.com/commercetools/rmf-codegen). DO NOT EDIT.
 * Please don't change this file manually but run `rmf-codegen generate raml_file_path -o output_path -t typescript_client` to update it.
 * For more information about the commercetools platform APIs, visit https://docs.commercetools.com/.
 */
/**
 **/
class ByProjectKeyMeOrdersRequestBuilder {
  constructor(args) {
    this.args = args;
  }
  withId(childPathArgs) {
    return new ByProjectKeyMeOrdersByIDRequestBuilder({
      pathArgs: {
        ...this.args.pathArgs,
        ...childPathArgs
      },
      executeRequest: this.args.executeRequest,
      baseUri: this.args.baseUri
    });
  }
  quotes() {
    return new ByProjectKeyMeOrdersQuotesRequestBuilder({
      pathArgs: {
        ...this.args.pathArgs
      },
      executeRequest: this.args.executeRequest,
      baseUri: this.args.baseUri
    });
  }
  get(methodArgs) {
    return new ApiRequest({
      baseUri: this.args.baseUri,
      method: 'GET',
      uriTemplate: '/{projectKey}/me/orders',
      pathVariables: this.args.pathArgs,
      headers: {
        ...(methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers)
      },
      queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs
    }, this.args.executeRequest);
  }
  post(methodArgs) {
    return new ApiRequest({
      baseUri: this.args.baseUri,
      method: 'POST',
      uriTemplate: '/{projectKey}/me/orders',
      pathVariables: this.args.pathArgs,
      headers: {
        'Content-Type': 'application/json',
        ...(methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers)
      },
      queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs,
      body: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.body
    }, this.args.executeRequest);
  }
}

/**
 * Code generated by [commercetools RMF-Codegen](https://github.com/commercetools/rmf-codegen). DO NOT EDIT.
 * Please don't change this file manually but run `rmf-codegen generate raml_file_path -o output_path -t typescript_client` to update it.
 * For more information about the commercetools platform APIs, visit https://docs.commercetools.com/.
 */
/**
 **/
class ByProjectKeyMePasswordResetRequestBuilder {
  constructor(args) {
    this.args = args;
  }
  /**
   *	This is the last step in the [password reset process of a Customer](/../api/projects/customers#password-reset-of-customer).
   *
   *	Resetting a password of the Customer produces the [CustomerPasswordUpdated](ctp:api:type:CustomerPasswordUpdatedMessage) Message with `reset=true`.
   *
   */
  post(methodArgs) {
    return new ApiRequest({
      baseUri: this.args.baseUri,
      method: 'POST',
      uriTemplate: '/{projectKey}/me/password/reset',
      pathVariables: this.args.pathArgs,
      headers: {
        'Content-Type': 'application/json',
        ...(methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers)
      },
      body: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.body
    }, this.args.executeRequest);
  }
}

/**
 * Code generated by [commercetools RMF-Codegen](https://github.com/commercetools/rmf-codegen). DO NOT EDIT.
 * Please don't change this file manually but run `rmf-codegen generate raml_file_path -o output_path -t typescript_client` to update it.
 * For more information about the commercetools platform APIs, visit https://docs.commercetools.com/.
 */
/**
 **/
class ByProjectKeyMePasswordRequestBuilder {
  constructor(args) {
    this.args = args;
  }
  reset() {
    return new ByProjectKeyMePasswordResetRequestBuilder({
      pathArgs: {
        ...this.args.pathArgs
      },
      executeRequest: this.args.executeRequest,
      baseUri: this.args.baseUri
    });
  }

  /**
   *	Changing the password of the Customer produces the [CustomerPasswordUpdated](ctp:api:type:CustomerPasswordUpdatedMessage) Message with `reset=false`.
   *
   *	If the current password does not match, an [InvalidCurrentPassword](ctp:api:type:InvalidCurrentPasswordError) error is returned.
   *
   */
  post(methodArgs) {
    return new ApiRequest({
      baseUri: this.args.baseUri,
      method: 'POST',
      uriTemplate: '/{projectKey}/me/password',
      pathVariables: this.args.pathArgs,
      headers: {
        'Content-Type': 'application/json',
        ...(methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers)
      },
      body: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.body
    }, this.args.executeRequest);
  }
}

/**
 * Code generated by [commercetools RMF-Codegen](https://github.com/commercetools/rmf-codegen). DO NOT EDIT.
 * Please don't change this file manually but run `rmf-codegen generate raml_file_path -o output_path -t typescript_client` to update it.
 * For more information about the commercetools platform APIs, visit https://docs.commercetools.com/.
 */
/**
 **/
class ByProjectKeyMePaymentsByIDRequestBuilder {
  constructor(args) {
    this.args = args;
  }
  get(methodArgs) {
    return new ApiRequest({
      baseUri: this.args.baseUri,
      method: 'GET',
      uriTemplate: '/{projectKey}/me/payments/{ID}',
      pathVariables: this.args.pathArgs,
      headers: {
        ...(methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers)
      },
      queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs
    }, this.args.executeRequest);
  }
  /**
   *	This endpoint can only update a Payment when it has no [Transactions](ctp:api:type:Transaction).
   *
   */
  post(methodArgs) {
    return new ApiRequest({
      baseUri: this.args.baseUri,
      method: 'POST',
      uriTemplate: '/{projectKey}/me/payments/{ID}',
      pathVariables: this.args.pathArgs,
      headers: {
        'Content-Type': 'application/json',
        ...(methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers)
      },
      queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs,
      body: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.body
    }, this.args.executeRequest);
  }
  /**
   *	This endpoint can only delete a Payment when it has no [Transactions](ctp:api:type:Transaction).
   *
   */
  delete(methodArgs) {
    return new ApiRequest({
      baseUri: this.args.baseUri,
      method: 'DELETE',
      uriTemplate: '/{projectKey}/me/payments/{ID}',
      pathVariables: this.args.pathArgs,
      headers: {
        ...(methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers)
      },
      queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs
    }, this.args.executeRequest);
  }
}

/**
 * Code generated by [commercetools RMF-Codegen](https://github.com/commercetools/rmf-codegen). DO NOT EDIT.
 * Please don't change this file manually but run `rmf-codegen generate raml_file_path -o output_path -t typescript_client` to update it.
 * For more information about the commercetools platform APIs, visit https://docs.commercetools.com/.
 */
/**
 **/
class ByProjectKeyMePaymentsKeyByKeyRequestBuilder {
  constructor(args) {
    this.args = args;
  }
  get(methodArgs) {
    return new ApiRequest({
      baseUri: this.args.baseUri,
      method: 'GET',
      uriTemplate: '/{projectKey}/me/payments/key={key}',
      pathVariables: this.args.pathArgs,
      headers: {
        ...(methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers)
      },
      queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs
    }, this.args.executeRequest);
  }
  /**
   *	This endpoint can only update a Payment when it has no [Transactions](ctp:api:type:Transaction).
   *
   */
  post(methodArgs) {
    return new ApiRequest({
      baseUri: this.args.baseUri,
      method: 'POST',
      uriTemplate: '/{projectKey}/me/payments/key={key}',
      pathVariables: this.args.pathArgs,
      headers: {
        'Content-Type': 'application/json',
        ...(methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers)
      },
      queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs,
      body: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.body
    }, this.args.executeRequest);
  }
  /**
   *	This endpoint can only delete a Payment when it has no [Transactions](ctp:api:type:Transaction).
   *
   */
  delete(methodArgs) {
    return new ApiRequest({
      baseUri: this.args.baseUri,
      method: 'DELETE',
      uriTemplate: '/{projectKey}/me/payments/key={key}',
      pathVariables: this.args.pathArgs,
      headers: {
        ...(methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers)
      },
      queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs
    }, this.args.executeRequest);
  }
}

/**
 * Code generated by [commercetools RMF-Codegen](https://github.com/commercetools/rmf-codegen). DO NOT EDIT.
 * Please don't change this file manually but run `rmf-codegen generate raml_file_path -o output_path -t typescript_client` to update it.
 * For more information about the commercetools platform APIs, visit https://docs.commercetools.com/.
 */
/**
 **/
class ByProjectKeyMePaymentsRequestBuilder {
  constructor(args) {
    this.args = args;
  }
  withKey(childPathArgs) {
    return new ByProjectKeyMePaymentsKeyByKeyRequestBuilder({
      pathArgs: {
        ...this.args.pathArgs,
        ...childPathArgs
      },
      executeRequest: this.args.executeRequest,
      baseUri: this.args.baseUri
    });
  }
  withId(childPathArgs) {
    return new ByProjectKeyMePaymentsByIDRequestBuilder({
      pathArgs: {
        ...this.args.pathArgs,
        ...childPathArgs
      },
      executeRequest: this.args.executeRequest,
      baseUri: this.args.baseUri
    });
  }
  get(methodArgs) {
    return new ApiRequest({
      baseUri: this.args.baseUri,
      method: 'GET',
      uriTemplate: '/{projectKey}/me/payments',
      pathVariables: this.args.pathArgs,
      headers: {
        ...(methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers)
      },
      queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs
    }, this.args.executeRequest);
  }
  /**
   *	Creating a Payment produces the [PaymentCreated](ctp:api:type:PaymentCreatedMessage) Message.
   *
   */
  post(methodArgs) {
    return new ApiRequest({
      baseUri: this.args.baseUri,
      method: 'POST',
      uriTemplate: '/{projectKey}/me/payments',
      pathVariables: this.args.pathArgs,
      headers: {
        'Content-Type': 'application/json',
        ...(methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers)
      },
      queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs,
      body: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.body
    }, this.args.executeRequest);
  }
}

/**
 * Code generated by [commercetools RMF-Codegen](https://github.com/commercetools/rmf-codegen). DO NOT EDIT.
 * Please don't change this file manually but run `rmf-codegen generate raml_file_path -o output_path -t typescript_client` to update it.
 * For more information about the commercetools platform APIs, visit https://docs.commercetools.com/.
 */
/**
 **/
class ByProjectKeyMeQuoteRequestsByIDRequestBuilder {
  constructor(args) {
    this.args = args;
  }
  post(methodArgs) {
    return new ApiRequest({
      baseUri: this.args.baseUri,
      method: 'POST',
      uriTemplate: '/{projectKey}/me/quote-requests/{ID}',
      pathVariables: this.args.pathArgs,
      headers: {
        'Content-Type': 'application/json',
        ...(methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers)
      },
      queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs,
      body: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.body
    }, this.args.executeRequest);
  }
  delete(methodArgs) {
    return new ApiRequest({
      baseUri: this.args.baseUri,
      method: 'DELETE',
      uriTemplate: '/{projectKey}/me/quote-requests/{ID}',
      pathVariables: this.args.pathArgs,
      headers: {
        ...(methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers)
      },
      queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs
    }, this.args.executeRequest);
  }
  get(methodArgs) {
    return new ApiRequest({
      baseUri: this.args.baseUri,
      method: 'GET',
      uriTemplate: '/{projectKey}/me/quote-requests/{ID}',
      pathVariables: this.args.pathArgs,
      headers: {
        ...(methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers)
      },
      queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs
    }, this.args.executeRequest);
  }
}

/**
 * Code generated by [commercetools RMF-Codegen](https://github.com/commercetools/rmf-codegen). DO NOT EDIT.
 * Please don't change this file manually but run `rmf-codegen generate raml_file_path -o output_path -t typescript_client` to update it.
 * For more information about the commercetools platform APIs, visit https://docs.commercetools.com/.
 */
/**
 **/
class ByProjectKeyMeQuoteRequestsKeyByKeyRequestBuilder {
  constructor(args) {
    this.args = args;
  }
  post(methodArgs) {
    return new ApiRequest({
      baseUri: this.args.baseUri,
      method: 'POST',
      uriTemplate: '/{projectKey}/me/quote-requests/key={key}',
      pathVariables: this.args.pathArgs,
      headers: {
        'Content-Type': 'application/json',
        ...(methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers)
      },
      queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs,
      body: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.body
    }, this.args.executeRequest);
  }
  delete(methodArgs) {
    return new ApiRequest({
      baseUri: this.args.baseUri,
      method: 'DELETE',
      uriTemplate: '/{projectKey}/me/quote-requests/key={key}',
      pathVariables: this.args.pathArgs,
      headers: {
        ...(methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers)
      },
      queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs
    }, this.args.executeRequest);
  }
  get(methodArgs) {
    return new ApiRequest({
      baseUri: this.args.baseUri,
      method: 'GET',
      uriTemplate: '/{projectKey}/me/quote-requests/key={key}',
      pathVariables: this.args.pathArgs,
      headers: {
        ...(methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers)
      },
      queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs
    }, this.args.executeRequest);
  }
}

/**
 * Code generated by [commercetools RMF-Codegen](https://github.com/commercetools/rmf-codegen). DO NOT EDIT.
 * Please don't change this file manually but run `rmf-codegen generate raml_file_path -o output_path -t typescript_client` to update it.
 * For more information about the commercetools platform APIs, visit https://docs.commercetools.com/.
 */
/**
 **/
class ByProjectKeyMeQuoteRequestsRequestBuilder {
  constructor(args) {
    this.args = args;
  }
  withId(childPathArgs) {
    return new ByProjectKeyMeQuoteRequestsByIDRequestBuilder({
      pathArgs: {
        ...this.args.pathArgs,
        ...childPathArgs
      },
      executeRequest: this.args.executeRequest,
      baseUri: this.args.baseUri
    });
  }
  withKey(childPathArgs) {
    return new ByProjectKeyMeQuoteRequestsKeyByKeyRequestBuilder({
      pathArgs: {
        ...this.args.pathArgs,
        ...childPathArgs
      },
      executeRequest: this.args.executeRequest,
      baseUri: this.args.baseUri
    });
  }
  get(methodArgs) {
    return new ApiRequest({
      baseUri: this.args.baseUri,
      method: 'GET',
      uriTemplate: '/{projectKey}/me/quote-requests',
      pathVariables: this.args.pathArgs,
      headers: {
        ...(methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers)
      },
      queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs
    }, this.args.executeRequest);
  }
  post(methodArgs) {
    return new ApiRequest({
      baseUri: this.args.baseUri,
      method: 'POST',
      uriTemplate: '/{projectKey}/me/quote-requests',
      pathVariables: this.args.pathArgs,
      headers: {
        'Content-Type': 'application/json',
        ...(methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers)
      },
      queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs,
      body: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.body
    }, this.args.executeRequest);
  }
}

/**
 * Code generated by [commercetools RMF-Codegen](https://github.com/commercetools/rmf-codegen). DO NOT EDIT.
 * Please don't change this file manually but run `rmf-codegen generate raml_file_path -o output_path -t typescript_client` to update it.
 * For more information about the commercetools platform APIs, visit https://docs.commercetools.com/.
 */
/**
 **/
class ByProjectKeyMeQuotesByIDRequestBuilder {
  constructor(args) {
    this.args = args;
  }
  get(methodArgs) {
    return new ApiRequest({
      baseUri: this.args.baseUri,
      method: 'GET',
      uriTemplate: '/{projectKey}/me/quotes/{ID}',
      pathVariables: this.args.pathArgs,
      headers: {
        ...(methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers)
      },
      queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs
    }, this.args.executeRequest);
  }
  post(methodArgs) {
    return new ApiRequest({
      baseUri: this.args.baseUri,
      method: 'POST',
      uriTemplate: '/{projectKey}/me/quotes/{ID}',
      pathVariables: this.args.pathArgs,
      headers: {
        'Content-Type': 'application/json',
        ...(methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers)
      },
      queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs,
      body: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.body
    }, this.args.executeRequest);
  }
}

/**
 * Code generated by [commercetools RMF-Codegen](https://github.com/commercetools/rmf-codegen). DO NOT EDIT.
 * Please don't change this file manually but run `rmf-codegen generate raml_file_path -o output_path -t typescript_client` to update it.
 * For more information about the commercetools platform APIs, visit https://docs.commercetools.com/.
 */
/**
 **/
class ByProjectKeyMeQuotesKeyByKeyRequestBuilder {
  constructor(args) {
    this.args = args;
  }
  get(methodArgs) {
    return new ApiRequest({
      baseUri: this.args.baseUri,
      method: 'GET',
      uriTemplate: '/{projectKey}/me/quotes/key={key}',
      pathVariables: this.args.pathArgs,
      headers: {
        ...(methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers)
      },
      queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs
    }, this.args.executeRequest);
  }
  post(methodArgs) {
    return new ApiRequest({
      baseUri: this.args.baseUri,
      method: 'POST',
      uriTemplate: '/{projectKey}/me/quotes/key={key}',
      pathVariables: this.args.pathArgs,
      headers: {
        'Content-Type': 'application/json',
        ...(methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers)
      },
      queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs,
      body: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.body
    }, this.args.executeRequest);
  }
}

/**
 * Code generated by [commercetools RMF-Codegen](https://github.com/commercetools/rmf-codegen). DO NOT EDIT.
 * Please don't change this file manually but run `rmf-codegen generate raml_file_path -o output_path -t typescript_client` to update it.
 * For more information about the commercetools platform APIs, visit https://docs.commercetools.com/.
 */
/**
 **/
class ByProjectKeyMeQuotesRequestBuilder {
  constructor(args) {
    this.args = args;
  }
  withId(childPathArgs) {
    return new ByProjectKeyMeQuotesByIDRequestBuilder({
      pathArgs: {
        ...this.args.pathArgs,
        ...childPathArgs
      },
      executeRequest: this.args.executeRequest,
      baseUri: this.args.baseUri
    });
  }
  withKey(childPathArgs) {
    return new ByProjectKeyMeQuotesKeyByKeyRequestBuilder({
      pathArgs: {
        ...this.args.pathArgs,
        ...childPathArgs
      },
      executeRequest: this.args.executeRequest,
      baseUri: this.args.baseUri
    });
  }
  get(methodArgs) {
    return new ApiRequest({
      baseUri: this.args.baseUri,
      method: 'GET',
      uriTemplate: '/{projectKey}/me/quotes',
      pathVariables: this.args.pathArgs,
      headers: {
        ...(methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers)
      },
      queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs
    }, this.args.executeRequest);
  }
}

/**
 * Code generated by [commercetools RMF-Codegen](https://github.com/commercetools/rmf-codegen). DO NOT EDIT.
 * Please don't change this file manually but run `rmf-codegen generate raml_file_path -o output_path -t typescript_client` to update it.
 * For more information about the commercetools platform APIs, visit https://docs.commercetools.com/.
 */
/**
 **/
class ByProjectKeyMeShoppingListsByIDRequestBuilder {
  constructor(args) {
    this.args = args;
  }
  get(methodArgs) {
    return new ApiRequest({
      baseUri: this.args.baseUri,
      method: 'GET',
      uriTemplate: '/{projectKey}/me/shopping-lists/{ID}',
      pathVariables: this.args.pathArgs,
      headers: {
        ...(methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers)
      },
      queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs
    }, this.args.executeRequest);
  }
  post(methodArgs) {
    return new ApiRequest({
      baseUri: this.args.baseUri,
      method: 'POST',
      uriTemplate: '/{projectKey}/me/shopping-lists/{ID}',
      pathVariables: this.args.pathArgs,
      headers: {
        'Content-Type': 'application/json',
        ...(methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers)
      },
      queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs,
      body: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.body
    }, this.args.executeRequest);
  }
  delete(methodArgs) {
    return new ApiRequest({
      baseUri: this.args.baseUri,
      method: 'DELETE',
      uriTemplate: '/{projectKey}/me/shopping-lists/{ID}',
      pathVariables: this.args.pathArgs,
      headers: {
        ...(methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers)
      },
      queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs
    }, this.args.executeRequest);
  }
}

/**
 * Code generated by [commercetools RMF-Codegen](https://github.com/commercetools/rmf-codegen). DO NOT EDIT.
 * Please don't change this file manually but run `rmf-codegen generate raml_file_path -o output_path -t typescript_client` to update it.
 * For more information about the commercetools platform APIs, visit https://docs.commercetools.com/.
 */
/**
 **/
class ByProjectKeyMeShoppingListsKeyByKeyRequestBuilder {
  constructor(args) {
    this.args = args;
  }
  get(methodArgs) {
    return new ApiRequest({
      baseUri: this.args.baseUri,
      method: 'GET',
      uriTemplate: '/{projectKey}/me/shopping-lists/key={key}',
      pathVariables: this.args.pathArgs,
      headers: {
        ...(methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers)
      },
      queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs
    }, this.args.executeRequest);
  }
  post(methodArgs) {
    return new ApiRequest({
      baseUri: this.args.baseUri,
      method: 'POST',
      uriTemplate: '/{projectKey}/me/shopping-lists/key={key}',
      pathVariables: this.args.pathArgs,
      headers: {
        'Content-Type': 'application/json',
        ...(methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers)
      },
      queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs,
      body: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.body
    }, this.args.executeRequest);
  }
  delete(methodArgs) {
    return new ApiRequest({
      baseUri: this.args.baseUri,
      method: 'DELETE',
      uriTemplate: '/{projectKey}/me/shopping-lists/key={key}',
      pathVariables: this.args.pathArgs,
      headers: {
        ...(methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers)
      },
      queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs
    }, this.args.executeRequest);
  }
}

/**
 * Code generated by [commercetools RMF-Codegen](https://github.com/commercetools/rmf-codegen). DO NOT EDIT.
 * Please don't change this file manually but run `rmf-codegen generate raml_file_path -o output_path -t typescript_client` to update it.
 * For more information about the commercetools platform APIs, visit https://docs.commercetools.com/.
 */
/**
 **/
class ByProjectKeyMeShoppingListsRequestBuilder {
  constructor(args) {
    this.args = args;
  }
  withId(childPathArgs) {
    return new ByProjectKeyMeShoppingListsByIDRequestBuilder({
      pathArgs: {
        ...this.args.pathArgs,
        ...childPathArgs
      },
      executeRequest: this.args.executeRequest,
      baseUri: this.args.baseUri
    });
  }
  withKey(childPathArgs) {
    return new ByProjectKeyMeShoppingListsKeyByKeyRequestBuilder({
      pathArgs: {
        ...this.args.pathArgs,
        ...childPathArgs
      },
      executeRequest: this.args.executeRequest,
      baseUri: this.args.baseUri
    });
  }
  get(methodArgs) {
    return new ApiRequest({
      baseUri: this.args.baseUri,
      method: 'GET',
      uriTemplate: '/{projectKey}/me/shopping-lists',
      pathVariables: this.args.pathArgs,
      headers: {
        ...(methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers)
      },
      queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs
    }, this.args.executeRequest);
  }
  post(methodArgs) {
    return new ApiRequest({
      baseUri: this.args.baseUri,
      method: 'POST',
      uriTemplate: '/{projectKey}/me/shopping-lists',
      pathVariables: this.args.pathArgs,
      headers: {
        'Content-Type': 'application/json',
        ...(methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers)
      },
      queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs,
      body: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.body
    }, this.args.executeRequest);
  }
}

/**
 * Code generated by [commercetools RMF-Codegen](https://github.com/commercetools/rmf-codegen). DO NOT EDIT.
 * Please don't change this file manually but run `rmf-codegen generate raml_file_path -o output_path -t typescript_client` to update it.
 * For more information about the commercetools platform APIs, visit https://docs.commercetools.com/.
 */
/**
 **/
class ByProjectKeyMeSignupRequestBuilder {
  constructor(args) {
    this.args = args;
  }
  /**
   *	If used with an [access token for an anonymous session](ctp:api:type:AnonymousSession), all Orders and Carts that belong to the `anonymousId` are assigned to the newly created Customer.
   *
   *	Creating a Customer produces the [CustomerCreated](ctp:api:type:CustomerCreatedMessage) Message.
   *
   */
  post(methodArgs) {
    return new ApiRequest({
      baseUri: this.args.baseUri,
      method: 'POST',
      uriTemplate: '/{projectKey}/me/signup',
      pathVariables: this.args.pathArgs,
      headers: {
        'Content-Type': 'application/json',
        ...(methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers)
      },
      body: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.body
    }, this.args.executeRequest);
  }
}

/**
 * Code generated by [commercetools RMF-Codegen](https://github.com/commercetools/rmf-codegen). DO NOT EDIT.
 * Please don't change this file manually but run `rmf-codegen generate raml_file_path -o output_path -t typescript_client` to update it.
 * For more information about the commercetools platform APIs, visit https://docs.commercetools.com/.
 */
/**
 **/
class ByProjectKeyMeRequestBuilder {
  constructor(args) {
    this.args = args;
  }
  emailConfirm() {
    return new ByProjectKeyMeEmailConfirmRequestBuilder({
      pathArgs: {
        ...this.args.pathArgs
      },
      executeRequest: this.args.executeRequest,
      baseUri: this.args.baseUri
    });
  }
  password() {
    return new ByProjectKeyMePasswordRequestBuilder({
      pathArgs: {
        ...this.args.pathArgs
      },
      executeRequest: this.args.executeRequest,
      baseUri: this.args.baseUri
    });
  }
  signup() {
    return new ByProjectKeyMeSignupRequestBuilder({
      pathArgs: {
        ...this.args.pathArgs
      },
      executeRequest: this.args.executeRequest,
      baseUri: this.args.baseUri
    });
  }
  login() {
    return new ByProjectKeyMeLoginRequestBuilder({
      pathArgs: {
        ...this.args.pathArgs
      },
      executeRequest: this.args.executeRequest,
      baseUri: this.args.baseUri
    });
  }
  activeCart() {
    return new ByProjectKeyMeActiveCartRequestBuilder({
      pathArgs: {
        ...this.args.pathArgs
      },
      executeRequest: this.args.executeRequest,
      baseUri: this.args.baseUri
    });
  }
  /**
   *	MyBusinessUnit creates and provides access to Business Units scoped to a specific user.
   */
  businessUnits() {
    return new ByProjectKeyMeBusinessUnitsRequestBuilder({
      pathArgs: {
        ...this.args.pathArgs
      },
      executeRequest: this.args.executeRequest,
      baseUri: this.args.baseUri
    });
  }
  /**
   *	A shopping cart holds product variants and can be ordered.
   */
  carts() {
    return new ByProjectKeyMeCartsRequestBuilder({
      pathArgs: {
        ...this.args.pathArgs
      },
      executeRequest: this.args.executeRequest,
      baseUri: this.args.baseUri
    });
  }
  /**
   *	An order can be created from a cart, usually after a checkout process has been completed.
   */
  orders() {
    return new ByProjectKeyMeOrdersRequestBuilder({
      pathArgs: {
        ...this.args.pathArgs
      },
      executeRequest: this.args.executeRequest,
      baseUri: this.args.baseUri
    });
  }
  /**
   *	The My Payments endpoint creates and provides access to payments scoped to a specific user.
   */
  payments() {
    return new ByProjectKeyMePaymentsRequestBuilder({
      pathArgs: {
        ...this.args.pathArgs
      },
      executeRequest: this.args.executeRequest,
      baseUri: this.args.baseUri
    });
  }
  /**
   *	The My Quote Requests endpoint creates and provides access to Quote Requests scoped to a specific user.
   */
  quoteRequests() {
    return new ByProjectKeyMeQuoteRequestsRequestBuilder({
      pathArgs: {
        ...this.args.pathArgs
      },
      executeRequest: this.args.executeRequest,
      baseUri: this.args.baseUri
    });
  }
  /**
   *	The My Quote endpoint provides access to Quotes scoped to a specific user.
   */
  quotes() {
    return new ByProjectKeyMeQuotesRequestBuilder({
      pathArgs: {
        ...this.args.pathArgs
      },
      executeRequest: this.args.executeRequest,
      baseUri: this.args.baseUri
    });
  }
  /**
   *	The My Shopping Lists endpoint creates and provides access to Shopping Lists scoped to a specific user.
   */
  shoppingLists() {
    return new ByProjectKeyMeShoppingListsRequestBuilder({
      pathArgs: {
        ...this.args.pathArgs
      },
      executeRequest: this.args.executeRequest,
      baseUri: this.args.baseUri
    });
  }
  get(methodArgs) {
    return new ApiRequest({
      baseUri: this.args.baseUri,
      method: 'GET',
      uriTemplate: '/{projectKey}/me',
      pathVariables: this.args.pathArgs,
      headers: {
        ...(methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers)
      },
      queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs
    }, this.args.executeRequest);
  }
  post(methodArgs) {
    return new ApiRequest({
      baseUri: this.args.baseUri,
      method: 'POST',
      uriTemplate: '/{projectKey}/me',
      pathVariables: this.args.pathArgs,
      headers: {
        'Content-Type': 'application/json',
        ...(methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers)
      },
      body: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.body
    }, this.args.executeRequest);
  }
  delete(methodArgs) {
    return new ApiRequest({
      baseUri: this.args.baseUri,
      method: 'DELETE',
      uriTemplate: '/{projectKey}/me',
      pathVariables: this.args.pathArgs,
      headers: {
        ...(methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers)
      },
      queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs
    }, this.args.executeRequest);
  }
}

/**
 * Code generated by [commercetools RMF-Codegen](https://github.com/commercetools/rmf-codegen). DO NOT EDIT.
 * Please don't change this file manually but run `rmf-codegen generate raml_file_path -o output_path -t typescript_client` to update it.
 * For more information about the commercetools platform APIs, visit https://docs.commercetools.com/.
 */
/**
 **/
class ByProjectKeyMessagesByIDRequestBuilder {
  constructor(args) {
    this.args = args;
  }
  /**
   *	Deprecated scope: `view_orders:{projectKey}`
   */
  get(methodArgs) {
    return new ApiRequest({
      baseUri: this.args.baseUri,
      method: 'GET',
      uriTemplate: '/{projectKey}/messages/{ID}',
      pathVariables: this.args.pathArgs,
      headers: {
        ...(methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers)
      },
      queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs
    }, this.args.executeRequest);
  }
}

/**
 * Code generated by [commercetools RMF-Codegen](https://github.com/commercetools/rmf-codegen). DO NOT EDIT.
 * Please don't change this file manually but run `rmf-codegen generate raml_file_path -o output_path -t typescript_client` to update it.
 * For more information about the commercetools platform APIs, visit https://docs.commercetools.com/.
 */
/**
 **/
class ByProjectKeyMessagesRequestBuilder {
  constructor(args) {
    this.args = args;
  }
  withId(childPathArgs) {
    return new ByProjectKeyMessagesByIDRequestBuilder({
      pathArgs: {
        ...this.args.pathArgs,
        ...childPathArgs
      },
      executeRequest: this.args.executeRequest,
      baseUri: this.args.baseUri
    });
  }

  /**
   *	Deprecated scope: `view_orders:{projectKey}`
   */
  get(methodArgs) {
    return new ApiRequest({
      baseUri: this.args.baseUri,
      method: 'GET',
      uriTemplate: '/{projectKey}/messages',
      pathVariables: this.args.pathArgs,
      headers: {
        ...(methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers)
      },
      queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs
    }, this.args.executeRequest);
  }
}

/**
 * Code generated by [commercetools RMF-Codegen](https://github.com/commercetools/rmf-codegen). DO NOT EDIT.
 * Please don't change this file manually but run `rmf-codegen generate raml_file_path -o output_path -t typescript_client` to update it.
 * For more information about the commercetools platform APIs, visit https://docs.commercetools.com/.
 */
/**
 **/
class ByProjectKeyOrdersEditsByIDApplyRequestBuilder {
  constructor(args) {
    this.args = args;
  }
  post(methodArgs) {
    return new ApiRequest({
      baseUri: this.args.baseUri,
      method: 'POST',
      uriTemplate: '/{projectKey}/orders/edits/{ID}/apply',
      pathVariables: this.args.pathArgs,
      headers: {
        'Content-Type': 'application/json',
        ...(methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers)
      },
      body: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.body
    }, this.args.executeRequest);
  }
}

/**
 * Code generated by [commercetools RMF-Codegen](https://github.com/commercetools/rmf-codegen). DO NOT EDIT.
 * Please don't change this file manually but run `rmf-codegen generate raml_file_path -o output_path -t typescript_client` to update it.
 * For more information about the commercetools platform APIs, visit https://docs.commercetools.com/.
 */
/**
 **/
class ByProjectKeyOrdersEditsByIDRequestBuilder {
  constructor(args) {
    this.args = args;
  }
  apply() {
    return new ByProjectKeyOrdersEditsByIDApplyRequestBuilder({
      pathArgs: {
        ...this.args.pathArgs
      },
      executeRequest: this.args.executeRequest,
      baseUri: this.args.baseUri
    });
  }
  get(methodArgs) {
    return new ApiRequest({
      baseUri: this.args.baseUri,
      method: 'GET',
      uriTemplate: '/{projectKey}/orders/edits/{ID}',
      pathVariables: this.args.pathArgs,
      headers: {
        ...(methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers)
      },
      queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs
    }, this.args.executeRequest);
  }
  post(methodArgs) {
    return new ApiRequest({
      baseUri: this.args.baseUri,
      method: 'POST',
      uriTemplate: '/{projectKey}/orders/edits/{ID}',
      pathVariables: this.args.pathArgs,
      headers: {
        'Content-Type': 'application/json',
        ...(methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers)
      },
      queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs,
      body: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.body
    }, this.args.executeRequest);
  }
  delete(methodArgs) {
    return new ApiRequest({
      baseUri: this.args.baseUri,
      method: 'DELETE',
      uriTemplate: '/{projectKey}/orders/edits/{ID}',
      pathVariables: this.args.pathArgs,
      headers: {
        ...(methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers)
      },
      queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs
    }, this.args.executeRequest);
  }
}

/**
 * Code generated by [commercetools RMF-Codegen](https://github.com/commercetools/rmf-codegen). DO NOT EDIT.
 * Please don't change this file manually but run `rmf-codegen generate raml_file_path -o output_path -t typescript_client` to update it.
 * For more information about the commercetools platform APIs, visit https://docs.commercetools.com/.
 */
/**
 **/
class ByProjectKeyOrdersEditsKeyByKeyRequestBuilder {
  constructor(args) {
    this.args = args;
  }
  get(methodArgs) {
    return new ApiRequest({
      baseUri: this.args.baseUri,
      method: 'GET',
      uriTemplate: '/{projectKey}/orders/edits/key={key}',
      pathVariables: this.args.pathArgs,
      headers: {
        ...(methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers)
      },
      queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs
    }, this.args.executeRequest);
  }
  post(methodArgs) {
    return new ApiRequest({
      baseUri: this.args.baseUri,
      method: 'POST',
      uriTemplate: '/{projectKey}/orders/edits/key={key}',
      pathVariables: this.args.pathArgs,
      headers: {
        'Content-Type': 'application/json',
        ...(methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers)
      },
      queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs,
      body: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.body
    }, this.args.executeRequest);
  }
  delete(methodArgs) {
    return new ApiRequest({
      baseUri: this.args.baseUri,
      method: 'DELETE',
      uriTemplate: '/{projectKey}/orders/edits/key={key}',
      pathVariables: this.args.pathArgs,
      headers: {
        ...(methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers)
      },
      queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs
    }, this.args.executeRequest);
  }
}

/**
 * Code generated by [commercetools RMF-Codegen](https://github.com/commercetools/rmf-codegen). DO NOT EDIT.
 * Please don't change this file manually but run `rmf-codegen generate raml_file_path -o output_path -t typescript_client` to update it.
 * For more information about the commercetools platform APIs, visit https://docs.commercetools.com/.
 */
/**
 **/
class ByProjectKeyOrdersEditsRequestBuilder {
  constructor(args) {
    this.args = args;
  }
  withKey(childPathArgs) {
    return new ByProjectKeyOrdersEditsKeyByKeyRequestBuilder({
      pathArgs: {
        ...this.args.pathArgs,
        ...childPathArgs
      },
      executeRequest: this.args.executeRequest,
      baseUri: this.args.baseUri
    });
  }
  withId(childPathArgs) {
    return new ByProjectKeyOrdersEditsByIDRequestBuilder({
      pathArgs: {
        ...this.args.pathArgs,
        ...childPathArgs
      },
      executeRequest: this.args.executeRequest,
      baseUri: this.args.baseUri
    });
  }
  get(methodArgs) {
    return new ApiRequest({
      baseUri: this.args.baseUri,
      method: 'GET',
      uriTemplate: '/{projectKey}/orders/edits',
      pathVariables: this.args.pathArgs,
      headers: {
        ...(methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers)
      },
      queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs
    }, this.args.executeRequest);
  }
  post(methodArgs) {
    return new ApiRequest({
      baseUri: this.args.baseUri,
      method: 'POST',
      uriTemplate: '/{projectKey}/orders/edits',
      pathVariables: this.args.pathArgs,
      headers: {
        'Content-Type': 'application/json',
        ...(methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers)
      },
      queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs,
      body: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.body
    }, this.args.executeRequest);
  }
}

/**
 * Code generated by [commercetools RMF-Codegen](https://github.com/commercetools/rmf-codegen). DO NOT EDIT.
 * Please don't change this file manually but run `rmf-codegen generate raml_file_path -o output_path -t typescript_client` to update it.
 * For more information about the commercetools platform APIs, visit https://docs.commercetools.com/.
 */
/**
 **/
class ByProjectKeyOrdersImportRequestBuilder {
  constructor(args) {
    this.args = args;
  }
  /**
   *	Create an Order by Import
   */
  post(methodArgs) {
    return new ApiRequest({
      baseUri: this.args.baseUri,
      method: 'POST',
      uriTemplate: '/{projectKey}/orders/import',
      pathVariables: this.args.pathArgs,
      headers: {
        'Content-Type': 'application/json',
        ...(methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers)
      },
      body: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.body
    }, this.args.executeRequest);
  }
}

/**
 * Code generated by [commercetools RMF-Codegen](https://github.com/commercetools/rmf-codegen). DO NOT EDIT.
 * Please don't change this file manually but run `rmf-codegen generate raml_file_path -o output_path -t typescript_client` to update it.
 * For more information about the commercetools platform APIs, visit https://docs.commercetools.com/.
 */
/**
 **/
class ByProjectKeyOrdersQuotesRequestBuilder {
  constructor(args) {
    this.args = args;
  }
  /**
   *	Create an Order from a Quote
   */
  post(methodArgs) {
    return new ApiRequest({
      baseUri: this.args.baseUri,
      method: 'POST',
      uriTemplate: '/{projectKey}/orders/quotes',
      pathVariables: this.args.pathArgs,
      headers: {
        'Content-Type': 'application/json',
        ...(methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers)
      },
      body: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.body
    }, this.args.executeRequest);
  }
}

/**
 * Code generated by [commercetools RMF-Codegen](https://github.com/commercetools/rmf-codegen). DO NOT EDIT.
 * Please don't change this file manually but run `rmf-codegen generate raml_file_path -o output_path -t typescript_client` to update it.
 * For more information about the commercetools platform APIs, visit https://docs.commercetools.com/.
 */
/**
 **/
class ByProjectKeyOrdersSearchRequestBuilder {
  constructor(args) {
    this.args = args;
  }
  post(methodArgs) {
    return new ApiRequest({
      baseUri: this.args.baseUri,
      method: 'POST',
      uriTemplate: '/{projectKey}/orders/search',
      pathVariables: this.args.pathArgs,
      headers: {
        'Content-Type': 'application/json',
        ...(methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers)
      },
      body: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.body
    }, this.args.executeRequest);
  }
  /**
   *	Checks whether a search index for the Project's Orders exists.
   */
  head(methodArgs) {
    return new ApiRequest({
      baseUri: this.args.baseUri,
      method: 'HEAD',
      uriTemplate: '/{projectKey}/orders/search',
      pathVariables: this.args.pathArgs,
      headers: {
        ...(methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers)
      }
    }, this.args.executeRequest);
  }
}

/**
 * Code generated by [commercetools RMF-Codegen](https://github.com/commercetools/rmf-codegen). DO NOT EDIT.
 * Please don't change this file manually but run `rmf-codegen generate raml_file_path -o output_path -t typescript_client` to update it.
 * For more information about the commercetools platform APIs, visit https://docs.commercetools.com/.
 */
/**
 **/
class ByProjectKeyOrdersByIDRequestBuilder {
  constructor(args) {
    this.args = args;
  }
  get(methodArgs) {
    return new ApiRequest({
      baseUri: this.args.baseUri,
      method: 'GET',
      uriTemplate: '/{projectKey}/orders/{ID}',
      pathVariables: this.args.pathArgs,
      headers: {
        ...(methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers)
      },
      queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs
    }, this.args.executeRequest);
  }
  post(methodArgs) {
    return new ApiRequest({
      baseUri: this.args.baseUri,
      method: 'POST',
      uriTemplate: '/{projectKey}/orders/{ID}',
      pathVariables: this.args.pathArgs,
      headers: {
        'Content-Type': 'application/json',
        ...(methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers)
      },
      queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs,
      body: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.body
    }, this.args.executeRequest);
  }
  delete(methodArgs) {
    return new ApiRequest({
      baseUri: this.args.baseUri,
      method: 'DELETE',
      uriTemplate: '/{projectKey}/orders/{ID}',
      pathVariables: this.args.pathArgs,
      headers: {
        ...(methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers)
      },
      queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs
    }, this.args.executeRequest);
  }
}

/**
 * Code generated by [commercetools RMF-Codegen](https://github.com/commercetools/rmf-codegen). DO NOT EDIT.
 * Please don't change this file manually but run `rmf-codegen generate raml_file_path -o output_path -t typescript_client` to update it.
 * For more information about the commercetools platform APIs, visit https://docs.commercetools.com/.
 */
/**
 **/
class ByProjectKeyOrdersOrderNumberByOrderNumberRequestBuilder {
  constructor(args) {
    this.args = args;
  }
  /**
   *	In case the orderNumber does not match the regular expression [a-zA-Z0-9_\-]+,
   *	it should be provided in URL-encoded format.
   *
   */
  get(methodArgs) {
    return new ApiRequest({
      baseUri: this.args.baseUri,
      method: 'GET',
      uriTemplate: '/{projectKey}/orders/order-number={orderNumber}',
      pathVariables: this.args.pathArgs,
      headers: {
        ...(methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers)
      },
      queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs
    }, this.args.executeRequest);
  }
  post(methodArgs) {
    return new ApiRequest({
      baseUri: this.args.baseUri,
      method: 'POST',
      uriTemplate: '/{projectKey}/orders/order-number={orderNumber}',
      pathVariables: this.args.pathArgs,
      headers: {
        'Content-Type': 'application/json',
        ...(methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers)
      },
      queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs,
      body: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.body
    }, this.args.executeRequest);
  }
  delete(methodArgs) {
    return new ApiRequest({
      baseUri: this.args.baseUri,
      method: 'DELETE',
      uriTemplate: '/{projectKey}/orders/order-number={orderNumber}',
      pathVariables: this.args.pathArgs,
      headers: {
        ...(methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers)
      },
      queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs
    }, this.args.executeRequest);
  }
}

/**
 * Code generated by [commercetools RMF-Codegen](https://github.com/commercetools/rmf-codegen). DO NOT EDIT.
 * Please don't change this file manually but run `rmf-codegen generate raml_file_path -o output_path -t typescript_client` to update it.
 * For more information about the commercetools platform APIs, visit https://docs.commercetools.com/.
 */
/**
 **/
class ByProjectKeyOrdersRequestBuilder {
  constructor(args) {
    this.args = args;
  }
  importOrder() {
    return new ByProjectKeyOrdersImportRequestBuilder({
      pathArgs: {
        ...this.args.pathArgs
      },
      executeRequest: this.args.executeRequest,
      baseUri: this.args.baseUri
    });
  }
  orderQuote() {
    return new ByProjectKeyOrdersQuotesRequestBuilder({
      pathArgs: {
        ...this.args.pathArgs
      },
      executeRequest: this.args.executeRequest,
      baseUri: this.args.baseUri
    });
  }
  withOrderNumber(childPathArgs) {
    return new ByProjectKeyOrdersOrderNumberByOrderNumberRequestBuilder({
      pathArgs: {
        ...this.args.pathArgs,
        ...childPathArgs
      },
      executeRequest: this.args.executeRequest,
      baseUri: this.args.baseUri
    });
  }
  /**
   *	OrderEdit are containers for financial changes after an Order has been placed.
   */
  edits() {
    return new ByProjectKeyOrdersEditsRequestBuilder({
      pathArgs: {
        ...this.args.pathArgs
      },
      executeRequest: this.args.executeRequest,
      baseUri: this.args.baseUri
    });
  }
  withId(childPathArgs) {
    return new ByProjectKeyOrdersByIDRequestBuilder({
      pathArgs: {
        ...this.args.pathArgs,
        ...childPathArgs
      },
      executeRequest: this.args.executeRequest,
      baseUri: this.args.baseUri
    });
  }
  /**
   *	This endpoint provides high performance search queries over Orders. The order search allows searching through all orders (currently supporting a limit of the 10.000.000 newest orders) in your project.
   *
   */
  search() {
    return new ByProjectKeyOrdersSearchRequestBuilder({
      pathArgs: {
        ...this.args.pathArgs
      },
      executeRequest: this.args.executeRequest,
      baseUri: this.args.baseUri
    });
  }
  get(methodArgs) {
    return new ApiRequest({
      baseUri: this.args.baseUri,
      method: 'GET',
      uriTemplate: '/{projectKey}/orders',
      pathVariables: this.args.pathArgs,
      headers: {
        ...(methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers)
      },
      queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs
    }, this.args.executeRequest);
  }
  /**
   *	Creates an order from a Cart.
   *	The cart must have a shipping address set before creating an order.
   *	When using the Platform TaxMode, the shipping address is used for tax calculation.
   *
   */
  post(methodArgs) {
    return new ApiRequest({
      baseUri: this.args.baseUri,
      method: 'POST',
      uriTemplate: '/{projectKey}/orders',
      pathVariables: this.args.pathArgs,
      headers: {
        'Content-Type': 'application/json',
        ...(methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers)
      },
      queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs,
      body: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.body
    }, this.args.executeRequest);
  }
}

/**
 * Code generated by [commercetools RMF-Codegen](https://github.com/commercetools/rmf-codegen). DO NOT EDIT.
 * Please don't change this file manually but run `rmf-codegen generate raml_file_path -o output_path -t typescript_client` to update it.
 * For more information about the commercetools platform APIs, visit https://docs.commercetools.com/.
 */
/**
 **/
class ByProjectKeyPaymentsByIDRequestBuilder {
  constructor(args) {
    this.args = args;
  }
  get(methodArgs) {
    return new ApiRequest({
      baseUri: this.args.baseUri,
      method: 'GET',
      uriTemplate: '/{projectKey}/payments/{ID}',
      pathVariables: this.args.pathArgs,
      headers: {
        ...(methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers)
      },
      queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs
    }, this.args.executeRequest);
  }
  post(methodArgs) {
    return new ApiRequest({
      baseUri: this.args.baseUri,
      method: 'POST',
      uriTemplate: '/{projectKey}/payments/{ID}',
      pathVariables: this.args.pathArgs,
      headers: {
        'Content-Type': 'application/json',
        ...(methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers)
      },
      queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs,
      body: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.body
    }, this.args.executeRequest);
  }
  delete(methodArgs) {
    return new ApiRequest({
      baseUri: this.args.baseUri,
      method: 'DELETE',
      uriTemplate: '/{projectKey}/payments/{ID}',
      pathVariables: this.args.pathArgs,
      headers: {
        ...(methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers)
      },
      queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs
    }, this.args.executeRequest);
  }
}

/**
 * Code generated by [commercetools RMF-Codegen](https://github.com/commercetools/rmf-codegen). DO NOT EDIT.
 * Please don't change this file manually but run `rmf-codegen generate raml_file_path -o output_path -t typescript_client` to update it.
 * For more information about the commercetools platform APIs, visit https://docs.commercetools.com/.
 */
/**
 **/
class ByProjectKeyPaymentsKeyByKeyRequestBuilder {
  constructor(args) {
    this.args = args;
  }
  get(methodArgs) {
    return new ApiRequest({
      baseUri: this.args.baseUri,
      method: 'GET',
      uriTemplate: '/{projectKey}/payments/key={key}',
      pathVariables: this.args.pathArgs,
      headers: {
        ...(methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers)
      },
      queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs
    }, this.args.executeRequest);
  }
  post(methodArgs) {
    return new ApiRequest({
      baseUri: this.args.baseUri,
      method: 'POST',
      uriTemplate: '/{projectKey}/payments/key={key}',
      pathVariables: this.args.pathArgs,
      headers: {
        'Content-Type': 'application/json',
        ...(methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers)
      },
      queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs,
      body: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.body
    }, this.args.executeRequest);
  }
  delete(methodArgs) {
    return new ApiRequest({
      baseUri: this.args.baseUri,
      method: 'DELETE',
      uriTemplate: '/{projectKey}/payments/key={key}',
      pathVariables: this.args.pathArgs,
      headers: {
        ...(methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers)
      },
      queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs
    }, this.args.executeRequest);
  }
}

/**
 * Code generated by [commercetools RMF-Codegen](https://github.com/commercetools/rmf-codegen). DO NOT EDIT.
 * Please don't change this file manually but run `rmf-codegen generate raml_file_path -o output_path -t typescript_client` to update it.
 * For more information about the commercetools platform APIs, visit https://docs.commercetools.com/.
 */
/**
 **/
class ByProjectKeyPaymentsRequestBuilder {
  constructor(args) {
    this.args = args;
  }
  withKey(childPathArgs) {
    return new ByProjectKeyPaymentsKeyByKeyRequestBuilder({
      pathArgs: {
        ...this.args.pathArgs,
        ...childPathArgs
      },
      executeRequest: this.args.executeRequest,
      baseUri: this.args.baseUri
    });
  }
  withId(childPathArgs) {
    return new ByProjectKeyPaymentsByIDRequestBuilder({
      pathArgs: {
        ...this.args.pathArgs,
        ...childPathArgs
      },
      executeRequest: this.args.executeRequest,
      baseUri: this.args.baseUri
    });
  }
  get(methodArgs) {
    return new ApiRequest({
      baseUri: this.args.baseUri,
      method: 'GET',
      uriTemplate: '/{projectKey}/payments',
      pathVariables: this.args.pathArgs,
      headers: {
        ...(methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers)
      },
      queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs
    }, this.args.executeRequest);
  }
  /**
   *	Creating a Payment produces the [PaymentCreated](ctp:api:type:PaymentCreatedMessage) Message.
   *
   */
  post(methodArgs) {
    return new ApiRequest({
      baseUri: this.args.baseUri,
      method: 'POST',
      uriTemplate: '/{projectKey}/payments',
      pathVariables: this.args.pathArgs,
      headers: {
        'Content-Type': 'application/json',
        ...(methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers)
      },
      queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs,
      body: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.body
    }, this.args.executeRequest);
  }
}

/**
 * Code generated by [commercetools RMF-Codegen](https://github.com/commercetools/rmf-codegen). DO NOT EDIT.
 * Please don't change this file manually but run `rmf-codegen generate raml_file_path -o output_path -t typescript_client` to update it.
 * For more information about the commercetools platform APIs, visit https://docs.commercetools.com/.
 */
/**
 **/
class ByProjectKeyProductDiscountsMatchingRequestBuilder {
  constructor(args) {
    this.args = args;
  }
  /**
   *	This endpoint can be used to simulate which Product Discounts would be applied if a specified Product Variant had a specified Price.
   *	Given Product and Product Variant IDs and a Price, this endpoint will return the [ProductDiscount](ctp:api:type:ProductDiscount) that would have been applied to that Price.
   *
   *	If a Product Discount could not be found that could be applied to the Price of a Product Variant, a [NoMatchingProductDiscountFound](ctp:api:type:NoMatchingProductDiscountFoundError) error is returned.
   *
   */
  post(methodArgs) {
    return new ApiRequest({
      baseUri: this.args.baseUri,
      method: 'POST',
      uriTemplate: '/{projectKey}/product-discounts/matching',
      pathVariables: this.args.pathArgs,
      headers: {
        'Content-Type': 'application/json',
        ...(methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers)
      },
      body: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.body
    }, this.args.executeRequest);
  }
}

/**
 * Code generated by [commercetools RMF-Codegen](https://github.com/commercetools/rmf-codegen). DO NOT EDIT.
 * Please don't change this file manually but run `rmf-codegen generate raml_file_path -o output_path -t typescript_client` to update it.
 * For more information about the commercetools platform APIs, visit https://docs.commercetools.com/.
 */
/**
 **/
class ByProjectKeyProductDiscountsByIDRequestBuilder {
  constructor(args) {
    this.args = args;
  }
  get(methodArgs) {
    return new ApiRequest({
      baseUri: this.args.baseUri,
      method: 'GET',
      uriTemplate: '/{projectKey}/product-discounts/{ID}',
      pathVariables: this.args.pathArgs,
      headers: {
        ...(methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers)
      },
      queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs
    }, this.args.executeRequest);
  }
  post(methodArgs) {
    return new ApiRequest({
      baseUri: this.args.baseUri,
      method: 'POST',
      uriTemplate: '/{projectKey}/product-discounts/{ID}',
      pathVariables: this.args.pathArgs,
      headers: {
        'Content-Type': 'application/json',
        ...(methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers)
      },
      queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs,
      body: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.body
    }, this.args.executeRequest);
  }
  delete(methodArgs) {
    return new ApiRequest({
      baseUri: this.args.baseUri,
      method: 'DELETE',
      uriTemplate: '/{projectKey}/product-discounts/{ID}',
      pathVariables: this.args.pathArgs,
      headers: {
        ...(methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers)
      },
      queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs
    }, this.args.executeRequest);
  }
}

/**
 * Code generated by [commercetools RMF-Codegen](https://github.com/commercetools/rmf-codegen). DO NOT EDIT.
 * Please don't change this file manually but run `rmf-codegen generate raml_file_path -o output_path -t typescript_client` to update it.
 * For more information about the commercetools platform APIs, visit https://docs.commercetools.com/.
 */
/**
 **/
class ByProjectKeyProductDiscountsKeyByKeyRequestBuilder {
  constructor(args) {
    this.args = args;
  }
  get(methodArgs) {
    return new ApiRequest({
      baseUri: this.args.baseUri,
      method: 'GET',
      uriTemplate: '/{projectKey}/product-discounts/key={key}',
      pathVariables: this.args.pathArgs,
      headers: {
        ...(methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers)
      },
      queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs
    }, this.args.executeRequest);
  }
  post(methodArgs) {
    return new ApiRequest({
      baseUri: this.args.baseUri,
      method: 'POST',
      uriTemplate: '/{projectKey}/product-discounts/key={key}',
      pathVariables: this.args.pathArgs,
      headers: {
        'Content-Type': 'application/json',
        ...(methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers)
      },
      queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs,
      body: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.body
    }, this.args.executeRequest);
  }
  delete(methodArgs) {
    return new ApiRequest({
      baseUri: this.args.baseUri,
      method: 'DELETE',
      uriTemplate: '/{projectKey}/product-discounts/key={key}',
      pathVariables: this.args.pathArgs,
      headers: {
        ...(methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers)
      },
      queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs
    }, this.args.executeRequest);
  }
}

/**
 * Code generated by [commercetools RMF-Codegen](https://github.com/commercetools/rmf-codegen). DO NOT EDIT.
 * Please don't change this file manually but run `rmf-codegen generate raml_file_path -o output_path -t typescript_client` to update it.
 * For more information about the commercetools platform APIs, visit https://docs.commercetools.com/.
 */
/**
 **/
class ByProjectKeyProductDiscountsRequestBuilder {
  constructor(args) {
    this.args = args;
  }
  matching() {
    return new ByProjectKeyProductDiscountsMatchingRequestBuilder({
      pathArgs: {
        ...this.args.pathArgs
      },
      executeRequest: this.args.executeRequest,
      baseUri: this.args.baseUri
    });
  }
  withKey(childPathArgs) {
    return new ByProjectKeyProductDiscountsKeyByKeyRequestBuilder({
      pathArgs: {
        ...this.args.pathArgs,
        ...childPathArgs
      },
      executeRequest: this.args.executeRequest,
      baseUri: this.args.baseUri
    });
  }
  withId(childPathArgs) {
    return new ByProjectKeyProductDiscountsByIDRequestBuilder({
      pathArgs: {
        ...this.args.pathArgs,
        ...childPathArgs
      },
      executeRequest: this.args.executeRequest,
      baseUri: this.args.baseUri
    });
  }
  get(methodArgs) {
    return new ApiRequest({
      baseUri: this.args.baseUri,
      method: 'GET',
      uriTemplate: '/{projectKey}/product-discounts',
      pathVariables: this.args.pathArgs,
      headers: {
        ...(methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers)
      },
      queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs
    }, this.args.executeRequest);
  }
  post(methodArgs) {
    return new ApiRequest({
      baseUri: this.args.baseUri,
      method: 'POST',
      uriTemplate: '/{projectKey}/product-discounts',
      pathVariables: this.args.pathArgs,
      headers: {
        'Content-Type': 'application/json',
        ...(methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers)
      },
      queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs,
      body: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.body
    }, this.args.executeRequest);
  }
}

/**
 * Code generated by [commercetools RMF-Codegen](https://github.com/commercetools/rmf-codegen). DO NOT EDIT.
 * Please don't change this file manually but run `rmf-codegen generate raml_file_path -o output_path -t typescript_client` to update it.
 * For more information about the commercetools platform APIs, visit https://docs.commercetools.com/.
 */
/**
 **/
class ByProjectKeyProductProjectionsSearchRequestBuilder {
  constructor(args) {
    this.args = args;
  }
  /**
   *	Product Projection Search
   */
  post(methodArgs) {
    return new ApiRequest({
      baseUri: this.args.baseUri,
      method: 'POST',
      uriTemplate: '/{projectKey}/product-projections/search',
      pathVariables: this.args.pathArgs,
      headers: {
        'Content-Type': 'application/x-www-form-urlencoded',
        ...(methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers)
      },
      body: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.body
    }, this.args.executeRequest);
  }
  /**
   *	Product Projection Search
   */
  get(methodArgs) {
    return new ApiRequest({
      baseUri: this.args.baseUri,
      method: 'GET',
      uriTemplate: '/{projectKey}/product-projections/search',
      pathVariables: this.args.pathArgs,
      headers: {
        ...(methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers)
      },
      queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs
    }, this.args.executeRequest);
  }
}

/**
 * Code generated by [commercetools RMF-Codegen](https://github.com/commercetools/rmf-codegen). DO NOT EDIT.
 * Please don't change this file manually but run `rmf-codegen generate raml_file_path -o output_path -t typescript_client` to update it.
 * For more information about the commercetools platform APIs, visit https://docs.commercetools.com/.
 */
/**
 **/
class ByProjectKeyProductProjectionsSuggestRequestBuilder {
  constructor(args) {
    this.args = args;
  }
  get(methodArgs) {
    return new ApiRequest({
      baseUri: this.args.baseUri,
      method: 'GET',
      uriTemplate: '/{projectKey}/product-projections/suggest',
      pathVariables: this.args.pathArgs,
      headers: {
        ...(methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers)
      },
      queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs
    }, this.args.executeRequest);
  }
}

/**
 * Code generated by [commercetools RMF-Codegen](https://github.com/commercetools/rmf-codegen). DO NOT EDIT.
 * Please don't change this file manually but run `rmf-codegen generate raml_file_path -o output_path -t typescript_client` to update it.
 * For more information about the commercetools platform APIs, visit https://docs.commercetools.com/.
 */
/**
 **/
class ByProjectKeyProductProjectionsByIDRequestBuilder {
  constructor(args) {
    this.args = args;
  }
  /**
   *	Gets the current or staged representation of a [Product](ctp:api:type:Product) by its ID. When used with an API Client that has the `view_published_products:{projectKey}` scope, this endpoint only returns published (current) Product Projections.
   *
   */
  get(methodArgs) {
    return new ApiRequest({
      baseUri: this.args.baseUri,
      method: 'GET',
      uriTemplate: '/{projectKey}/product-projections/{ID}',
      pathVariables: this.args.pathArgs,
      headers: {
        ...(methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers)
      },
      queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs
    }, this.args.executeRequest);
  }
}

/**
 * Code generated by [commercetools RMF-Codegen](https://github.com/commercetools/rmf-codegen). DO NOT EDIT.
 * Please don't change this file manually but run `rmf-codegen generate raml_file_path -o output_path -t typescript_client` to update it.
 * For more information about the commercetools platform APIs, visit https://docs.commercetools.com/.
 */
/**
 **/
class ByProjectKeyProductProjectionsKeyByKeyRequestBuilder {
  constructor(args) {
    this.args = args;
  }
  /**
   *	Gets the current or staged representation of a [Product](ctp:api:type:Product) found by Key.
   *	When used with an API Client that has the `view_published_products:{projectKey}` scope,
   *	this endpoint only returns published (current) Product Projections.
   *
   */
  get(methodArgs) {
    return new ApiRequest({
      baseUri: this.args.baseUri,
      method: 'GET',
      uriTemplate: '/{projectKey}/product-projections/key={key}',
      pathVariables: this.args.pathArgs,
      headers: {
        ...(methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers)
      },
      queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs
    }, this.args.executeRequest);
  }
}

/**
 * Code generated by [commercetools RMF-Codegen](https://github.com/commercetools/rmf-codegen). DO NOT EDIT.
 * Please don't change this file manually but run `rmf-codegen generate raml_file_path -o output_path -t typescript_client` to update it.
 * For more information about the commercetools platform APIs, visit https://docs.commercetools.com/.
 */
/**
 **/
class ByProjectKeyProductProjectionsRequestBuilder {
  constructor(args) {
    this.args = args;
  }
  /**
   *	This endpoint provides high performance search queries over ProductProjections. The query result contains the
   *	ProductProjections for which at least one ProductVariant matches the search query. This means that variants can
   *	be included in the result also for which the search query does not match. To determine which ProductVariants match
   *	the search query, the returned ProductProjections include the additional field isMatchingVariant.
   *
   */
  search() {
    return new ByProjectKeyProductProjectionsSearchRequestBuilder({
      pathArgs: {
        ...this.args.pathArgs
      },
      executeRequest: this.args.executeRequest,
      baseUri: this.args.baseUri
    });
  }
  /**
   *	The source of data for suggestions is the searchKeyword field in a product
   */
  suggest() {
    return new ByProjectKeyProductProjectionsSuggestRequestBuilder({
      pathArgs: {
        ...this.args.pathArgs
      },
      executeRequest: this.args.executeRequest,
      baseUri: this.args.baseUri
    });
  }
  withKey(childPathArgs) {
    return new ByProjectKeyProductProjectionsKeyByKeyRequestBuilder({
      pathArgs: {
        ...this.args.pathArgs,
        ...childPathArgs
      },
      executeRequest: this.args.executeRequest,
      baseUri: this.args.baseUri
    });
  }
  withId(childPathArgs) {
    return new ByProjectKeyProductProjectionsByIDRequestBuilder({
      pathArgs: {
        ...this.args.pathArgs,
        ...childPathArgs
      },
      executeRequest: this.args.executeRequest,
      baseUri: this.args.baseUri
    });
  }

  /**
   *	Use the Product Projections query endpoint to get the current or staged representations of Products.
   *	When used with an API Client that has the `view_published_products:{projectKey}` scope,
   *	this endpoint only returns published (current) Product Projections.
   *
   */
  get(methodArgs) {
    return new ApiRequest({
      baseUri: this.args.baseUri,
      method: 'GET',
      uriTemplate: '/{projectKey}/product-projections',
      pathVariables: this.args.pathArgs,
      headers: {
        ...(methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers)
      },
      queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs
    }, this.args.executeRequest);
  }
}

/**
 * Code generated by [commercetools RMF-Codegen](https://github.com/commercetools/rmf-codegen). DO NOT EDIT.
 * Please don't change this file manually but run `rmf-codegen generate raml_file_path -o output_path -t typescript_client` to update it.
 * For more information about the commercetools platform APIs, visit https://docs.commercetools.com/.
 */
/**
 **/
class ByProjectKeyProductSelectionsByIDProductsRequestBuilder {
  constructor(args) {
    this.args = args;
  }
  get(methodArgs) {
    return new ApiRequest({
      baseUri: this.args.baseUri,
      method: 'GET',
      uriTemplate: '/{projectKey}/product-selections/{ID}/products',
      pathVariables: this.args.pathArgs,
      headers: {
        ...(methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers)
      },
      queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs
    }, this.args.executeRequest);
  }
}

/**
 * Code generated by [commercetools RMF-Codegen](https://github.com/commercetools/rmf-codegen). DO NOT EDIT.
 * Please don't change this file manually but run `rmf-codegen generate raml_file_path -o output_path -t typescript_client` to update it.
 * For more information about the commercetools platform APIs, visit https://docs.commercetools.com/.
 */
/**
 **/
class ByProjectKeyProductSelectionsByIDRequestBuilder {
  constructor(args) {
    this.args = args;
  }
  products() {
    return new ByProjectKeyProductSelectionsByIDProductsRequestBuilder({
      pathArgs: {
        ...this.args.pathArgs
      },
      executeRequest: this.args.executeRequest,
      baseUri: this.args.baseUri
    });
  }
  get(methodArgs) {
    return new ApiRequest({
      baseUri: this.args.baseUri,
      method: 'GET',
      uriTemplate: '/{projectKey}/product-selections/{ID}',
      pathVariables: this.args.pathArgs,
      headers: {
        ...(methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers)
      },
      queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs
    }, this.args.executeRequest);
  }
  post(methodArgs) {
    return new ApiRequest({
      baseUri: this.args.baseUri,
      method: 'POST',
      uriTemplate: '/{projectKey}/product-selections/{ID}',
      pathVariables: this.args.pathArgs,
      headers: {
        'Content-Type': 'application/json',
        ...(methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers)
      },
      queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs,
      body: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.body
    }, this.args.executeRequest);
  }
  /**
   *	Deletion will only succeed if the Product Selection is not assigned to any [Store](/../api/projects/stores#store).
   */
  delete(methodArgs) {
    return new ApiRequest({
      baseUri: this.args.baseUri,
      method: 'DELETE',
      uriTemplate: '/{projectKey}/product-selections/{ID}',
      pathVariables: this.args.pathArgs,
      headers: {
        ...(methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers)
      },
      queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs
    }, this.args.executeRequest);
  }
}

/**
 * Code generated by [commercetools RMF-Codegen](https://github.com/commercetools/rmf-codegen). DO NOT EDIT.
 * Please don't change this file manually but run `rmf-codegen generate raml_file_path -o output_path -t typescript_client` to update it.
 * For more information about the commercetools platform APIs, visit https://docs.commercetools.com/.
 */
/**
 **/
class ByProjectKeyProductSelectionsKeyByKeyProductsRequestBuilder {
  constructor(args) {
    this.args = args;
  }
  get(methodArgs) {
    return new ApiRequest({
      baseUri: this.args.baseUri,
      method: 'GET',
      uriTemplate: '/{projectKey}/product-selections/key={key}/products',
      pathVariables: this.args.pathArgs,
      headers: {
        ...(methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers)
      },
      queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs
    }, this.args.executeRequest);
  }
}

/**
 * Code generated by [commercetools RMF-Codegen](https://github.com/commercetools/rmf-codegen). DO NOT EDIT.
 * Please don't change this file manually but run `rmf-codegen generate raml_file_path -o output_path -t typescript_client` to update it.
 * For more information about the commercetools platform APIs, visit https://docs.commercetools.com/.
 */
/**
 **/
class ByProjectKeyProductSelectionsKeyByKeyRequestBuilder {
  constructor(args) {
    this.args = args;
  }
  products() {
    return new ByProjectKeyProductSelectionsKeyByKeyProductsRequestBuilder({
      pathArgs: {
        ...this.args.pathArgs
      },
      executeRequest: this.args.executeRequest,
      baseUri: this.args.baseUri
    });
  }
  get(methodArgs) {
    return new ApiRequest({
      baseUri: this.args.baseUri,
      method: 'GET',
      uriTemplate: '/{projectKey}/product-selections/key={key}',
      pathVariables: this.args.pathArgs,
      headers: {
        ...(methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers)
      },
      queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs
    }, this.args.executeRequest);
  }
  post(methodArgs) {
    return new ApiRequest({
      baseUri: this.args.baseUri,
      method: 'POST',
      uriTemplate: '/{projectKey}/product-selections/key={key}',
      pathVariables: this.args.pathArgs,
      headers: {
        'Content-Type': 'application/json',
        ...(methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers)
      },
      queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs,
      body: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.body
    }, this.args.executeRequest);
  }
  /**
   *	Deletion will only succeed if the Product Selection is not assigned to any [Store](/../api/projects/stores#store).
   */
  delete(methodArgs) {
    return new ApiRequest({
      baseUri: this.args.baseUri,
      method: 'DELETE',
      uriTemplate: '/{projectKey}/product-selections/key={key}',
      pathVariables: this.args.pathArgs,
      headers: {
        ...(methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers)
      },
      queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs
    }, this.args.executeRequest);
  }
}

/**
 * Code generated by [commercetools RMF-Codegen](https://github.com/commercetools/rmf-codegen). DO NOT EDIT.
 * Please don't change this file manually but run `rmf-codegen generate raml_file_path -o output_path -t typescript_client` to update it.
 * For more information about the commercetools platform APIs, visit https://docs.commercetools.com/.
 */
/**
 **/
class ByProjectKeyProductSelectionsRequestBuilder {
  constructor(args) {
    this.args = args;
  }
  withKey(childPathArgs) {
    return new ByProjectKeyProductSelectionsKeyByKeyRequestBuilder({
      pathArgs: {
        ...this.args.pathArgs,
        ...childPathArgs
      },
      executeRequest: this.args.executeRequest,
      baseUri: this.args.baseUri
    });
  }
  withId(childPathArgs) {
    return new ByProjectKeyProductSelectionsByIDRequestBuilder({
      pathArgs: {
        ...this.args.pathArgs,
        ...childPathArgs
      },
      executeRequest: this.args.executeRequest,
      baseUri: this.args.baseUri
    });
  }
  get(methodArgs) {
    return new ApiRequest({
      baseUri: this.args.baseUri,
      method: 'GET',
      uriTemplate: '/{projectKey}/product-selections',
      pathVariables: this.args.pathArgs,
      headers: {
        ...(methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers)
      },
      queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs
    }, this.args.executeRequest);
  }
  post(methodArgs) {
    return new ApiRequest({
      baseUri: this.args.baseUri,
      method: 'POST',
      uriTemplate: '/{projectKey}/product-selections',
      pathVariables: this.args.pathArgs,
      headers: {
        'Content-Type': 'application/json',
        ...(methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers)
      },
      queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs,
      body: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.body
    }, this.args.executeRequest);
  }
}

/**
 * Code generated by [commercetools RMF-Codegen](https://github.com/commercetools/rmf-codegen). DO NOT EDIT.
 * Please don't change this file manually but run `rmf-codegen generate raml_file_path -o output_path -t typescript_client` to update it.
 * For more information about the commercetools platform APIs, visit https://docs.commercetools.com/.
 */
/**
 **/
class ByProjectKeyProductTypesByIDRequestBuilder {
  constructor(args) {
    this.args = args;
  }
  get(methodArgs) {
    return new ApiRequest({
      baseUri: this.args.baseUri,
      method: 'GET',
      uriTemplate: '/{projectKey}/product-types/{ID}',
      pathVariables: this.args.pathArgs,
      headers: {
        ...(methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers)
      },
      queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs
    }, this.args.executeRequest);
  }
  /**
   *	Checks if a Product Type with given `id` exists. Responds with a `200 OK` status if the `Product Type` exists or `404 Not Found` otherwise.
   */
  head(methodArgs) {
    return new ApiRequest({
      baseUri: this.args.baseUri,
      method: 'HEAD',
      uriTemplate: '/{projectKey}/product-types/{ID}',
      pathVariables: this.args.pathArgs,
      headers: {
        ...(methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers)
      }
    }, this.args.executeRequest);
  }
  post(methodArgs) {
    return new ApiRequest({
      baseUri: this.args.baseUri,
      method: 'POST',
      uriTemplate: '/{projectKey}/product-types/{ID}',
      pathVariables: this.args.pathArgs,
      headers: {
        'Content-Type': 'application/json',
        ...(methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers)
      },
      queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs,
      body: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.body
    }, this.args.executeRequest);
  }
  delete(methodArgs) {
    return new ApiRequest({
      baseUri: this.args.baseUri,
      method: 'DELETE',
      uriTemplate: '/{projectKey}/product-types/{ID}',
      pathVariables: this.args.pathArgs,
      headers: {
        ...(methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers)
      },
      queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs
    }, this.args.executeRequest);
  }
}

/**
 * Code generated by [commercetools RMF-Codegen](https://github.com/commercetools/rmf-codegen). DO NOT EDIT.
 * Please don't change this file manually but run `rmf-codegen generate raml_file_path -o output_path -t typescript_client` to update it.
 * For more information about the commercetools platform APIs, visit https://docs.commercetools.com/.
 */
/**
 **/
class ByProjectKeyProductTypesKeyByKeyRequestBuilder {
  constructor(args) {
    this.args = args;
  }
  get(methodArgs) {
    return new ApiRequest({
      baseUri: this.args.baseUri,
      method: 'GET',
      uriTemplate: '/{projectKey}/product-types/key={key}',
      pathVariables: this.args.pathArgs,
      headers: {
        ...(methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers)
      },
      queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs
    }, this.args.executeRequest);
  }
  /**
   *	Checks if a Product Type with given `key` exists. Responds with a `200 OK` status if the `Product Type` exists or `404 Not Found` otherwise.
   */
  head(methodArgs) {
    return new ApiRequest({
      baseUri: this.args.baseUri,
      method: 'HEAD',
      uriTemplate: '/{projectKey}/product-types/key={key}',
      pathVariables: this.args.pathArgs,
      headers: {
        ...(methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers)
      }
    }, this.args.executeRequest);
  }
  post(methodArgs) {
    return new ApiRequest({
      baseUri: this.args.baseUri,
      method: 'POST',
      uriTemplate: '/{projectKey}/product-types/key={key}',
      pathVariables: this.args.pathArgs,
      headers: {
        'Content-Type': 'application/json',
        ...(methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers)
      },
      queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs,
      body: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.body
    }, this.args.executeRequest);
  }
  delete(methodArgs) {
    return new ApiRequest({
      baseUri: this.args.baseUri,
      method: 'DELETE',
      uriTemplate: '/{projectKey}/product-types/key={key}',
      pathVariables: this.args.pathArgs,
      headers: {
        ...(methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers)
      },
      queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs
    }, this.args.executeRequest);
  }
}

/**
 * Code generated by [commercetools RMF-Codegen](https://github.com/commercetools/rmf-codegen). DO NOT EDIT.
 * Please don't change this file manually but run `rmf-codegen generate raml_file_path -o output_path -t typescript_client` to update it.
 * For more information about the commercetools platform APIs, visit https://docs.commercetools.com/.
 */
/**
 **/
class ByProjectKeyProductTypesRequestBuilder {
  constructor(args) {
    this.args = args;
  }
  withKey(childPathArgs) {
    return new ByProjectKeyProductTypesKeyByKeyRequestBuilder({
      pathArgs: {
        ...this.args.pathArgs,
        ...childPathArgs
      },
      executeRequest: this.args.executeRequest,
      baseUri: this.args.baseUri
    });
  }
  withId(childPathArgs) {
    return new ByProjectKeyProductTypesByIDRequestBuilder({
      pathArgs: {
        ...this.args.pathArgs,
        ...childPathArgs
      },
      executeRequest: this.args.executeRequest,
      baseUri: this.args.baseUri
    });
  }
  get(methodArgs) {
    return new ApiRequest({
      baseUri: this.args.baseUri,
      method: 'GET',
      uriTemplate: '/{projectKey}/product-types',
      pathVariables: this.args.pathArgs,
      headers: {
        ...(methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers)
      },
      queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs
    }, this.args.executeRequest);
  }
  /**
   *	Check if Product Types exist. Responds with a `200 OK` status if any Product Types match the Query Predicate, or `404 Not Found` otherwise.
   */
  head(methodArgs) {
    return new ApiRequest({
      baseUri: this.args.baseUri,
      method: 'HEAD',
      uriTemplate: '/{projectKey}/product-types',
      pathVariables: this.args.pathArgs,
      headers: {
        ...(methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers)
      },
      queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs
    }, this.args.executeRequest);
  }
  post(methodArgs) {
    return new ApiRequest({
      baseUri: this.args.baseUri,
      method: 'POST',
      uriTemplate: '/{projectKey}/product-types',
      pathVariables: this.args.pathArgs,
      headers: {
        'Content-Type': 'application/json',
        ...(methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers)
      },
      queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs,
      body: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.body
    }, this.args.executeRequest);
  }
}

/**
 * Code generated by [commercetools RMF-Codegen](https://github.com/commercetools/rmf-codegen). DO NOT EDIT.
 * Please don't change this file manually but run `rmf-codegen generate raml_file_path -o output_path -t typescript_client` to update it.
 * For more information about the commercetools platform APIs, visit https://docs.commercetools.com/.
 */
/**
 **/
class ByProjectKeyProductsByIDImagesRequestBuilder {
  constructor(args) {
    this.args = args;
  }
  /**
   *	Upload a JPEG, PNG and GIF file to a [ProductVariant](ctp:api:type:ProductVariant). The maximum file size of the image is 10MB. `variant` or `sku` is required to update a specific ProductVariant. The image is uploaded to the Master Variant if `variant` or `sku` are not included. Produces the [ProductImageAdded](/projects/messages#product-image-added) Message when the `Small` version of the image has been uploaded to the CDN.
   *
   */
  post(methodArgs) {
    return new ApiRequest({
      baseUri: this.args.baseUri,
      method: 'POST',
      uriTemplate: '/{projectKey}/products/{ID}/images',
      pathVariables: this.args.pathArgs,
      headers: {
        ...(methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers)
      },
      queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs,
      body: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.body
    }, this.args.executeRequest);
  }
}

/**
 * Code generated by [commercetools RMF-Codegen](https://github.com/commercetools/rmf-codegen). DO NOT EDIT.
 * Please don't change this file manually but run `rmf-codegen generate raml_file_path -o output_path -t typescript_client` to update it.
 * For more information about the commercetools platform APIs, visit https://docs.commercetools.com/.
 */
/**
 **/
class ByProjectKeyProductsByIDProductSelectionsRequestBuilder {
  constructor(args) {
    this.args = args;
  }
  get(methodArgs) {
    return new ApiRequest({
      baseUri: this.args.baseUri,
      method: 'GET',
      uriTemplate: '/{projectKey}/products/{ID}/product-selections',
      pathVariables: this.args.pathArgs,
      headers: {
        ...(methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers)
      },
      queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs
    }, this.args.executeRequest);
  }
}

/**
 * Code generated by [commercetools RMF-Codegen](https://github.com/commercetools/rmf-codegen). DO NOT EDIT.
 * Please don't change this file manually but run `rmf-codegen generate raml_file_path -o output_path -t typescript_client` to update it.
 * For more information about the commercetools platform APIs, visit https://docs.commercetools.com/.
 */
/**
 **/
class ByProjectKeyProductsByIDRequestBuilder {
  constructor(args) {
    this.args = args;
  }
  images() {
    return new ByProjectKeyProductsByIDImagesRequestBuilder({
      pathArgs: {
        ...this.args.pathArgs
      },
      executeRequest: this.args.executeRequest,
      baseUri: this.args.baseUri
    });
  }
  productSelections() {
    return new ByProjectKeyProductsByIDProductSelectionsRequestBuilder({
      pathArgs: {
        ...this.args.pathArgs
      },
      executeRequest: this.args.executeRequest,
      baseUri: this.args.baseUri
    });
  }

  /**
   *	If [Price selection](ctp:api:type:ProductPriceSelection) query parameters are provided, the selected Prices are added to the response.
   */
  get(methodArgs) {
    return new ApiRequest({
      baseUri: this.args.baseUri,
      method: 'GET',
      uriTemplate: '/{projectKey}/products/{ID}',
      pathVariables: this.args.pathArgs,
      headers: {
        ...(methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers)
      },
      queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs
    }, this.args.executeRequest);
  }
  /**
   *	Check if a Product exists with a specified `id`. Responds with a `200 OK` status if the Product exists or `404 Not Found` otherwise.
   */
  head(methodArgs) {
    return new ApiRequest({
      baseUri: this.args.baseUri,
      method: 'HEAD',
      uriTemplate: '/{projectKey}/products/{ID}',
      pathVariables: this.args.pathArgs,
      headers: {
        ...(methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers)
      }
    }, this.args.executeRequest);
  }
  /**
   *	If [Price selection](ctp:api:type:ProductPriceSelection) query parameters are provided, the selected Prices are added to the response.
   *
   *	A failed response can return a [DuplicatePriceScope](ctp:api:type:DuplicatePriceScopeError), [DuplicateVariantValues](ctp:api:type:DuplicateVariantValuesError), [DuplicateAttributeValue](ctp:api:type:DuplicateAttributeValueError), or [DuplicateAttributeValues](ctp:api:type:DuplicateAttributeValuesError) error.
   */
  post(methodArgs) {
    return new ApiRequest({
      baseUri: this.args.baseUri,
      method: 'POST',
      uriTemplate: '/{projectKey}/products/{ID}',
      pathVariables: this.args.pathArgs,
      headers: {
        'Content-Type': 'application/json',
        ...(methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers)
      },
      queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs,
      body: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.body
    }, this.args.executeRequest);
  }
  /**
   *	If [Price selection](ctp:api:type:ProductPriceSelection) query parameters are provided, the selected Prices are added to the response.
   *	Produces the [ProductDeleted](/projects/messages#product-deleted) Message.
   */
  delete(methodArgs) {
    return new ApiRequest({
      baseUri: this.args.baseUri,
      method: 'DELETE',
      uriTemplate: '/{projectKey}/products/{ID}',
      pathVariables: this.args.pathArgs,
      headers: {
        ...(methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers)
      },
      queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs
    }, this.args.executeRequest);
  }
}

/**
 * Code generated by [commercetools RMF-Codegen](https://github.com/commercetools/rmf-codegen). DO NOT EDIT.
 * Please don't change this file manually but run `rmf-codegen generate raml_file_path -o output_path -t typescript_client` to update it.
 * For more information about the commercetools platform APIs, visit https://docs.commercetools.com/.
 */
/**
 **/
class ByProjectKeyProductsKeyByKeyProductSelectionsRequestBuilder {
  constructor(args) {
    this.args = args;
  }
  get(methodArgs) {
    return new ApiRequest({
      baseUri: this.args.baseUri,
      method: 'GET',
      uriTemplate: '/{projectKey}/products/key={key}/product-selections',
      pathVariables: this.args.pathArgs,
      headers: {
        ...(methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers)
      },
      queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs
    }, this.args.executeRequest);
  }
}

/**
 * Code generated by [commercetools RMF-Codegen](https://github.com/commercetools/rmf-codegen). DO NOT EDIT.
 * Please don't change this file manually but run `rmf-codegen generate raml_file_path -o output_path -t typescript_client` to update it.
 * For more information about the commercetools platform APIs, visit https://docs.commercetools.com/.
 */
/**
 **/
class ByProjectKeyProductsKeyByKeyRequestBuilder {
  constructor(args) {
    this.args = args;
  }
  productSelections() {
    return new ByProjectKeyProductsKeyByKeyProductSelectionsRequestBuilder({
      pathArgs: {
        ...this.args.pathArgs
      },
      executeRequest: this.args.executeRequest,
      baseUri: this.args.baseUri
    });
  }

  /**
   *	If [Price selection](ctp:api:type:ProductPriceSelection) query parameters are provided, the selected Prices are added to the response.
   */
  get(methodArgs) {
    return new ApiRequest({
      baseUri: this.args.baseUri,
      method: 'GET',
      uriTemplate: '/{projectKey}/products/key={key}',
      pathVariables: this.args.pathArgs,
      headers: {
        ...(methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers)
      },
      queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs
    }, this.args.executeRequest);
  }
  /**
   *	Check if a Product exists with a specified `key`. Responds with a `200 OK` status if the Product exists or `404 Not Found` otherwise.
   */
  head(methodArgs) {
    return new ApiRequest({
      baseUri: this.args.baseUri,
      method: 'HEAD',
      uriTemplate: '/{projectKey}/products/key={key}',
      pathVariables: this.args.pathArgs,
      headers: {
        ...(methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers)
      }
    }, this.args.executeRequest);
  }
  /**
   *	A failed response can return a [DuplicatePriceScope](ctp:api:type:DuplicatePriceScopeError), [DuplicateVariantValues](ctp:api:type:DuplicateVariantValuesError), [DuplicateAttributeValue](ctp:api:type:DuplicateAttributeValueError), or [DuplicateAttributeValues](ctp:api:type:DuplicateAttributeValuesError) error.
   */
  post(methodArgs) {
    return new ApiRequest({
      baseUri: this.args.baseUri,
      method: 'POST',
      uriTemplate: '/{projectKey}/products/key={key}',
      pathVariables: this.args.pathArgs,
      headers: {
        'Content-Type': 'application/json',
        ...(methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers)
      },
      queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs,
      body: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.body
    }, this.args.executeRequest);
  }
  /**
   *	If [Price selection](ctp:api:type:ProductPriceSelection) query parameters are provided, the selected Prices are added to the response.
   *	Produces the [ProductDeleted](/projects/messages#product-deleted) Message.
   */
  delete(methodArgs) {
    return new ApiRequest({
      baseUri: this.args.baseUri,
      method: 'DELETE',
      uriTemplate: '/{projectKey}/products/key={key}',
      pathVariables: this.args.pathArgs,
      headers: {
        ...(methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers)
      },
      queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs
    }, this.args.executeRequest);
  }
}

/**
 * Code generated by [commercetools RMF-Codegen](https://github.com/commercetools/rmf-codegen). DO NOT EDIT.
 * Please don't change this file manually but run `rmf-codegen generate raml_file_path -o output_path -t typescript_client` to update it.
 * For more information about the commercetools platform APIs, visit https://docs.commercetools.com/.
 */
/**
 **/
class ByProjectKeyProductsRequestBuilder {
  constructor(args) {
    this.args = args;
  }
  withKey(childPathArgs) {
    return new ByProjectKeyProductsKeyByKeyRequestBuilder({
      pathArgs: {
        ...this.args.pathArgs,
        ...childPathArgs
      },
      executeRequest: this.args.executeRequest,
      baseUri: this.args.baseUri
    });
  }
  withId(childPathArgs) {
    return new ByProjectKeyProductsByIDRequestBuilder({
      pathArgs: {
        ...this.args.pathArgs,
        ...childPathArgs
      },
      executeRequest: this.args.executeRequest,
      baseUri: this.args.baseUri
    });
  }

  /**
   *	If [Price selection](ctp:api:type:ProductPriceSelection) query parameters are provided, the selected Prices are added to the response.
   */
  get(methodArgs) {
    return new ApiRequest({
      baseUri: this.args.baseUri,
      method: 'GET',
      uriTemplate: '/{projectKey}/products',
      pathVariables: this.args.pathArgs,
      headers: {
        ...(methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers)
      },
      queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs
    }, this.args.executeRequest);
  }
  /**
   *	Check if Products exist. Responds with a `200 OK` status if any Products match the Query Predicate, or `404 Not Found` otherwise.
   */
  head(methodArgs) {
    return new ApiRequest({
      baseUri: this.args.baseUri,
      method: 'HEAD',
      uriTemplate: '/{projectKey}/products',
      pathVariables: this.args.pathArgs,
      headers: {
        ...(methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers)
      },
      queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs
    }, this.args.executeRequest);
  }
  /**
   *	To create a new Product, send a representation that is going to become the initial _staged_ representation of the new Product in the master catalog.
   *	If [Price Selection](ctp:api:type:ProductPriceSelection) query parameters are provided, selected Prices will be added to the response.
   *	Produces the [ProductCreated](/projects/messages#product-created) Message.
   *
   */
  post(methodArgs) {
    return new ApiRequest({
      baseUri: this.args.baseUri,
      method: 'POST',
      uriTemplate: '/{projectKey}/products',
      pathVariables: this.args.pathArgs,
      headers: {
        'Content-Type': 'application/json',
        ...(methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers)
      },
      queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs,
      body: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.body
    }, this.args.executeRequest);
  }
}

/**
 * Code generated by [commercetools RMF-Codegen](https://github.com/commercetools/rmf-codegen). DO NOT EDIT.
 * Please don't change this file manually but run `rmf-codegen generate raml_file_path -o output_path -t typescript_client` to update it.
 * For more information about the commercetools platform APIs, visit https://docs.commercetools.com/.
 */
/**
 **/
class ByProjectKeyQuoteRequestsByIDRequestBuilder {
  constructor(args) {
    this.args = args;
  }
  get(methodArgs) {
    return new ApiRequest({
      baseUri: this.args.baseUri,
      method: 'GET',
      uriTemplate: '/{projectKey}/quote-requests/{ID}',
      pathVariables: this.args.pathArgs,
      headers: {
        ...(methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers)
      },
      queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs
    }, this.args.executeRequest);
  }
  post(methodArgs) {
    return new ApiRequest({
      baseUri: this.args.baseUri,
      method: 'POST',
      uriTemplate: '/{projectKey}/quote-requests/{ID}',
      pathVariables: this.args.pathArgs,
      headers: {
        'Content-Type': 'application/json',
        ...(methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers)
      },
      queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs,
      body: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.body
    }, this.args.executeRequest);
  }
  delete(methodArgs) {
    return new ApiRequest({
      baseUri: this.args.baseUri,
      method: 'DELETE',
      uriTemplate: '/{projectKey}/quote-requests/{ID}',
      pathVariables: this.args.pathArgs,
      headers: {
        ...(methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers)
      },
      queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs
    }, this.args.executeRequest);
  }
}

/**
 * Code generated by [commercetools RMF-Codegen](https://github.com/commercetools/rmf-codegen). DO NOT EDIT.
 * Please don't change this file manually but run `rmf-codegen generate raml_file_path -o output_path -t typescript_client` to update it.
 * For more information about the commercetools platform APIs, visit https://docs.commercetools.com/.
 */
/**
 **/
class ByProjectKeyQuoteRequestsKeyByKeyRequestBuilder {
  constructor(args) {
    this.args = args;
  }
  get(methodArgs) {
    return new ApiRequest({
      baseUri: this.args.baseUri,
      method: 'GET',
      uriTemplate: '/{projectKey}/quote-requests/key={key}',
      pathVariables: this.args.pathArgs,
      headers: {
        ...(methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers)
      },
      queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs
    }, this.args.executeRequest);
  }
  post(methodArgs) {
    return new ApiRequest({
      baseUri: this.args.baseUri,
      method: 'POST',
      uriTemplate: '/{projectKey}/quote-requests/key={key}',
      pathVariables: this.args.pathArgs,
      headers: {
        'Content-Type': 'application/json',
        ...(methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers)
      },
      queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs,
      body: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.body
    }, this.args.executeRequest);
  }
  delete(methodArgs) {
    return new ApiRequest({
      baseUri: this.args.baseUri,
      method: 'DELETE',
      uriTemplate: '/{projectKey}/quote-requests/key={key}',
      pathVariables: this.args.pathArgs,
      headers: {
        ...(methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers)
      },
      queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs
    }, this.args.executeRequest);
  }
}

/**
 * Code generated by [commercetools RMF-Codegen](https://github.com/commercetools/rmf-codegen). DO NOT EDIT.
 * Please don't change this file manually but run `rmf-codegen generate raml_file_path -o output_path -t typescript_client` to update it.
 * For more information about the commercetools platform APIs, visit https://docs.commercetools.com/.
 */
/**
 **/
class ByProjectKeyQuoteRequestsRequestBuilder {
  constructor(args) {
    this.args = args;
  }
  withKey(childPathArgs) {
    return new ByProjectKeyQuoteRequestsKeyByKeyRequestBuilder({
      pathArgs: {
        ...this.args.pathArgs,
        ...childPathArgs
      },
      executeRequest: this.args.executeRequest,
      baseUri: this.args.baseUri
    });
  }
  withId(childPathArgs) {
    return new ByProjectKeyQuoteRequestsByIDRequestBuilder({
      pathArgs: {
        ...this.args.pathArgs,
        ...childPathArgs
      },
      executeRequest: this.args.executeRequest,
      baseUri: this.args.baseUri
    });
  }
  get(methodArgs) {
    return new ApiRequest({
      baseUri: this.args.baseUri,
      method: 'GET',
      uriTemplate: '/{projectKey}/quote-requests',
      pathVariables: this.args.pathArgs,
      headers: {
        ...(methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers)
      },
      queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs
    }, this.args.executeRequest);
  }
  post(methodArgs) {
    return new ApiRequest({
      baseUri: this.args.baseUri,
      method: 'POST',
      uriTemplate: '/{projectKey}/quote-requests',
      pathVariables: this.args.pathArgs,
      headers: {
        'Content-Type': 'application/json',
        ...(methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers)
      },
      queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs,
      body: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.body
    }, this.args.executeRequest);
  }
}

/**
 * Code generated by [commercetools RMF-Codegen](https://github.com/commercetools/rmf-codegen). DO NOT EDIT.
 * Please don't change this file manually but run `rmf-codegen generate raml_file_path -o output_path -t typescript_client` to update it.
 * For more information about the commercetools platform APIs, visit https://docs.commercetools.com/.
 */
/**
 **/
class ByProjectKeyQuotesByIDRequestBuilder {
  constructor(args) {
    this.args = args;
  }
  get(methodArgs) {
    return new ApiRequest({
      baseUri: this.args.baseUri,
      method: 'GET',
      uriTemplate: '/{projectKey}/quotes/{ID}',
      pathVariables: this.args.pathArgs,
      headers: {
        ...(methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers)
      },
      queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs
    }, this.args.executeRequest);
  }
  post(methodArgs) {
    return new ApiRequest({
      baseUri: this.args.baseUri,
      method: 'POST',
      uriTemplate: '/{projectKey}/quotes/{ID}',
      pathVariables: this.args.pathArgs,
      headers: {
        'Content-Type': 'application/json',
        ...(methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers)
      },
      queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs,
      body: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.body
    }, this.args.executeRequest);
  }
  delete(methodArgs) {
    return new ApiRequest({
      baseUri: this.args.baseUri,
      method: 'DELETE',
      uriTemplate: '/{projectKey}/quotes/{ID}',
      pathVariables: this.args.pathArgs,
      headers: {
        ...(methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers)
      },
      queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs
    }, this.args.executeRequest);
  }
}

/**
 * Code generated by [commercetools RMF-Codegen](https://github.com/commercetools/rmf-codegen). DO NOT EDIT.
 * Please don't change this file manually but run `rmf-codegen generate raml_file_path -o output_path -t typescript_client` to update it.
 * For more information about the commercetools platform APIs, visit https://docs.commercetools.com/.
 */
/**
 **/
class ByProjectKeyQuotesKeyByKeyRequestBuilder {
  constructor(args) {
    this.args = args;
  }
  get(methodArgs) {
    return new ApiRequest({
      baseUri: this.args.baseUri,
      method: 'GET',
      uriTemplate: '/{projectKey}/quotes/key={key}',
      pathVariables: this.args.pathArgs,
      headers: {
        ...(methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers)
      },
      queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs
    }, this.args.executeRequest);
  }
  post(methodArgs) {
    return new ApiRequest({
      baseUri: this.args.baseUri,
      method: 'POST',
      uriTemplate: '/{projectKey}/quotes/key={key}',
      pathVariables: this.args.pathArgs,
      headers: {
        'Content-Type': 'application/json',
        ...(methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers)
      },
      queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs,
      body: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.body
    }, this.args.executeRequest);
  }
  delete(methodArgs) {
    return new ApiRequest({
      baseUri: this.args.baseUri,
      method: 'DELETE',
      uriTemplate: '/{projectKey}/quotes/key={key}',
      pathVariables: this.args.pathArgs,
      headers: {
        ...(methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers)
      },
      queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs
    }, this.args.executeRequest);
  }
}

/**
 * Code generated by [commercetools RMF-Codegen](https://github.com/commercetools/rmf-codegen). DO NOT EDIT.
 * Please don't change this file manually but run `rmf-codegen generate raml_file_path -o output_path -t typescript_client` to update it.
 * For more information about the commercetools platform APIs, visit https://docs.commercetools.com/.
 */
/**
 **/
class ByProjectKeyQuotesRequestBuilder {
  constructor(args) {
    this.args = args;
  }
  withKey(childPathArgs) {
    return new ByProjectKeyQuotesKeyByKeyRequestBuilder({
      pathArgs: {
        ...this.args.pathArgs,
        ...childPathArgs
      },
      executeRequest: this.args.executeRequest,
      baseUri: this.args.baseUri
    });
  }
  withId(childPathArgs) {
    return new ByProjectKeyQuotesByIDRequestBuilder({
      pathArgs: {
        ...this.args.pathArgs,
        ...childPathArgs
      },
      executeRequest: this.args.executeRequest,
      baseUri: this.args.baseUri
    });
  }
  get(methodArgs) {
    return new ApiRequest({
      baseUri: this.args.baseUri,
      method: 'GET',
      uriTemplate: '/{projectKey}/quotes',
      pathVariables: this.args.pathArgs,
      headers: {
        ...(methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers)
      },
      queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs
    }, this.args.executeRequest);
  }
  post(methodArgs) {
    return new ApiRequest({
      baseUri: this.args.baseUri,
      method: 'POST',
      uriTemplate: '/{projectKey}/quotes',
      pathVariables: this.args.pathArgs,
      headers: {
        'Content-Type': 'application/json',
        ...(methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers)
      },
      queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs,
      body: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.body
    }, this.args.executeRequest);
  }
}

/**
 * Code generated by [commercetools RMF-Codegen](https://github.com/commercetools/rmf-codegen). DO NOT EDIT.
 * Please don't change this file manually but run `rmf-codegen generate raml_file_path -o output_path -t typescript_client` to update it.
 * For more information about the commercetools platform APIs, visit https://docs.commercetools.com/.
 */
/**
 **/
class ByProjectKeyReviewsByIDRequestBuilder {
  constructor(args) {
    this.args = args;
  }
  get(methodArgs) {
    return new ApiRequest({
      baseUri: this.args.baseUri,
      method: 'GET',
      uriTemplate: '/{projectKey}/reviews/{ID}',
      pathVariables: this.args.pathArgs,
      headers: {
        ...(methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers)
      },
      queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs
    }, this.args.executeRequest);
  }
  post(methodArgs) {
    return new ApiRequest({
      baseUri: this.args.baseUri,
      method: 'POST',
      uriTemplate: '/{projectKey}/reviews/{ID}',
      pathVariables: this.args.pathArgs,
      headers: {
        'Content-Type': 'application/json',
        ...(methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers)
      },
      queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs,
      body: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.body
    }, this.args.executeRequest);
  }
  delete(methodArgs) {
    return new ApiRequest({
      baseUri: this.args.baseUri,
      method: 'DELETE',
      uriTemplate: '/{projectKey}/reviews/{ID}',
      pathVariables: this.args.pathArgs,
      headers: {
        ...(methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers)
      },
      queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs
    }, this.args.executeRequest);
  }
}

/**
 * Code generated by [commercetools RMF-Codegen](https://github.com/commercetools/rmf-codegen). DO NOT EDIT.
 * Please don't change this file manually but run `rmf-codegen generate raml_file_path -o output_path -t typescript_client` to update it.
 * For more information about the commercetools platform APIs, visit https://docs.commercetools.com/.
 */
/**
 **/
class ByProjectKeyReviewsKeyByKeyRequestBuilder {
  constructor(args) {
    this.args = args;
  }
  get(methodArgs) {
    return new ApiRequest({
      baseUri: this.args.baseUri,
      method: 'GET',
      uriTemplate: '/{projectKey}/reviews/key={key}',
      pathVariables: this.args.pathArgs,
      headers: {
        ...(methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers)
      },
      queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs
    }, this.args.executeRequest);
  }
  post(methodArgs) {
    return new ApiRequest({
      baseUri: this.args.baseUri,
      method: 'POST',
      uriTemplate: '/{projectKey}/reviews/key={key}',
      pathVariables: this.args.pathArgs,
      headers: {
        'Content-Type': 'application/json',
        ...(methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers)
      },
      queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs,
      body: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.body
    }, this.args.executeRequest);
  }
  delete(methodArgs) {
    return new ApiRequest({
      baseUri: this.args.baseUri,
      method: 'DELETE',
      uriTemplate: '/{projectKey}/reviews/key={key}',
      pathVariables: this.args.pathArgs,
      headers: {
        ...(methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers)
      },
      queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs
    }, this.args.executeRequest);
  }
}

/**
 * Code generated by [commercetools RMF-Codegen](https://github.com/commercetools/rmf-codegen). DO NOT EDIT.
 * Please don't change this file manually but run `rmf-codegen generate raml_file_path -o output_path -t typescript_client` to update it.
 * For more information about the commercetools platform APIs, visit https://docs.commercetools.com/.
 */
/**
 **/
class ByProjectKeyReviewsRequestBuilder {
  constructor(args) {
    this.args = args;
  }
  withKey(childPathArgs) {
    return new ByProjectKeyReviewsKeyByKeyRequestBuilder({
      pathArgs: {
        ...this.args.pathArgs,
        ...childPathArgs
      },
      executeRequest: this.args.executeRequest,
      baseUri: this.args.baseUri
    });
  }
  withId(childPathArgs) {
    return new ByProjectKeyReviewsByIDRequestBuilder({
      pathArgs: {
        ...this.args.pathArgs,
        ...childPathArgs
      },
      executeRequest: this.args.executeRequest,
      baseUri: this.args.baseUri
    });
  }
  get(methodArgs) {
    return new ApiRequest({
      baseUri: this.args.baseUri,
      method: 'GET',
      uriTemplate: '/{projectKey}/reviews',
      pathVariables: this.args.pathArgs,
      headers: {
        ...(methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers)
      },
      queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs
    }, this.args.executeRequest);
  }
  post(methodArgs) {
    return new ApiRequest({
      baseUri: this.args.baseUri,
      method: 'POST',
      uriTemplate: '/{projectKey}/reviews',
      pathVariables: this.args.pathArgs,
      headers: {
        'Content-Type': 'application/json',
        ...(methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers)
      },
      queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs,
      body: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.body
    }, this.args.executeRequest);
  }
}

/**
 * Code generated by [commercetools RMF-Codegen](https://github.com/commercetools/rmf-codegen). DO NOT EDIT.
 * Please don't change this file manually but run `rmf-codegen generate raml_file_path -o output_path -t typescript_client` to update it.
 * For more information about the commercetools platform APIs, visit https://docs.commercetools.com/.
 */
/**
 **/
class ByProjectKeyShippingMethodsMatchingCartLocationRequestBuilder {
  constructor(args) {
    this.args = args;
  }
  /**
   *	Retrieves all the ShippingMethods that can ship to the given [Location](/projects/zones#location)
   *	with a `predicate` that matches the given Cart.
   *	Each ShippingMethod contains exactly one ShippingRate with the flag `isMatching` set to `true`.
   *	This ShippingRate is used when the ShippingMethod is [added to the Cart](ctp:api:type:CartSetShippingMethodAction).
   *
   */
  get(methodArgs) {
    return new ApiRequest({
      baseUri: this.args.baseUri,
      method: 'GET',
      uriTemplate: '/{projectKey}/shipping-methods/matching-cart-location',
      pathVariables: this.args.pathArgs,
      headers: {
        ...(methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers)
      },
      queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs
    }, this.args.executeRequest);
  }
}

/**
 * Code generated by [commercetools RMF-Codegen](https://github.com/commercetools/rmf-codegen). DO NOT EDIT.
 * Please don't change this file manually but run `rmf-codegen generate raml_file_path -o output_path -t typescript_client` to update it.
 * For more information about the commercetools platform APIs, visit https://docs.commercetools.com/.
 */
/**
 **/
class ByProjectKeyShippingMethodsMatchingCartRequestBuilder {
  constructor(args) {
    this.args = args;
  }
  /**
   *	Retrieves all the ShippingMethods that can ship to the shipping address of the given Cart.
   *	Each ShippingMethod contains exactly one ShippingRate with the flag `isMatching` set to `true`.
   *	This ShippingRate is used when the ShippingMethod is [added to the Cart](ctp:api:type:CartSetShippingMethodAction).
   *
   */
  get(methodArgs) {
    return new ApiRequest({
      baseUri: this.args.baseUri,
      method: 'GET',
      uriTemplate: '/{projectKey}/shipping-methods/matching-cart',
      pathVariables: this.args.pathArgs,
      headers: {
        ...(methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers)
      },
      queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs
    }, this.args.executeRequest);
  }
}

/**
 * Code generated by [commercetools RMF-Codegen](https://github.com/commercetools/rmf-codegen). DO NOT EDIT.
 * Please don't change this file manually but run `rmf-codegen generate raml_file_path -o output_path -t typescript_client` to update it.
 * For more information about the commercetools platform APIs, visit https://docs.commercetools.com/.
 */
/**
 **/
class ByProjectKeyShippingMethodsMatchingLocationRequestBuilder {
  constructor(args) {
    this.args = args;
  }
  /**
   *	Retrieves all the ShippingMethods that can ship to the given [Location](/projects/zones#location).
   *	ShippingMethods that have a `predicate` defined are automatically disqualified.
   *	If the `currency` parameter is given, then the ShippingMethods must also have a rate defined in the specified currency.
   *	Each ShippingMethod contains at least one ShippingRate with the flag `isMatching` set to `true`.
   *	If the `currency` parameter is given, exactly one ShippingRate will contain it.
   *
   */
  get(methodArgs) {
    return new ApiRequest({
      baseUri: this.args.baseUri,
      method: 'GET',
      uriTemplate: '/{projectKey}/shipping-methods/matching-location',
      pathVariables: this.args.pathArgs,
      headers: {
        ...(methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers)
      },
      queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs
    }, this.args.executeRequest);
  }
}

/**
 * Code generated by [commercetools RMF-Codegen](https://github.com/commercetools/rmf-codegen). DO NOT EDIT.
 * Please don't change this file manually but run `rmf-codegen generate raml_file_path -o output_path -t typescript_client` to update it.
 * For more information about the commercetools platform APIs, visit https://docs.commercetools.com/.
 */
/**
 **/
class ByProjectKeyShippingMethodsMatchingOrdereditRequestBuilder {
  constructor(args) {
    this.args = args;
  }
  /**
   *	Retrieves all the ShippingMethods that can ship to the given [Location](/../api/projects/zones#location) for an [OrderEdit](/../api/projects/order-edits).
   *
   *	If the OrderEdit preview cannot be generated, an [EditPreviewFailed](ctp:api:type:EditPreviewFailedError) error is returned.
   *
   */
  get(methodArgs) {
    return new ApiRequest({
      baseUri: this.args.baseUri,
      method: 'GET',
      uriTemplate: '/{projectKey}/shipping-methods/matching-orderedit',
      pathVariables: this.args.pathArgs,
      headers: {
        ...(methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers)
      },
      queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs
    }, this.args.executeRequest);
  }
}

/**
 * Code generated by [commercetools RMF-Codegen](https://github.com/commercetools/rmf-codegen). DO NOT EDIT.
 * Please don't change this file manually but run `rmf-codegen generate raml_file_path -o output_path -t typescript_client` to update it.
 * For more information about the commercetools platform APIs, visit https://docs.commercetools.com/.
 */
/**
 **/
class ByProjectKeyShippingMethodsByIDRequestBuilder {
  constructor(args) {
    this.args = args;
  }
  get(methodArgs) {
    return new ApiRequest({
      baseUri: this.args.baseUri,
      method: 'GET',
      uriTemplate: '/{projectKey}/shipping-methods/{ID}',
      pathVariables: this.args.pathArgs,
      headers: {
        ...(methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers)
      },
      queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs
    }, this.args.executeRequest);
  }
  post(methodArgs) {
    return new ApiRequest({
      baseUri: this.args.baseUri,
      method: 'POST',
      uriTemplate: '/{projectKey}/shipping-methods/{ID}',
      pathVariables: this.args.pathArgs,
      headers: {
        'Content-Type': 'application/json',
        ...(methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers)
      },
      queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs,
      body: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.body
    }, this.args.executeRequest);
  }
  delete(methodArgs) {
    return new ApiRequest({
      baseUri: this.args.baseUri,
      method: 'DELETE',
      uriTemplate: '/{projectKey}/shipping-methods/{ID}',
      pathVariables: this.args.pathArgs,
      headers: {
        ...(methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers)
      },
      queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs
    }, this.args.executeRequest);
  }
}

/**
 * Code generated by [commercetools RMF-Codegen](https://github.com/commercetools/rmf-codegen). DO NOT EDIT.
 * Please don't change this file manually but run `rmf-codegen generate raml_file_path -o output_path -t typescript_client` to update it.
 * For more information about the commercetools platform APIs, visit https://docs.commercetools.com/.
 */
/**
 **/
class ByProjectKeyShippingMethodsKeyByKeyRequestBuilder {
  constructor(args) {
    this.args = args;
  }
  get(methodArgs) {
    return new ApiRequest({
      baseUri: this.args.baseUri,
      method: 'GET',
      uriTemplate: '/{projectKey}/shipping-methods/key={key}',
      pathVariables: this.args.pathArgs,
      headers: {
        ...(methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers)
      },
      queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs
    }, this.args.executeRequest);
  }
  post(methodArgs) {
    return new ApiRequest({
      baseUri: this.args.baseUri,
      method: 'POST',
      uriTemplate: '/{projectKey}/shipping-methods/key={key}',
      pathVariables: this.args.pathArgs,
      headers: {
        'Content-Type': 'application/json',
        ...(methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers)
      },
      queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs,
      body: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.body
    }, this.args.executeRequest);
  }
  delete(methodArgs) {
    return new ApiRequest({
      baseUri: this.args.baseUri,
      method: 'DELETE',
      uriTemplate: '/{projectKey}/shipping-methods/key={key}',
      pathVariables: this.args.pathArgs,
      headers: {
        ...(methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers)
      },
      queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs
    }, this.args.executeRequest);
  }
}

/**
 * Code generated by [commercetools RMF-Codegen](https://github.com/commercetools/rmf-codegen). DO NOT EDIT.
 * Please don't change this file manually but run `rmf-codegen generate raml_file_path -o output_path -t typescript_client` to update it.
 * For more information about the commercetools platform APIs, visit https://docs.commercetools.com/.
 */
/**
 **/
class ByProjectKeyShippingMethodsRequestBuilder {
  constructor(args) {
    this.args = args;
  }
  withKey(childPathArgs) {
    return new ByProjectKeyShippingMethodsKeyByKeyRequestBuilder({
      pathArgs: {
        ...this.args.pathArgs,
        ...childPathArgs
      },
      executeRequest: this.args.executeRequest,
      baseUri: this.args.baseUri
    });
  }
  /**
   *	Get ShippingMethods for a cart
   */
  matchingCart() {
    return new ByProjectKeyShippingMethodsMatchingCartRequestBuilder({
      pathArgs: {
        ...this.args.pathArgs
      },
      executeRequest: this.args.executeRequest,
      baseUri: this.args.baseUri
    });
  }
  /**
   *	Get ShippingMethods for a cart and location
   */
  matchingCartLocation() {
    return new ByProjectKeyShippingMethodsMatchingCartLocationRequestBuilder({
      pathArgs: {
        ...this.args.pathArgs
      },
      executeRequest: this.args.executeRequest,
      baseUri: this.args.baseUri
    });
  }
  /**
   *	Get ShippingMethods for an order edit
   */
  matchingOrderedit() {
    return new ByProjectKeyShippingMethodsMatchingOrdereditRequestBuilder({
      pathArgs: {
        ...this.args.pathArgs
      },
      executeRequest: this.args.executeRequest,
      baseUri: this.args.baseUri
    });
  }
  /**
   *	Get ShippingMethods for a location
   */
  matchingLocation() {
    return new ByProjectKeyShippingMethodsMatchingLocationRequestBuilder({
      pathArgs: {
        ...this.args.pathArgs
      },
      executeRequest: this.args.executeRequest,
      baseUri: this.args.baseUri
    });
  }
  withId(childPathArgs) {
    return new ByProjectKeyShippingMethodsByIDRequestBuilder({
      pathArgs: {
        ...this.args.pathArgs,
        ...childPathArgs
      },
      executeRequest: this.args.executeRequest,
      baseUri: this.args.baseUri
    });
  }
  get(methodArgs) {
    return new ApiRequest({
      baseUri: this.args.baseUri,
      method: 'GET',
      uriTemplate: '/{projectKey}/shipping-methods',
      pathVariables: this.args.pathArgs,
      headers: {
        ...(methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers)
      },
      queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs
    }, this.args.executeRequest);
  }
  post(methodArgs) {
    return new ApiRequest({
      baseUri: this.args.baseUri,
      method: 'POST',
      uriTemplate: '/{projectKey}/shipping-methods',
      pathVariables: this.args.pathArgs,
      headers: {
        'Content-Type': 'application/json',
        ...(methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers)
      },
      queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs,
      body: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.body
    }, this.args.executeRequest);
  }
}

/**
 * Code generated by [commercetools RMF-Codegen](https://github.com/commercetools/rmf-codegen). DO NOT EDIT.
 * Please don't change this file manually but run `rmf-codegen generate raml_file_path -o output_path -t typescript_client` to update it.
 * For more information about the commercetools platform APIs, visit https://docs.commercetools.com/.
 */
/**
 **/
class ByProjectKeyShoppingListsByIDRequestBuilder {
  constructor(args) {
    this.args = args;
  }
  get(methodArgs) {
    return new ApiRequest({
      baseUri: this.args.baseUri,
      method: 'GET',
      uriTemplate: '/{projectKey}/shopping-lists/{ID}',
      pathVariables: this.args.pathArgs,
      headers: {
        ...(methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers)
      },
      queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs
    }, this.args.executeRequest);
  }
  post(methodArgs) {
    return new ApiRequest({
      baseUri: this.args.baseUri,
      method: 'POST',
      uriTemplate: '/{projectKey}/shopping-lists/{ID}',
      pathVariables: this.args.pathArgs,
      headers: {
        'Content-Type': 'application/json',
        ...(methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers)
      },
      queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs,
      body: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.body
    }, this.args.executeRequest);
  }
  delete(methodArgs) {
    return new ApiRequest({
      baseUri: this.args.baseUri,
      method: 'DELETE',
      uriTemplate: '/{projectKey}/shopping-lists/{ID}',
      pathVariables: this.args.pathArgs,
      headers: {
        ...(methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers)
      },
      queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs
    }, this.args.executeRequest);
  }
}

/**
 * Code generated by [commercetools RMF-Codegen](https://github.com/commercetools/rmf-codegen). DO NOT EDIT.
 * Please don't change this file manually but run `rmf-codegen generate raml_file_path -o output_path -t typescript_client` to update it.
 * For more information about the commercetools platform APIs, visit https://docs.commercetools.com/.
 */
/**
 **/
class ByProjectKeyShoppingListsKeyByKeyRequestBuilder {
  constructor(args) {
    this.args = args;
  }
  get(methodArgs) {
    return new ApiRequest({
      baseUri: this.args.baseUri,
      method: 'GET',
      uriTemplate: '/{projectKey}/shopping-lists/key={key}',
      pathVariables: this.args.pathArgs,
      headers: {
        ...(methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers)
      },
      queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs
    }, this.args.executeRequest);
  }
  post(methodArgs) {
    return new ApiRequest({
      baseUri: this.args.baseUri,
      method: 'POST',
      uriTemplate: '/{projectKey}/shopping-lists/key={key}',
      pathVariables: this.args.pathArgs,
      headers: {
        'Content-Type': 'application/json',
        ...(methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers)
      },
      queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs,
      body: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.body
    }, this.args.executeRequest);
  }
  delete(methodArgs) {
    return new ApiRequest({
      baseUri: this.args.baseUri,
      method: 'DELETE',
      uriTemplate: '/{projectKey}/shopping-lists/key={key}',
      pathVariables: this.args.pathArgs,
      headers: {
        ...(methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers)
      },
      queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs
    }, this.args.executeRequest);
  }
}

/**
 * Code generated by [commercetools RMF-Codegen](https://github.com/commercetools/rmf-codegen). DO NOT EDIT.
 * Please don't change this file manually but run `rmf-codegen generate raml_file_path -o output_path -t typescript_client` to update it.
 * For more information about the commercetools platform APIs, visit https://docs.commercetools.com/.
 */
/**
 **/
class ByProjectKeyShoppingListsRequestBuilder {
  constructor(args) {
    this.args = args;
  }
  withKey(childPathArgs) {
    return new ByProjectKeyShoppingListsKeyByKeyRequestBuilder({
      pathArgs: {
        ...this.args.pathArgs,
        ...childPathArgs
      },
      executeRequest: this.args.executeRequest,
      baseUri: this.args.baseUri
    });
  }
  withId(childPathArgs) {
    return new ByProjectKeyShoppingListsByIDRequestBuilder({
      pathArgs: {
        ...this.args.pathArgs,
        ...childPathArgs
      },
      executeRequest: this.args.executeRequest,
      baseUri: this.args.baseUri
    });
  }
  get(methodArgs) {
    return new ApiRequest({
      baseUri: this.args.baseUri,
      method: 'GET',
      uriTemplate: '/{projectKey}/shopping-lists',
      pathVariables: this.args.pathArgs,
      headers: {
        ...(methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers)
      },
      queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs
    }, this.args.executeRequest);
  }
  post(methodArgs) {
    return new ApiRequest({
      baseUri: this.args.baseUri,
      method: 'POST',
      uriTemplate: '/{projectKey}/shopping-lists',
      pathVariables: this.args.pathArgs,
      headers: {
        'Content-Type': 'application/json',
        ...(methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers)
      },
      queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs,
      body: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.body
    }, this.args.executeRequest);
  }
}

/**
 * Code generated by [commercetools RMF-Codegen](https://github.com/commercetools/rmf-codegen). DO NOT EDIT.
 * Please don't change this file manually but run `rmf-codegen generate raml_file_path -o output_path -t typescript_client` to update it.
 * For more information about the commercetools platform APIs, visit https://docs.commercetools.com/.
 */
/**
 **/
class ByProjectKeyStagedQuotesByIDRequestBuilder {
  constructor(args) {
    this.args = args;
  }
  get(methodArgs) {
    return new ApiRequest({
      baseUri: this.args.baseUri,
      method: 'GET',
      uriTemplate: '/{projectKey}/staged-quotes/{ID}',
      pathVariables: this.args.pathArgs,
      headers: {
        ...(methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers)
      },
      queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs
    }, this.args.executeRequest);
  }
  post(methodArgs) {
    return new ApiRequest({
      baseUri: this.args.baseUri,
      method: 'POST',
      uriTemplate: '/{projectKey}/staged-quotes/{ID}',
      pathVariables: this.args.pathArgs,
      headers: {
        'Content-Type': 'application/json',
        ...(methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers)
      },
      queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs,
      body: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.body
    }, this.args.executeRequest);
  }
  delete(methodArgs) {
    return new ApiRequest({
      baseUri: this.args.baseUri,
      method: 'DELETE',
      uriTemplate: '/{projectKey}/staged-quotes/{ID}',
      pathVariables: this.args.pathArgs,
      headers: {
        ...(methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers)
      },
      queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs
    }, this.args.executeRequest);
  }
}

/**
 * Code generated by [commercetools RMF-Codegen](https://github.com/commercetools/rmf-codegen). DO NOT EDIT.
 * Please don't change this file manually but run `rmf-codegen generate raml_file_path -o output_path -t typescript_client` to update it.
 * For more information about the commercetools platform APIs, visit https://docs.commercetools.com/.
 */
/**
 **/
class ByProjectKeyStagedQuotesKeyByKeyRequestBuilder {
  constructor(args) {
    this.args = args;
  }
  get(methodArgs) {
    return new ApiRequest({
      baseUri: this.args.baseUri,
      method: 'GET',
      uriTemplate: '/{projectKey}/staged-quotes/key={key}',
      pathVariables: this.args.pathArgs,
      headers: {
        ...(methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers)
      },
      queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs
    }, this.args.executeRequest);
  }
  post(methodArgs) {
    return new ApiRequest({
      baseUri: this.args.baseUri,
      method: 'POST',
      uriTemplate: '/{projectKey}/staged-quotes/key={key}',
      pathVariables: this.args.pathArgs,
      headers: {
        'Content-Type': 'application/json',
        ...(methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers)
      },
      queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs,
      body: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.body
    }, this.args.executeRequest);
  }
  delete(methodArgs) {
    return new ApiRequest({
      baseUri: this.args.baseUri,
      method: 'DELETE',
      uriTemplate: '/{projectKey}/staged-quotes/key={key}',
      pathVariables: this.args.pathArgs,
      headers: {
        ...(methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers)
      },
      queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs
    }, this.args.executeRequest);
  }
}

/**
 * Code generated by [commercetools RMF-Codegen](https://github.com/commercetools/rmf-codegen). DO NOT EDIT.
 * Please don't change this file manually but run `rmf-codegen generate raml_file_path -o output_path -t typescript_client` to update it.
 * For more information about the commercetools platform APIs, visit https://docs.commercetools.com/.
 */
/**
 **/
class ByProjectKeyStagedQuotesRequestBuilder {
  constructor(args) {
    this.args = args;
  }
  withKey(childPathArgs) {
    return new ByProjectKeyStagedQuotesKeyByKeyRequestBuilder({
      pathArgs: {
        ...this.args.pathArgs,
        ...childPathArgs
      },
      executeRequest: this.args.executeRequest,
      baseUri: this.args.baseUri
    });
  }
  withId(childPathArgs) {
    return new ByProjectKeyStagedQuotesByIDRequestBuilder({
      pathArgs: {
        ...this.args.pathArgs,
        ...childPathArgs
      },
      executeRequest: this.args.executeRequest,
      baseUri: this.args.baseUri
    });
  }
  get(methodArgs) {
    return new ApiRequest({
      baseUri: this.args.baseUri,
      method: 'GET',
      uriTemplate: '/{projectKey}/staged-quotes',
      pathVariables: this.args.pathArgs,
      headers: {
        ...(methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers)
      },
      queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs
    }, this.args.executeRequest);
  }
  post(methodArgs) {
    return new ApiRequest({
      baseUri: this.args.baseUri,
      method: 'POST',
      uriTemplate: '/{projectKey}/staged-quotes',
      pathVariables: this.args.pathArgs,
      headers: {
        'Content-Type': 'application/json',
        ...(methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers)
      },
      queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs,
      body: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.body
    }, this.args.executeRequest);
  }
}

/**
 * Code generated by [commercetools RMF-Codegen](https://github.com/commercetools/rmf-codegen). DO NOT EDIT.
 * Please don't change this file manually but run `rmf-codegen generate raml_file_path -o output_path -t typescript_client` to update it.
 * For more information about the commercetools platform APIs, visit https://docs.commercetools.com/.
 */
/**
 **/
class ByProjectKeyStandalonePricesByIDRequestBuilder {
  constructor(args) {
    this.args = args;
  }
  get(methodArgs) {
    return new ApiRequest({
      baseUri: this.args.baseUri,
      method: 'GET',
      uriTemplate: '/{projectKey}/standalone-prices/{ID}',
      pathVariables: this.args.pathArgs,
      headers: {
        ...(methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers)
      },
      queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs
    }, this.args.executeRequest);
  }
  post(methodArgs) {
    return new ApiRequest({
      baseUri: this.args.baseUri,
      method: 'POST',
      uriTemplate: '/{projectKey}/standalone-prices/{ID}',
      pathVariables: this.args.pathArgs,
      headers: {
        'Content-Type': 'application/json',
        ...(methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers)
      },
      queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs,
      body: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.body
    }, this.args.executeRequest);
  }
  /**
   *	Produces the [StandalonePriceDeleted](ctp:api:type:StandalonePriceDeletedMessage) Message.
   *
   */
  delete(methodArgs) {
    return new ApiRequest({
      baseUri: this.args.baseUri,
      method: 'DELETE',
      uriTemplate: '/{projectKey}/standalone-prices/{ID}',
      pathVariables: this.args.pathArgs,
      headers: {
        ...(methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers)
      },
      queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs
    }, this.args.executeRequest);
  }
}

/**
 * Code generated by [commercetools RMF-Codegen](https://github.com/commercetools/rmf-codegen). DO NOT EDIT.
 * Please don't change this file manually but run `rmf-codegen generate raml_file_path -o output_path -t typescript_client` to update it.
 * For more information about the commercetools platform APIs, visit https://docs.commercetools.com/.
 */
/**
 **/
class ByProjectKeyStandalonePricesKeyByKeyRequestBuilder {
  constructor(args) {
    this.args = args;
  }
  get(methodArgs) {
    return new ApiRequest({
      baseUri: this.args.baseUri,
      method: 'GET',
      uriTemplate: '/{projectKey}/standalone-prices/key={key}',
      pathVariables: this.args.pathArgs,
      headers: {
        ...(methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers)
      },
      queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs
    }, this.args.executeRequest);
  }
  post(methodArgs) {
    return new ApiRequest({
      baseUri: this.args.baseUri,
      method: 'POST',
      uriTemplate: '/{projectKey}/standalone-prices/key={key}',
      pathVariables: this.args.pathArgs,
      headers: {
        'Content-Type': 'application/json',
        ...(methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers)
      },
      queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs,
      body: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.body
    }, this.args.executeRequest);
  }
  /**
   *	Produces the [StandalonePriceDeleted](ctp:api:type:StandalonePriceDeletedMessage) Message.
   *
   */
  delete(methodArgs) {
    return new ApiRequest({
      baseUri: this.args.baseUri,
      method: 'DELETE',
      uriTemplate: '/{projectKey}/standalone-prices/key={key}',
      pathVariables: this.args.pathArgs,
      headers: {
        ...(methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers)
      },
      queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs
    }, this.args.executeRequest);
  }
}

/**
 * Code generated by [commercetools RMF-Codegen](https://github.com/commercetools/rmf-codegen). DO NOT EDIT.
 * Please don't change this file manually but run `rmf-codegen generate raml_file_path -o output_path -t typescript_client` to update it.
 * For more information about the commercetools platform APIs, visit https://docs.commercetools.com/.
 */
/**
 **/
class ByProjectKeyStandalonePricesRequestBuilder {
  constructor(args) {
    this.args = args;
  }
  withKey(childPathArgs) {
    return new ByProjectKeyStandalonePricesKeyByKeyRequestBuilder({
      pathArgs: {
        ...this.args.pathArgs,
        ...childPathArgs
      },
      executeRequest: this.args.executeRequest,
      baseUri: this.args.baseUri
    });
  }
  withId(childPathArgs) {
    return new ByProjectKeyStandalonePricesByIDRequestBuilder({
      pathArgs: {
        ...this.args.pathArgs,
        ...childPathArgs
      },
      executeRequest: this.args.executeRequest,
      baseUri: this.args.baseUri
    });
  }
  get(methodArgs) {
    return new ApiRequest({
      baseUri: this.args.baseUri,
      method: 'GET',
      uriTemplate: '/{projectKey}/standalone-prices',
      pathVariables: this.args.pathArgs,
      headers: {
        ...(methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers)
      },
      queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs
    }, this.args.executeRequest);
  }
  /**
   *	Produces the [StandalonePriceCreated](ctp:api:type:StandalonePriceCreatedMessage) Message.
   *
   */
  post(methodArgs) {
    return new ApiRequest({
      baseUri: this.args.baseUri,
      method: 'POST',
      uriTemplate: '/{projectKey}/standalone-prices',
      pathVariables: this.args.pathArgs,
      headers: {
        'Content-Type': 'application/json',
        ...(methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers)
      },
      queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs,
      body: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.body
    }, this.args.executeRequest);
  }
}

/**
 * Code generated by [commercetools RMF-Codegen](https://github.com/commercetools/rmf-codegen). DO NOT EDIT.
 * Please don't change this file manually but run `rmf-codegen generate raml_file_path -o output_path -t typescript_client` to update it.
 * For more information about the commercetools platform APIs, visit https://docs.commercetools.com/.
 */
/**
 **/
class ByProjectKeyStatesByIDRequestBuilder {
  constructor(args) {
    this.args = args;
  }
  get(methodArgs) {
    return new ApiRequest({
      baseUri: this.args.baseUri,
      method: 'GET',
      uriTemplate: '/{projectKey}/states/{ID}',
      pathVariables: this.args.pathArgs,
      headers: {
        ...(methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers)
      },
      queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs
    }, this.args.executeRequest);
  }
  post(methodArgs) {
    return new ApiRequest({
      baseUri: this.args.baseUri,
      method: 'POST',
      uriTemplate: '/{projectKey}/states/{ID}',
      pathVariables: this.args.pathArgs,
      headers: {
        'Content-Type': 'application/json',
        ...(methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers)
      },
      queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs,
      body: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.body
    }, this.args.executeRequest);
  }
  delete(methodArgs) {
    return new ApiRequest({
      baseUri: this.args.baseUri,
      method: 'DELETE',
      uriTemplate: '/{projectKey}/states/{ID}',
      pathVariables: this.args.pathArgs,
      headers: {
        ...(methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers)
      },
      queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs
    }, this.args.executeRequest);
  }
}

/**
 * Code generated by [commercetools RMF-Codegen](https://github.com/commercetools/rmf-codegen). DO NOT EDIT.
 * Please don't change this file manually but run `rmf-codegen generate raml_file_path -o output_path -t typescript_client` to update it.
 * For more information about the commercetools platform APIs, visit https://docs.commercetools.com/.
 */
/**
 **/
class ByProjectKeyStatesKeyByKeyRequestBuilder {
  constructor(args) {
    this.args = args;
  }
  get(methodArgs) {
    return new ApiRequest({
      baseUri: this.args.baseUri,
      method: 'GET',
      uriTemplate: '/{projectKey}/states/key={key}',
      pathVariables: this.args.pathArgs,
      headers: {
        ...(methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers)
      },
      queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs
    }, this.args.executeRequest);
  }
  post(methodArgs) {
    return new ApiRequest({
      baseUri: this.args.baseUri,
      method: 'POST',
      uriTemplate: '/{projectKey}/states/key={key}',
      pathVariables: this.args.pathArgs,
      headers: {
        'Content-Type': 'application/json',
        ...(methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers)
      },
      queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs,
      body: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.body
    }, this.args.executeRequest);
  }
  delete(methodArgs) {
    return new ApiRequest({
      baseUri: this.args.baseUri,
      method: 'DELETE',
      uriTemplate: '/{projectKey}/states/key={key}',
      pathVariables: this.args.pathArgs,
      headers: {
        ...(methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers)
      },
      queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs
    }, this.args.executeRequest);
  }
}

/**
 * Code generated by [commercetools RMF-Codegen](https://github.com/commercetools/rmf-codegen). DO NOT EDIT.
 * Please don't change this file manually but run `rmf-codegen generate raml_file_path -o output_path -t typescript_client` to update it.
 * For more information about the commercetools platform APIs, visit https://docs.commercetools.com/.
 */
/**
 **/
class ByProjectKeyStatesRequestBuilder {
  constructor(args) {
    this.args = args;
  }
  withKey(childPathArgs) {
    return new ByProjectKeyStatesKeyByKeyRequestBuilder({
      pathArgs: {
        ...this.args.pathArgs,
        ...childPathArgs
      },
      executeRequest: this.args.executeRequest,
      baseUri: this.args.baseUri
    });
  }
  withId(childPathArgs) {
    return new ByProjectKeyStatesByIDRequestBuilder({
      pathArgs: {
        ...this.args.pathArgs,
        ...childPathArgs
      },
      executeRequest: this.args.executeRequest,
      baseUri: this.args.baseUri
    });
  }
  get(methodArgs) {
    return new ApiRequest({
      baseUri: this.args.baseUri,
      method: 'GET',
      uriTemplate: '/{projectKey}/states',
      pathVariables: this.args.pathArgs,
      headers: {
        ...(methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers)
      },
      queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs
    }, this.args.executeRequest);
  }
  post(methodArgs) {
    return new ApiRequest({
      baseUri: this.args.baseUri,
      method: 'POST',
      uriTemplate: '/{projectKey}/states',
      pathVariables: this.args.pathArgs,
      headers: {
        'Content-Type': 'application/json',
        ...(methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers)
      },
      queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs,
      body: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.body
    }, this.args.executeRequest);
  }
}

/**
 * Code generated by [commercetools RMF-Codegen](https://github.com/commercetools/rmf-codegen). DO NOT EDIT.
 * Please don't change this file manually but run `rmf-codegen generate raml_file_path -o output_path -t typescript_client` to update it.
 * For more information about the commercetools platform APIs, visit https://docs.commercetools.com/.
 */
/**
 **/
class ByProjectKeyStoresByIDRequestBuilder {
  constructor(args) {
    this.args = args;
  }
  get(methodArgs) {
    return new ApiRequest({
      baseUri: this.args.baseUri,
      method: 'GET',
      uriTemplate: '/{projectKey}/stores/{ID}',
      pathVariables: this.args.pathArgs,
      headers: {
        ...(methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers)
      },
      queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs
    }, this.args.executeRequest);
  }
  post(methodArgs) {
    return new ApiRequest({
      baseUri: this.args.baseUri,
      method: 'POST',
      uriTemplate: '/{projectKey}/stores/{ID}',
      pathVariables: this.args.pathArgs,
      headers: {
        'Content-Type': 'application/json',
        ...(methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers)
      },
      queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs,
      body: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.body
    }, this.args.executeRequest);
  }
  delete(methodArgs) {
    return new ApiRequest({
      baseUri: this.args.baseUri,
      method: 'DELETE',
      uriTemplate: '/{projectKey}/stores/{ID}',
      pathVariables: this.args.pathArgs,
      headers: {
        ...(methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers)
      },
      queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs
    }, this.args.executeRequest);
  }
}

/**
 * Code generated by [commercetools RMF-Codegen](https://github.com/commercetools/rmf-codegen). DO NOT EDIT.
 * Please don't change this file manually but run `rmf-codegen generate raml_file_path -o output_path -t typescript_client` to update it.
 * For more information about the commercetools platform APIs, visit https://docs.commercetools.com/.
 */
/**
 **/
class ByProjectKeyStoresKeyByKeyRequestBuilder {
  constructor(args) {
    this.args = args;
  }
  get(methodArgs) {
    return new ApiRequest({
      baseUri: this.args.baseUri,
      method: 'GET',
      uriTemplate: '/{projectKey}/stores/key={key}',
      pathVariables: this.args.pathArgs,
      headers: {
        ...(methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers)
      },
      queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs
    }, this.args.executeRequest);
  }
  post(methodArgs) {
    return new ApiRequest({
      baseUri: this.args.baseUri,
      method: 'POST',
      uriTemplate: '/{projectKey}/stores/key={key}',
      pathVariables: this.args.pathArgs,
      headers: {
        'Content-Type': 'application/json',
        ...(methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers)
      },
      queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs,
      body: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.body
    }, this.args.executeRequest);
  }
  delete(methodArgs) {
    return new ApiRequest({
      baseUri: this.args.baseUri,
      method: 'DELETE',
      uriTemplate: '/{projectKey}/stores/key={key}',
      pathVariables: this.args.pathArgs,
      headers: {
        ...(methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers)
      },
      queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs
    }, this.args.executeRequest);
  }
}

/**
 * Code generated by [commercetools RMF-Codegen](https://github.com/commercetools/rmf-codegen). DO NOT EDIT.
 * Please don't change this file manually but run `rmf-codegen generate raml_file_path -o output_path -t typescript_client` to update it.
 * For more information about the commercetools platform APIs, visit https://docs.commercetools.com/.
 */
/**
 **/
class ByProjectKeyStoresRequestBuilder {
  constructor(args) {
    this.args = args;
  }
  withKey(childPathArgs) {
    return new ByProjectKeyStoresKeyByKeyRequestBuilder({
      pathArgs: {
        ...this.args.pathArgs,
        ...childPathArgs
      },
      executeRequest: this.args.executeRequest,
      baseUri: this.args.baseUri
    });
  }
  withId(childPathArgs) {
    return new ByProjectKeyStoresByIDRequestBuilder({
      pathArgs: {
        ...this.args.pathArgs,
        ...childPathArgs
      },
      executeRequest: this.args.executeRequest,
      baseUri: this.args.baseUri
    });
  }
  get(methodArgs) {
    return new ApiRequest({
      baseUri: this.args.baseUri,
      method: 'GET',
      uriTemplate: '/{projectKey}/stores',
      pathVariables: this.args.pathArgs,
      headers: {
        ...(methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers)
      },
      queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs
    }, this.args.executeRequest);
  }
  post(methodArgs) {
    return new ApiRequest({
      baseUri: this.args.baseUri,
      method: 'POST',
      uriTemplate: '/{projectKey}/stores',
      pathVariables: this.args.pathArgs,
      headers: {
        'Content-Type': 'application/json',
        ...(methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers)
      },
      queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs,
      body: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.body
    }, this.args.executeRequest);
  }
}

/**
 * Code generated by [commercetools RMF-Codegen](https://github.com/commercetools/rmf-codegen). DO NOT EDIT.
 * Please don't change this file manually but run `rmf-codegen generate raml_file_path -o output_path -t typescript_client` to update it.
 * For more information about the commercetools platform APIs, visit https://docs.commercetools.com/.
 */
/**
 **/
class ByProjectKeySubscriptionsByIDHealthRequestBuilder {
  constructor(args) {
    this.args = args;
  }
  /**
   *	This endpoint can be polled by a monitoring or alerting system that checks the health of your Subscriptions. To ease integration with such systems this endpoint does not require [Authorization](/../api/authorization).
   *
   */
  get(methodArgs) {
    return new ApiRequest({
      baseUri: this.args.baseUri,
      method: 'GET',
      uriTemplate: '/{projectKey}/subscriptions/{ID}/health',
      pathVariables: this.args.pathArgs,
      headers: {
        ...(methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers)
      }
    }, this.args.executeRequest);
  }
}

/**
 * Code generated by [commercetools RMF-Codegen](https://github.com/commercetools/rmf-codegen). DO NOT EDIT.
 * Please don't change this file manually but run `rmf-codegen generate raml_file_path -o output_path -t typescript_client` to update it.
 * For more information about the commercetools platform APIs, visit https://docs.commercetools.com/.
 */
/**
 **/
class ByProjectKeySubscriptionsByIDRequestBuilder {
  constructor(args) {
    this.args = args;
  }
  withIdHealth() {
    return new ByProjectKeySubscriptionsByIDHealthRequestBuilder({
      pathArgs: {
        ...this.args.pathArgs
      },
      executeRequest: this.args.executeRequest,
      baseUri: this.args.baseUri
    });
  }
  get(methodArgs) {
    return new ApiRequest({
      baseUri: this.args.baseUri,
      method: 'GET',
      uriTemplate: '/{projectKey}/subscriptions/{ID}',
      pathVariables: this.args.pathArgs,
      headers: {
        ...(methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers)
      },
      queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs
    }, this.args.executeRequest);
  }
  post(methodArgs) {
    return new ApiRequest({
      baseUri: this.args.baseUri,
      method: 'POST',
      uriTemplate: '/{projectKey}/subscriptions/{ID}',
      pathVariables: this.args.pathArgs,
      headers: {
        'Content-Type': 'application/json',
        ...(methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers)
      },
      queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs,
      body: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.body
    }, this.args.executeRequest);
  }
  delete(methodArgs) {
    return new ApiRequest({
      baseUri: this.args.baseUri,
      method: 'DELETE',
      uriTemplate: '/{projectKey}/subscriptions/{ID}',
      pathVariables: this.args.pathArgs,
      headers: {
        ...(methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers)
      },
      queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs
    }, this.args.executeRequest);
  }
}

/**
 * Code generated by [commercetools RMF-Codegen](https://github.com/commercetools/rmf-codegen). DO NOT EDIT.
 * Please don't change this file manually but run `rmf-codegen generate raml_file_path -o output_path -t typescript_client` to update it.
 * For more information about the commercetools platform APIs, visit https://docs.commercetools.com/.
 */
/**
 **/
class ByProjectKeySubscriptionsKeyByKeyRequestBuilder {
  constructor(args) {
    this.args = args;
  }
  get(methodArgs) {
    return new ApiRequest({
      baseUri: this.args.baseUri,
      method: 'GET',
      uriTemplate: '/{projectKey}/subscriptions/key={key}',
      pathVariables: this.args.pathArgs,
      headers: {
        ...(methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers)
      },
      queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs
    }, this.args.executeRequest);
  }
  post(methodArgs) {
    return new ApiRequest({
      baseUri: this.args.baseUri,
      method: 'POST',
      uriTemplate: '/{projectKey}/subscriptions/key={key}',
      pathVariables: this.args.pathArgs,
      headers: {
        'Content-Type': 'application/json',
        ...(methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers)
      },
      queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs,
      body: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.body
    }, this.args.executeRequest);
  }
  delete(methodArgs) {
    return new ApiRequest({
      baseUri: this.args.baseUri,
      method: 'DELETE',
      uriTemplate: '/{projectKey}/subscriptions/key={key}',
      pathVariables: this.args.pathArgs,
      headers: {
        ...(methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers)
      },
      queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs
    }, this.args.executeRequest);
  }
}

/**
 * Code generated by [commercetools RMF-Codegen](https://github.com/commercetools/rmf-codegen). DO NOT EDIT.
 * Please don't change this file manually but run `rmf-codegen generate raml_file_path -o output_path -t typescript_client` to update it.
 * For more information about the commercetools platform APIs, visit https://docs.commercetools.com/.
 */
/**
 **/
class ByProjectKeySubscriptionsRequestBuilder {
  constructor(args) {
    this.args = args;
  }
  withKey(childPathArgs) {
    return new ByProjectKeySubscriptionsKeyByKeyRequestBuilder({
      pathArgs: {
        ...this.args.pathArgs,
        ...childPathArgs
      },
      executeRequest: this.args.executeRequest,
      baseUri: this.args.baseUri
    });
  }
  withId(childPathArgs) {
    return new ByProjectKeySubscriptionsByIDRequestBuilder({
      pathArgs: {
        ...this.args.pathArgs,
        ...childPathArgs
      },
      executeRequest: this.args.executeRequest,
      baseUri: this.args.baseUri
    });
  }
  get(methodArgs) {
    return new ApiRequest({
      baseUri: this.args.baseUri,
      method: 'GET',
      uriTemplate: '/{projectKey}/subscriptions',
      pathVariables: this.args.pathArgs,
      headers: {
        ...(methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers)
      },
      queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs
    }, this.args.executeRequest);
  }
  /**
   *	A test message is sent to ensure the correct configuration of the Destination. If the message cannot be delivered, the Subscription will not be created. The payload of the test message is a notification of type [ResourceCreated](/../api/projects/subscriptions#resourcecreateddeliverypayload) for the `resourceTypeId` `subscription`.
   *
   */
  post(methodArgs) {
    return new ApiRequest({
      baseUri: this.args.baseUri,
      method: 'POST',
      uriTemplate: '/{projectKey}/subscriptions',
      pathVariables: this.args.pathArgs,
      headers: {
        'Content-Type': 'application/json',
        ...(methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers)
      },
      queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs,
      body: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.body
    }, this.args.executeRequest);
  }
}

/**
 * Code generated by [commercetools RMF-Codegen](https://github.com/commercetools/rmf-codegen). DO NOT EDIT.
 * Please don't change this file manually but run `rmf-codegen generate raml_file_path -o output_path -t typescript_client` to update it.
 * For more information about the commercetools platform APIs, visit https://docs.commercetools.com/.
 */
/**
 **/
class ByProjectKeyTaxCategoriesByIDRequestBuilder {
  constructor(args) {
    this.args = args;
  }
  get(methodArgs) {
    return new ApiRequest({
      baseUri: this.args.baseUri,
      method: 'GET',
      uriTemplate: '/{projectKey}/tax-categories/{ID}',
      pathVariables: this.args.pathArgs,
      headers: {
        ...(methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers)
      },
      queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs
    }, this.args.executeRequest);
  }
  post(methodArgs) {
    return new ApiRequest({
      baseUri: this.args.baseUri,
      method: 'POST',
      uriTemplate: '/{projectKey}/tax-categories/{ID}',
      pathVariables: this.args.pathArgs,
      headers: {
        'Content-Type': 'application/json',
        ...(methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers)
      },
      queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs,
      body: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.body
    }, this.args.executeRequest);
  }
  delete(methodArgs) {
    return new ApiRequest({
      baseUri: this.args.baseUri,
      method: 'DELETE',
      uriTemplate: '/{projectKey}/tax-categories/{ID}',
      pathVariables: this.args.pathArgs,
      headers: {
        ...(methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers)
      },
      queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs
    }, this.args.executeRequest);
  }
}

/**
 * Code generated by [commercetools RMF-Codegen](https://github.com/commercetools/rmf-codegen). DO NOT EDIT.
 * Please don't change this file manually but run `rmf-codegen generate raml_file_path -o output_path -t typescript_client` to update it.
 * For more information about the commercetools platform APIs, visit https://docs.commercetools.com/.
 */
/**
 **/
class ByProjectKeyTaxCategoriesKeyByKeyRequestBuilder {
  constructor(args) {
    this.args = args;
  }
  get(methodArgs) {
    return new ApiRequest({
      baseUri: this.args.baseUri,
      method: 'GET',
      uriTemplate: '/{projectKey}/tax-categories/key={key}',
      pathVariables: this.args.pathArgs,
      headers: {
        ...(methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers)
      },
      queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs
    }, this.args.executeRequest);
  }
  post(methodArgs) {
    return new ApiRequest({
      baseUri: this.args.baseUri,
      method: 'POST',
      uriTemplate: '/{projectKey}/tax-categories/key={key}',
      pathVariables: this.args.pathArgs,
      headers: {
        'Content-Type': 'application/json',
        ...(methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers)
      },
      queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs,
      body: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.body
    }, this.args.executeRequest);
  }
  delete(methodArgs) {
    return new ApiRequest({
      baseUri: this.args.baseUri,
      method: 'DELETE',
      uriTemplate: '/{projectKey}/tax-categories/key={key}',
      pathVariables: this.args.pathArgs,
      headers: {
        ...(methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers)
      },
      queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs
    }, this.args.executeRequest);
  }
}

/**
 * Code generated by [commercetools RMF-Codegen](https://github.com/commercetools/rmf-codegen). DO NOT EDIT.
 * Please don't change this file manually but run `rmf-codegen generate raml_file_path -o output_path -t typescript_client` to update it.
 * For more information about the commercetools platform APIs, visit https://docs.commercetools.com/.
 */
/**
 **/
class ByProjectKeyTaxCategoriesRequestBuilder {
  constructor(args) {
    this.args = args;
  }
  withKey(childPathArgs) {
    return new ByProjectKeyTaxCategoriesKeyByKeyRequestBuilder({
      pathArgs: {
        ...this.args.pathArgs,
        ...childPathArgs
      },
      executeRequest: this.args.executeRequest,
      baseUri: this.args.baseUri
    });
  }
  withId(childPathArgs) {
    return new ByProjectKeyTaxCategoriesByIDRequestBuilder({
      pathArgs: {
        ...this.args.pathArgs,
        ...childPathArgs
      },
      executeRequest: this.args.executeRequest,
      baseUri: this.args.baseUri
    });
  }
  get(methodArgs) {
    return new ApiRequest({
      baseUri: this.args.baseUri,
      method: 'GET',
      uriTemplate: '/{projectKey}/tax-categories',
      pathVariables: this.args.pathArgs,
      headers: {
        ...(methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers)
      },
      queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs
    }, this.args.executeRequest);
  }
  post(methodArgs) {
    return new ApiRequest({
      baseUri: this.args.baseUri,
      method: 'POST',
      uriTemplate: '/{projectKey}/tax-categories',
      pathVariables: this.args.pathArgs,
      headers: {
        'Content-Type': 'application/json',
        ...(methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers)
      },
      queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs,
      body: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.body
    }, this.args.executeRequest);
  }
}

/**
 * Code generated by [commercetools RMF-Codegen](https://github.com/commercetools/rmf-codegen). DO NOT EDIT.
 * Please don't change this file manually but run `rmf-codegen generate raml_file_path -o output_path -t typescript_client` to update it.
 * For more information about the commercetools platform APIs, visit https://docs.commercetools.com/.
 */
/**
 **/
class ByProjectKeyTypesByIDRequestBuilder {
  constructor(args) {
    this.args = args;
  }
  get(methodArgs) {
    return new ApiRequest({
      baseUri: this.args.baseUri,
      method: 'GET',
      uriTemplate: '/{projectKey}/types/{ID}',
      pathVariables: this.args.pathArgs,
      headers: {
        ...(methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers)
      },
      queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs
    }, this.args.executeRequest);
  }
  post(methodArgs) {
    return new ApiRequest({
      baseUri: this.args.baseUri,
      method: 'POST',
      uriTemplate: '/{projectKey}/types/{ID}',
      pathVariables: this.args.pathArgs,
      headers: {
        'Content-Type': 'application/json',
        ...(methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers)
      },
      queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs,
      body: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.body
    }, this.args.executeRequest);
  }
  delete(methodArgs) {
    return new ApiRequest({
      baseUri: this.args.baseUri,
      method: 'DELETE',
      uriTemplate: '/{projectKey}/types/{ID}',
      pathVariables: this.args.pathArgs,
      headers: {
        ...(methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers)
      },
      queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs
    }, this.args.executeRequest);
  }
}

/**
 * Code generated by [commercetools RMF-Codegen](https://github.com/commercetools/rmf-codegen). DO NOT EDIT.
 * Please don't change this file manually but run `rmf-codegen generate raml_file_path -o output_path -t typescript_client` to update it.
 * For more information about the commercetools platform APIs, visit https://docs.commercetools.com/.
 */
/**
 **/
class ByProjectKeyTypesKeyByKeyRequestBuilder {
  constructor(args) {
    this.args = args;
  }
  get(methodArgs) {
    return new ApiRequest({
      baseUri: this.args.baseUri,
      method: 'GET',
      uriTemplate: '/{projectKey}/types/key={key}',
      pathVariables: this.args.pathArgs,
      headers: {
        ...(methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers)
      },
      queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs
    }, this.args.executeRequest);
  }
  post(methodArgs) {
    return new ApiRequest({
      baseUri: this.args.baseUri,
      method: 'POST',
      uriTemplate: '/{projectKey}/types/key={key}',
      pathVariables: this.args.pathArgs,
      headers: {
        'Content-Type': 'application/json',
        ...(methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers)
      },
      queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs,
      body: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.body
    }, this.args.executeRequest);
  }
  delete(methodArgs) {
    return new ApiRequest({
      baseUri: this.args.baseUri,
      method: 'DELETE',
      uriTemplate: '/{projectKey}/types/key={key}',
      pathVariables: this.args.pathArgs,
      headers: {
        ...(methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers)
      },
      queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs
    }, this.args.executeRequest);
  }
}

/**
 * Code generated by [commercetools RMF-Codegen](https://github.com/commercetools/rmf-codegen). DO NOT EDIT.
 * Please don't change this file manually but run `rmf-codegen generate raml_file_path -o output_path -t typescript_client` to update it.
 * For more information about the commercetools platform APIs, visit https://docs.commercetools.com/.
 */
/**
 **/
class ByProjectKeyTypesRequestBuilder {
  constructor(args) {
    this.args = args;
  }
  withKey(childPathArgs) {
    return new ByProjectKeyTypesKeyByKeyRequestBuilder({
      pathArgs: {
        ...this.args.pathArgs,
        ...childPathArgs
      },
      executeRequest: this.args.executeRequest,
      baseUri: this.args.baseUri
    });
  }
  withId(childPathArgs) {
    return new ByProjectKeyTypesByIDRequestBuilder({
      pathArgs: {
        ...this.args.pathArgs,
        ...childPathArgs
      },
      executeRequest: this.args.executeRequest,
      baseUri: this.args.baseUri
    });
  }
  get(methodArgs) {
    return new ApiRequest({
      baseUri: this.args.baseUri,
      method: 'GET',
      uriTemplate: '/{projectKey}/types',
      pathVariables: this.args.pathArgs,
      headers: {
        ...(methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers)
      },
      queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs
    }, this.args.executeRequest);
  }
  post(methodArgs) {
    return new ApiRequest({
      baseUri: this.args.baseUri,
      method: 'POST',
      uriTemplate: '/{projectKey}/types',
      pathVariables: this.args.pathArgs,
      headers: {
        'Content-Type': 'application/json',
        ...(methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers)
      },
      queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs,
      body: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.body
    }, this.args.executeRequest);
  }
}

/**
 * Code generated by [commercetools RMF-Codegen](https://github.com/commercetools/rmf-codegen). DO NOT EDIT.
 * Please don't change this file manually but run `rmf-codegen generate raml_file_path -o output_path -t typescript_client` to update it.
 * For more information about the commercetools platform APIs, visit https://docs.commercetools.com/.
 */
/**
 **/
class ByProjectKeyZonesByIDRequestBuilder {
  constructor(args) {
    this.args = args;
  }
  get(methodArgs) {
    return new ApiRequest({
      baseUri: this.args.baseUri,
      method: 'GET',
      uriTemplate: '/{projectKey}/zones/{ID}',
      pathVariables: this.args.pathArgs,
      headers: {
        ...(methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers)
      },
      queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs
    }, this.args.executeRequest);
  }
  post(methodArgs) {
    return new ApiRequest({
      baseUri: this.args.baseUri,
      method: 'POST',
      uriTemplate: '/{projectKey}/zones/{ID}',
      pathVariables: this.args.pathArgs,
      headers: {
        'Content-Type': 'application/json',
        ...(methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers)
      },
      queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs,
      body: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.body
    }, this.args.executeRequest);
  }
  delete(methodArgs) {
    return new ApiRequest({
      baseUri: this.args.baseUri,
      method: 'DELETE',
      uriTemplate: '/{projectKey}/zones/{ID}',
      pathVariables: this.args.pathArgs,
      headers: {
        ...(methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers)
      },
      queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs
    }, this.args.executeRequest);
  }
}

/**
 * Code generated by [commercetools RMF-Codegen](https://github.com/commercetools/rmf-codegen). DO NOT EDIT.
 * Please don't change this file manually but run `rmf-codegen generate raml_file_path -o output_path -t typescript_client` to update it.
 * For more information about the commercetools platform APIs, visit https://docs.commercetools.com/.
 */
/**
 **/
class ByProjectKeyZonesKeyByKeyRequestBuilder {
  constructor(args) {
    this.args = args;
  }
  get(methodArgs) {
    return new ApiRequest({
      baseUri: this.args.baseUri,
      method: 'GET',
      uriTemplate: '/{projectKey}/zones/key={key}',
      pathVariables: this.args.pathArgs,
      headers: {
        ...(methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers)
      },
      queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs
    }, this.args.executeRequest);
  }
  post(methodArgs) {
    return new ApiRequest({
      baseUri: this.args.baseUri,
      method: 'POST',
      uriTemplate: '/{projectKey}/zones/key={key}',
      pathVariables: this.args.pathArgs,
      headers: {
        'Content-Type': 'application/json',
        ...(methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers)
      },
      queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs,
      body: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.body
    }, this.args.executeRequest);
  }
  delete(methodArgs) {
    return new ApiRequest({
      baseUri: this.args.baseUri,
      method: 'DELETE',
      uriTemplate: '/{projectKey}/zones/key={key}',
      pathVariables: this.args.pathArgs,
      headers: {
        ...(methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers)
      },
      queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs
    }, this.args.executeRequest);
  }
}

/**
 * Code generated by [commercetools RMF-Codegen](https://github.com/commercetools/rmf-codegen). DO NOT EDIT.
 * Please don't change this file manually but run `rmf-codegen generate raml_file_path -o output_path -t typescript_client` to update it.
 * For more information about the commercetools platform APIs, visit https://docs.commercetools.com/.
 */
/**
 **/
class ByProjectKeyZonesRequestBuilder {
  constructor(args) {
    this.args = args;
  }
  withKey(childPathArgs) {
    return new ByProjectKeyZonesKeyByKeyRequestBuilder({
      pathArgs: {
        ...this.args.pathArgs,
        ...childPathArgs
      },
      executeRequest: this.args.executeRequest,
      baseUri: this.args.baseUri
    });
  }
  withId(childPathArgs) {
    return new ByProjectKeyZonesByIDRequestBuilder({
      pathArgs: {
        ...this.args.pathArgs,
        ...childPathArgs
      },
      executeRequest: this.args.executeRequest,
      baseUri: this.args.baseUri
    });
  }
  get(methodArgs) {
    return new ApiRequest({
      baseUri: this.args.baseUri,
      method: 'GET',
      uriTemplate: '/{projectKey}/zones',
      pathVariables: this.args.pathArgs,
      headers: {
        ...(methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers)
      },
      queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs
    }, this.args.executeRequest);
  }
  post(methodArgs) {
    return new ApiRequest({
      baseUri: this.args.baseUri,
      method: 'POST',
      uriTemplate: '/{projectKey}/zones',
      pathVariables: this.args.pathArgs,
      headers: {
        'Content-Type': 'application/json',
        ...(methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers)
      },
      queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs,
      body: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.body
    }, this.args.executeRequest);
  }
}

/**
 * Code generated by [commercetools RMF-Codegen](https://github.com/commercetools/rmf-codegen). DO NOT EDIT.
 * Please don't change this file manually but run `rmf-codegen generate raml_file_path -o output_path -t typescript_client` to update it.
 * For more information about the commercetools platform APIs, visit https://docs.commercetools.com/.
 */
/**
 **/
class ByProjectKeyRequestBuilder {
  constructor(args) {
    this.args = args;
  }
  asAssociate() {
    return new ByProjectKeyAsAssociateRequestBuilder({
      pathArgs: {
        ...this.args.pathArgs
      },
      executeRequest: this.args.executeRequest,
      baseUri: this.args.baseUri
    });
  }
  /**
   *	An Associate Role enables permissions over a Business Unit to an Associate.
   */
  associateRoles() {
    return new ByProjectKeyAssociateRolesRequestBuilder({
      pathArgs: {
        ...this.args.pathArgs
      },
      executeRequest: this.args.executeRequest,
      baseUri: this.args.baseUri
    });
  }
  /**
   *	A Business Unit can represent a Company or a Division.
   */
  businessUnits() {
    return new ByProjectKeyBusinessUnitsRequestBuilder({
      pathArgs: {
        ...this.args.pathArgs
      },
      executeRequest: this.args.executeRequest,
      baseUri: this.args.baseUri
    });
  }
  /**
   *	Categories are used to organize products in a hierarchical structure.
   */
  categories() {
    return new ByProjectKeyCategoriesRequestBuilder({
      pathArgs: {
        ...this.args.pathArgs
      },
      executeRequest: this.args.executeRequest,
      baseUri: this.args.baseUri
    });
  }
  /**
   *	A shopping cart holds product variants and can be ordered.
   */
  carts() {
    return new ByProjectKeyCartsRequestBuilder({
      pathArgs: {
        ...this.args.pathArgs
      },
      executeRequest: this.args.executeRequest,
      baseUri: this.args.baseUri
    });
  }
  /**
   *	Cart discounts are used to change the prices of different elements within a cart.
   */
  cartDiscounts() {
    return new ByProjectKeyCartDiscountsRequestBuilder({
      pathArgs: {
        ...this.args.pathArgs
      },
      executeRequest: this.args.executeRequest,
      baseUri: this.args.baseUri
    });
  }
  /**
   *	Channels represent a source or destination of different entities. They can be used to model warehouses or stores.
   *
   */
  channels() {
    return new ByProjectKeyChannelsRequestBuilder({
      pathArgs: {
        ...this.args.pathArgs
      },
      executeRequest: this.args.executeRequest,
      baseUri: this.args.baseUri
    });
  }
  /**
   *	A Customer is a person purchasing products. Carts, Orders, Quotes, Reviews and Payments can be associated to a Customer.
   *
   */
  customers() {
    return new ByProjectKeyCustomersRequestBuilder({
      pathArgs: {
        ...this.args.pathArgs
      },
      executeRequest: this.args.executeRequest,
      baseUri: this.args.baseUri
    });
  }
  /**
   *	customer-groups are used to evaluate products and channels.
   */
  customerGroups() {
    return new ByProjectKeyCustomerGroupsRequestBuilder({
      pathArgs: {
        ...this.args.pathArgs
      },
      executeRequest: this.args.executeRequest,
      baseUri: this.args.baseUri
    });
  }
  /**
   *	Store custom JSON values.
   */
  customObjects() {
    return new ByProjectKeyCustomObjectsRequestBuilder({
      pathArgs: {
        ...this.args.pathArgs
      },
      executeRequest: this.args.executeRequest,
      baseUri: this.args.baseUri
    });
  }
  /**
   *	Discount Codes can be added to a discount-code to enable certain discount-code discounts.
   */
  discountCodes() {
    return new ByProjectKeyDiscountCodesRequestBuilder({
      pathArgs: {
        ...this.args.pathArgs
      },
      executeRequest: this.args.executeRequest,
      baseUri: this.args.baseUri
    });
  }
  /**
   *	commercetools Composable Commerce provides a GraphQL API
   */
  graphql() {
    return new ByProjectKeyGraphqlRequestBuilder({
      pathArgs: {
        ...this.args.pathArgs
      },
      executeRequest: this.args.executeRequest,
      baseUri: this.args.baseUri
    });
  }
  /**
   *	Inventory allows you to track stock quantities.
   */
  inventory() {
    return new ByProjectKeyInventoryRequestBuilder({
      pathArgs: {
        ...this.args.pathArgs
      },
      executeRequest: this.args.executeRequest,
      baseUri: this.args.baseUri
    });
  }
  /**
   *	Retrieves the authenticated customer.
   */
  login() {
    return new ByProjectKeyLoginRequestBuilder({
      pathArgs: {
        ...this.args.pathArgs
      },
      executeRequest: this.args.executeRequest,
      baseUri: this.args.baseUri
    });
  }
  /**
   *	A message represents a change or an action performed on a resource (like an Order or a Product).
   */
  messages() {
    return new ByProjectKeyMessagesRequestBuilder({
      pathArgs: {
        ...this.args.pathArgs
      },
      executeRequest: this.args.executeRequest,
      baseUri: this.args.baseUri
    });
  }
  /**
   *	An order can be created from a order, usually after a checkout process has been completed.
   */
  orders() {
    return new ByProjectKeyOrdersRequestBuilder({
      pathArgs: {
        ...this.args.pathArgs
      },
      executeRequest: this.args.executeRequest,
      baseUri: this.args.baseUri
    });
  }
  /**
   *	Payments hold information about the current state of receiving and/or refunding money
   */
  payments() {
    return new ByProjectKeyPaymentsRequestBuilder({
      pathArgs: {
        ...this.args.pathArgs
      },
      executeRequest: this.args.executeRequest,
      baseUri: this.args.baseUri
    });
  }
  /**
   *	Products themselves are not sellable. Instead, they act as a parent structure for sellable Product Variants.
   *
   */
  products() {
    return new ByProjectKeyProductsRequestBuilder({
      pathArgs: {
        ...this.args.pathArgs
      },
      executeRequest: this.args.executeRequest,
      baseUri: this.args.baseUri
    });
  }
  /**
   *	Product discounts are used to change certain product prices.
   */
  productDiscounts() {
    return new ByProjectKeyProductDiscountsRequestBuilder({
      pathArgs: {
        ...this.args.pathArgs
      },
      executeRequest: this.args.executeRequest,
      baseUri: this.args.baseUri
    });
  }
  /**
   *	A projected representation of a product shows the product with its current or staged data. The current or staged
   *	representation of a product in a catalog is called a product projection.
   *
   */
  productProjections() {
    return new ByProjectKeyProductProjectionsRequestBuilder({
      pathArgs: {
        ...this.args.pathArgs
      },
      executeRequest: this.args.executeRequest,
      baseUri: this.args.baseUri
    });
  }
  /**
   *	Manage individual Store assortments through Product Selections.
   *
   *	After you have created Product Selections and populated them with Products,
   *	you can manage Store assortments by assigning Product Selections to Stores.
   *	Product Selections may be used by a single Store or shared across several Stores.
   *
   *	As a good practice, we recommend first creating Products in the project, and then creating Product Selection.
   *
   */
  productSelections() {
    return new ByProjectKeyProductSelectionsRequestBuilder({
      pathArgs: {
        ...this.args.pathArgs
      },
      executeRequest: this.args.executeRequest,
      baseUri: this.args.baseUri
    });
  }
  /**
   *	Product Types are used to describe common characteristics, most importantly common custom attributes,
   *	of many concrete products.
   *
   */
  productTypes() {
    return new ByProjectKeyProductTypesRequestBuilder({
      pathArgs: {
        ...this.args.pathArgs
      },
      executeRequest: this.args.executeRequest,
      baseUri: this.args.baseUri
    });
  }
  /**
   *	A quote holds the negotiated offer.
   */
  quotes() {
    return new ByProjectKeyQuotesRequestBuilder({
      pathArgs: {
        ...this.args.pathArgs
      },
      executeRequest: this.args.executeRequest,
      baseUri: this.args.baseUri
    });
  }
  /**
   *	A request for a Quote holds product variants and can be ordered.
   */
  quoteRequests() {
    return new ByProjectKeyQuoteRequestsRequestBuilder({
      pathArgs: {
        ...this.args.pathArgs
      },
      executeRequest: this.args.executeRequest,
      baseUri: this.args.baseUri
    });
  }
  /**
   *	A staged quote holds the negotiation between the [Buyer](/../api/quotes-overview#buyer) and the [Seller](/../api/quotes-overview#seller).
   */
  stagedQuotes() {
    return new ByProjectKeyStagedQuotesRequestBuilder({
      pathArgs: {
        ...this.args.pathArgs
      },
      executeRequest: this.args.executeRequest,
      baseUri: this.args.baseUri
    });
  }
  /**
   *	Reviews are used to evaluate products and channels.
   */
  reviews() {
    return new ByProjectKeyReviewsRequestBuilder({
      pathArgs: {
        ...this.args.pathArgs
      },
      executeRequest: this.args.executeRequest,
      baseUri: this.args.baseUri
    });
  }
  /**
   *	ShippingMethods define where orders can be shipped and what the costs are.
   */
  shippingMethods() {
    return new ByProjectKeyShippingMethodsRequestBuilder({
      pathArgs: {
        ...this.args.pathArgs
      },
      executeRequest: this.args.executeRequest,
      baseUri: this.args.baseUri
    });
  }
  /**
   *	shopping-lists e.g. for wishlist support
   */
  shoppingLists() {
    return new ByProjectKeyShoppingListsRequestBuilder({
      pathArgs: {
        ...this.args.pathArgs
      },
      executeRequest: this.args.executeRequest,
      baseUri: this.args.baseUri
    });
  }
  /**
   *	commercetools Composable Commerce allows you to model states of certain objects, such as orders, line items, products,
   *	reviews, and payments in order to define finite state machines reflecting the business logic you'd like to
   *	implement.
   *
   */
  states() {
    return new ByProjectKeyStatesRequestBuilder({
      pathArgs: {
        ...this.args.pathArgs
      },
      executeRequest: this.args.executeRequest,
      baseUri: this.args.baseUri
    });
  }
  /**
   *	Subscriptions allow you to be notified of new messages or changes via a Message Queue of your choice
   */
  subscriptions() {
    return new ByProjectKeySubscriptionsRequestBuilder({
      pathArgs: {
        ...this.args.pathArgs
      },
      executeRequest: this.args.executeRequest,
      baseUri: this.args.baseUri
    });
  }
  /**
   *	Tax Categories define how products are to be taxed in different countries.
   */
  taxCategories() {
    return new ByProjectKeyTaxCategoriesRequestBuilder({
      pathArgs: {
        ...this.args.pathArgs
      },
      executeRequest: this.args.executeRequest,
      baseUri: this.args.baseUri
    });
  }
  /**
   *	Types define custom fields that are used to enhance resources as you need.
   */
  types() {
    return new ByProjectKeyTypesRequestBuilder({
      pathArgs: {
        ...this.args.pathArgs
      },
      executeRequest: this.args.executeRequest,
      baseUri: this.args.baseUri
    });
  }
  /**
   *	Zones allow defining ShippingRates for specific Locations.
   */
  zones() {
    return new ByProjectKeyZonesRequestBuilder({
      pathArgs: {
        ...this.args.pathArgs
      },
      executeRequest: this.args.executeRequest,
      baseUri: this.args.baseUri
    });
  }
  me() {
    return new ByProjectKeyMeRequestBuilder({
      pathArgs: {
        ...this.args.pathArgs
      },
      executeRequest: this.args.executeRequest,
      baseUri: this.args.baseUri
    });
  }
  /**
   *	Extend the behavior of an API with your business logic
   */
  extensions() {
    return new ByProjectKeyExtensionsRequestBuilder({
      pathArgs: {
        ...this.args.pathArgs
      },
      executeRequest: this.args.executeRequest,
      baseUri: this.args.baseUri
    });
  }
  /**
   *	Manage your API Clients via an API. Useful for Infrastructure-as-Code tooling, and regularly rotating API secrets.
   *
   */
  apiClients() {
    return new ByProjectKeyApiClientsRequestBuilder({
      pathArgs: {
        ...this.args.pathArgs
      },
      executeRequest: this.args.executeRequest,
      baseUri: this.args.baseUri
    });
  }
  /**
   *	Stores let you model the context your customers shop in.
   */
  stores() {
    return new ByProjectKeyStoresRequestBuilder({
      pathArgs: {
        ...this.args.pathArgs
      },
      executeRequest: this.args.executeRequest,
      baseUri: this.args.baseUri
    });
  }
  inStoreKeyWithStoreKeyValue(childPathArgs) {
    return new ByProjectKeyInStoreKeyByStoreKeyRequestBuilder({
      pathArgs: {
        ...this.args.pathArgs,
        ...childPathArgs
      },
      executeRequest: this.args.executeRequest,
      baseUri: this.args.baseUri
    });
  }
  /**
   *	A standalone price assigns a price to a product variant for a given scope. The API will use the standalone prices associated with a Product if its field [`priceMode`](/projects/products#pricemode) is set to `Standalone` [ProductPriceMode](ctp:api:type:ProductPriceModeEnum).
   */
  standalonePrices() {
    return new ByProjectKeyStandalonePricesRequestBuilder({
      pathArgs: {
        ...this.args.pathArgs
      },
      executeRequest: this.args.executeRequest,
      baseUri: this.args.baseUri
    });
  }
  inBusinessUnitKeyWithBusinessUnitKeyValue(childPathArgs) {
    return new ByProjectKeyInBusinessUnitKeyByBusinessUnitKeyRequestBuilder({
      pathArgs: {
        ...this.args.pathArgs,
        ...childPathArgs
      },
      executeRequest: this.args.executeRequest,
      baseUri: this.args.baseUri
    });
  }
  /**
   *	Attribute groups ... TODO
   */
  attributeGroups() {
    return new ByProjectKeyAttributeGroupsRequestBuilder({
      pathArgs: {
        ...this.args.pathArgs
      },
      executeRequest: this.args.executeRequest,
      baseUri: this.args.baseUri
    });
  }
  get(methodArgs) {
    return new ApiRequest({
      baseUri: this.args.baseUri,
      method: 'GET',
      uriTemplate: '/{projectKey}',
      pathVariables: this.args.pathArgs,
      headers: {
        ...(methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers)
      }
    }, this.args.executeRequest);
  }
  post(methodArgs) {
    return new ApiRequest({
      baseUri: this.args.baseUri,
      method: 'POST',
      uriTemplate: '/{projectKey}',
      pathVariables: this.args.pathArgs,
      headers: {
        'Content-Type': 'application/json',
        ...(methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers)
      },
      body: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.body
    }, this.args.executeRequest);
  }
}

class ApiRoot {
  constructor(args) {
    _defineProperty(this, "executeRequest", void 0);
    _defineProperty(this, "baseUri", void 0);
    this.executeRequest = args.executeRequest;
    this.baseUri = args.baseUri || 'https://api.europe-west1.gcp.commercetools.com';
  }

  /**
   *	The Project endpoint is used to retrieve certain information from a project.
   */
  withProjectKey(childPathArgs) {
    return new ByProjectKeyRequestBuilder({
      pathArgs: {
        ...childPathArgs
      },
      executeRequest: this.executeRequest,
      baseUri: this.baseUri
    });
  }
}

/**
 * Code generated by [commercetools RMF-Codegen](https://github.com/commercetools/rmf-codegen). DO NOT EDIT.
 * Please don't change this file manually but run `rmf-codegen generate <raml_file_path> -o <output_path> -t typescript_client` to update it.
 * For more information about the commercetools platform APIs, visit https://docs.commercetools.com/.
 */

const createExecutorFromMiddlewares = (executor, midds) => {
  if (!midds || midds.length == 0) {
    return executor;
  }
  const reduced = midds.reduce(reduceMiddleware);
  return middlewareToExecutor(reduced, executor);
};
function reduceMiddleware(middleware1, middleware2) {
  return (request, executor) => middleware1(request, middlewareToExecutor(middleware2, executor));
}
function middlewareToExecutor(middleware, executor) {
  return request => middleware(request, executor);
}

function createApiBuilderFromCtpClient(ctpClient, baseUri) {
  return new ApiRoot({
    executeRequest: ctpClient.execute,
    baseUri: baseUri
  });
}

export { ApiRoot, createApiBuilderFromCtpClient, createExecutorFromMiddlewares };
